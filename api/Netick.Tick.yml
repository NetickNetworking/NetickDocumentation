### YamlMime:ManagedReference
items:
- uid: Netick.Tick
  commentId: T:Netick.Tick
  id: Tick
  parent: Netick
  children:
  - Netick.Tick.#ctor(System.Int32)
  - Netick.Tick.Equals(Netick.Tick)
  - Netick.Tick.Equals(System.Object)
  - Netick.Tick.GetHashCode
  - Netick.Tick.InvalidTick
  - Netick.Tick.IsValid
  - Netick.Tick.TickValue
  - Netick.Tick.ToString
  - Netick.Tick.op_Addition(Netick.Tick,System.Int32)
  - Netick.Tick.op_Equality(Netick.Tick,Netick.Tick)
  - Netick.Tick.op_GreaterThan(Netick.Tick,Netick.Tick)
  - Netick.Tick.op_GreaterThanOrEqual(Netick.Tick,Netick.Tick)
  - Netick.Tick.op_Implicit(Netick.Tick)~System.Int32
  - Netick.Tick.op_Implicit(System.Int32)~Netick.Tick
  - Netick.Tick.op_Increment(Netick.Tick)
  - Netick.Tick.op_Inequality(Netick.Tick,Netick.Tick)
  - Netick.Tick.op_LessThan(Netick.Tick,Netick.Tick)
  - Netick.Tick.op_LessThanOrEqual(Netick.Tick,Netick.Tick)
  - Netick.Tick.op_Modulus(Netick.Tick,System.Int32)
  - Netick.Tick.op_Subtraction(Netick.Tick,Netick.Tick)
  - Netick.Tick.op_Subtraction(Netick.Tick,System.Int32)
  langs:
  - csharp
  - vb
  name: Tick
  nameWithType: Tick
  fullName: Netick.Tick
  type: Struct
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public struct Tick : IEquatable<Tick>'
    content.vb: Public Structure Tick Implements IEquatable(Of Tick)
  implements:
  - System.IEquatable{Netick.Tick}
  inheritedMembers:
  - System.Object.GetType
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Netick.Tick.TickValue
  commentId: F:Netick.Tick.TickValue
  id: TickValue
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: TickValue
  nameWithType: Tick.TickValue
  fullName: Netick.Tick.TickValue
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int TickValue
    return:
      type: System.Int32
    content.vb: Public TickValue As Integer
- uid: Netick.Tick.InvalidTick
  commentId: F:Netick.Tick.InvalidTick
  id: InvalidTick
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: InvalidTick
  nameWithType: Tick.InvalidTick
  fullName: Netick.Tick.InvalidTick
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static Tick InvalidTick
    return:
      type: Netick.Tick
    content.vb: Public Shared InvalidTick As Tick
- uid: Netick.Tick.#ctor(System.Int32)
  commentId: M:Netick.Tick.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: Tick(int)
  nameWithType: Tick.Tick(int)
  fullName: Netick.Tick.Tick(int)
  type: Constructor
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Tick(int rawValue)
    parameters:
    - id: rawValue
      type: System.Int32
    content.vb: Public Sub New(rawValue As Integer)
  overload: Netick.Tick.#ctor*
  nameWithType.vb: Tick.New(Integer)
  fullName.vb: Netick.Tick.New(Integer)
  name.vb: New(Integer)
- uid: Netick.Tick.op_Addition(Netick.Tick,System.Int32)
  commentId: M:Netick.Tick.op_Addition(Netick.Tick,System.Int32)
  id: op_Addition(Netick.Tick,System.Int32)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator +(Tick, int)
  nameWithType: Tick.operator +(Tick, int)
  fullName: Netick.Tick.operator +(Netick.Tick, int)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static Tick operator +(Tick a, int b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: System.Int32
    return:
      type: Netick.Tick
    content.vb: Public Shared Operator +(a As Tick, b As Integer) As Tick
  overload: Netick.Tick.op_Addition*
  nameWithType.vb: Tick.+(Tick, Integer)
  fullName.vb: Netick.Tick.+(Netick.Tick, Integer)
  name.vb: +(Tick, Integer)
- uid: Netick.Tick.op_Subtraction(Netick.Tick,System.Int32)
  commentId: M:Netick.Tick.op_Subtraction(Netick.Tick,System.Int32)
  id: op_Subtraction(Netick.Tick,System.Int32)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator -(Tick, int)
  nameWithType: Tick.operator -(Tick, int)
  fullName: Netick.Tick.operator -(Netick.Tick, int)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static Tick operator -(Tick a, int b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: System.Int32
    return:
      type: Netick.Tick
    content.vb: Public Shared Operator -(a As Tick, b As Integer) As Tick
  overload: Netick.Tick.op_Subtraction*
  nameWithType.vb: Tick.-(Tick, Integer)
  fullName.vb: Netick.Tick.-(Netick.Tick, Integer)
  name.vb: -(Tick, Integer)
- uid: Netick.Tick.op_Modulus(Netick.Tick,System.Int32)
  commentId: M:Netick.Tick.op_Modulus(Netick.Tick,System.Int32)
  id: op_Modulus(Netick.Tick,System.Int32)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator %(Tick, int)
  nameWithType: Tick.operator %(Tick, int)
  fullName: Netick.Tick.operator %(Netick.Tick, int)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static int operator %(Tick a, int b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Operator Mod(a As Tick, b As Integer) As Integer
  overload: Netick.Tick.op_Modulus*
  nameWithType.vb: Tick.Mod(Tick, Integer)
  fullName.vb: Netick.Tick.Mod(Netick.Tick, Integer)
  name.vb: Mod(Tick, Integer)
- uid: Netick.Tick.op_Subtraction(Netick.Tick,Netick.Tick)
  commentId: M:Netick.Tick.op_Subtraction(Netick.Tick,Netick.Tick)
  id: op_Subtraction(Netick.Tick,Netick.Tick)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator -(Tick, Tick)
  nameWithType: Tick.operator -(Tick, Tick)
  fullName: Netick.Tick.operator -(Netick.Tick, Netick.Tick)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static int operator -(Tick a, Tick b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: Netick.Tick
    return:
      type: System.Int32
    content.vb: Public Shared Operator -(a As Tick, b As Tick) As Integer
  overload: Netick.Tick.op_Subtraction*
  nameWithType.vb: Tick.-(Tick, Tick)
  fullName.vb: Netick.Tick.-(Netick.Tick, Netick.Tick)
  name.vb: -(Tick, Tick)
- uid: Netick.Tick.op_Increment(Netick.Tick)
  commentId: M:Netick.Tick.op_Increment(Netick.Tick)
  id: op_Increment(Netick.Tick)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator ++(Tick)
  nameWithType: Tick.operator ++(Tick)
  fullName: Netick.Tick.operator ++(Netick.Tick)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static Tick operator ++(Tick a)
    parameters:
    - id: a
      type: Netick.Tick
    return:
      type: Netick.Tick
    content.vb: Public Shared Function op_Increment(a As Tick) As Tick
  overload: Netick.Tick.op_Increment*
  nameWithType.vb: Tick.op_Increment(Tick)
  fullName.vb: Netick.Tick.op_Increment(Netick.Tick)
  name.vb: op_Increment(Tick)
- uid: Netick.Tick.op_GreaterThan(Netick.Tick,Netick.Tick)
  commentId: M:Netick.Tick.op_GreaterThan(Netick.Tick,Netick.Tick)
  id: op_GreaterThan(Netick.Tick,Netick.Tick)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator >(Tick, Tick)
  nameWithType: Tick.operator >(Tick, Tick)
  fullName: Netick.Tick.operator >(Netick.Tick, Netick.Tick)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static bool operator >(Tick a, Tick b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: Netick.Tick
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >(a As Tick, b As Tick) As Boolean
  overload: Netick.Tick.op_GreaterThan*
  nameWithType.vb: Tick.>(Tick, Tick)
  fullName.vb: Netick.Tick.>(Netick.Tick, Netick.Tick)
  name.vb: '>(Tick, Tick)'
- uid: Netick.Tick.op_LessThan(Netick.Tick,Netick.Tick)
  commentId: M:Netick.Tick.op_LessThan(Netick.Tick,Netick.Tick)
  id: op_LessThan(Netick.Tick,Netick.Tick)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator <(Tick, Tick)
  nameWithType: Tick.operator <(Tick, Tick)
  fullName: Netick.Tick.operator <(Netick.Tick, Netick.Tick)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static bool operator <(Tick a, Tick b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: Netick.Tick
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(a As Tick, b As Tick) As Boolean
  overload: Netick.Tick.op_LessThan*
  nameWithType.vb: Tick.<(Tick, Tick)
  fullName.vb: Netick.Tick.<(Netick.Tick, Netick.Tick)
  name.vb: <(Tick, Tick)
- uid: Netick.Tick.op_GreaterThanOrEqual(Netick.Tick,Netick.Tick)
  commentId: M:Netick.Tick.op_GreaterThanOrEqual(Netick.Tick,Netick.Tick)
  id: op_GreaterThanOrEqual(Netick.Tick,Netick.Tick)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator >=(Tick, Tick)
  nameWithType: Tick.operator >=(Tick, Tick)
  fullName: Netick.Tick.operator >=(Netick.Tick, Netick.Tick)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static bool operator >=(Tick a, Tick b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: Netick.Tick
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(a As Tick, b As Tick) As Boolean
  overload: Netick.Tick.op_GreaterThanOrEqual*
  nameWithType.vb: Tick.>=(Tick, Tick)
  fullName.vb: Netick.Tick.>=(Netick.Tick, Netick.Tick)
  name.vb: '>=(Tick, Tick)'
- uid: Netick.Tick.op_LessThanOrEqual(Netick.Tick,Netick.Tick)
  commentId: M:Netick.Tick.op_LessThanOrEqual(Netick.Tick,Netick.Tick)
  id: op_LessThanOrEqual(Netick.Tick,Netick.Tick)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator <=(Tick, Tick)
  nameWithType: Tick.operator <=(Tick, Tick)
  fullName: Netick.Tick.operator <=(Netick.Tick, Netick.Tick)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static bool operator <=(Tick a, Tick b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: Netick.Tick
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(a As Tick, b As Tick) As Boolean
  overload: Netick.Tick.op_LessThanOrEqual*
  nameWithType.vb: Tick.<=(Tick, Tick)
  fullName.vb: Netick.Tick.<=(Netick.Tick, Netick.Tick)
  name.vb: <=(Tick, Tick)
- uid: Netick.Tick.op_Equality(Netick.Tick,Netick.Tick)
  commentId: M:Netick.Tick.op_Equality(Netick.Tick,Netick.Tick)
  id: op_Equality(Netick.Tick,Netick.Tick)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator ==(Tick, Tick)
  nameWithType: Tick.operator ==(Tick, Tick)
  fullName: Netick.Tick.operator ==(Netick.Tick, Netick.Tick)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static bool operator ==(Tick a, Tick b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: Netick.Tick
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Tick, b As Tick) As Boolean
  overload: Netick.Tick.op_Equality*
  nameWithType.vb: Tick.=(Tick, Tick)
  fullName.vb: Netick.Tick.=(Netick.Tick, Netick.Tick)
  name.vb: =(Tick, Tick)
- uid: Netick.Tick.op_Inequality(Netick.Tick,Netick.Tick)
  commentId: M:Netick.Tick.op_Inequality(Netick.Tick,Netick.Tick)
  id: op_Inequality(Netick.Tick,Netick.Tick)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: operator !=(Tick, Tick)
  nameWithType: Tick.operator !=(Tick, Tick)
  fullName: Netick.Tick.operator !=(Netick.Tick, Netick.Tick)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static bool operator !=(Tick a, Tick b)
    parameters:
    - id: a
      type: Netick.Tick
    - id: b
      type: Netick.Tick
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Tick, b As Tick) As Boolean
  overload: Netick.Tick.op_Inequality*
  nameWithType.vb: Tick.<>(Tick, Tick)
  fullName.vb: Netick.Tick.<>(Netick.Tick, Netick.Tick)
  name.vb: <>(Tick, Tick)
- uid: Netick.Tick.op_Implicit(System.Int32)~Netick.Tick
  commentId: M:Netick.Tick.op_Implicit(System.Int32)~Netick.Tick
  id: op_Implicit(System.Int32)~Netick.Tick
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: implicit operator Tick(int)
  nameWithType: Tick.implicit operator Tick(int)
  fullName: Netick.Tick.implicit operator Netick.Tick(int)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static implicit operator Tick(int val)
    parameters:
    - id: val
      type: System.Int32
    return:
      type: Netick.Tick
    content.vb: Public Shared Widening Operator CType(val As Integer) As Tick
  overload: Netick.Tick.op_Implicit*
  nameWithType.vb: Tick.CType(Integer)
  fullName.vb: Netick.Tick.CType(Integer)
  name.vb: CType(Integer)
- uid: Netick.Tick.op_Implicit(Netick.Tick)~System.Int32
  commentId: M:Netick.Tick.op_Implicit(Netick.Tick)~System.Int32
  id: op_Implicit(Netick.Tick)~System.Int32
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: implicit operator int(Tick)
  nameWithType: Tick.implicit operator int(Tick)
  fullName: Netick.Tick.implicit operator int(Netick.Tick)
  type: Operator
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static implicit operator int(Tick val)
    parameters:
    - id: val
      type: Netick.Tick
    return:
      type: System.Int32
    content.vb: Public Shared Widening Operator CType(val As Tick) As Integer
  overload: Netick.Tick.op_Implicit*
  nameWithType.vb: Tick.CType(Tick)
  fullName.vb: Netick.Tick.CType(Netick.Tick)
  name.vb: CType(Tick)
- uid: Netick.Tick.GetHashCode
  commentId: M:Netick.Tick.GetHashCode
  id: GetHashCode
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Tick.GetHashCode()
  fullName: Netick.Tick.GetHashCode()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Netick.Tick.GetHashCode*
- uid: Netick.Tick.Equals(System.Object)
  commentId: M:Netick.Tick.Equals(System.Object)
  id: Equals(System.Object)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Tick.Equals(object)
  fullName: Netick.Tick.Equals(object)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Netick.Tick.Equals*
  nameWithType.vb: Tick.Equals(Object)
  fullName.vb: Netick.Tick.Equals(Object)
  name.vb: Equals(Object)
- uid: Netick.Tick.Equals(Netick.Tick)
  commentId: M:Netick.Tick.Equals(Netick.Tick)
  id: Equals(Netick.Tick)
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: Equals(Tick)
  nameWithType: Tick.Equals(Tick)
  fullName: Netick.Tick.Equals(Netick.Tick)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public bool Equals(Tick other)
    parameters:
    - id: other
      type: Netick.Tick
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Tick) As Boolean
  overload: Netick.Tick.Equals*
  implements:
  - System.IEquatable{Netick.Tick}.Equals(Netick.Tick)
- uid: Netick.Tick.ToString
  commentId: M:Netick.Tick.ToString
  id: ToString
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Tick.ToString()
  fullName: Netick.Tick.ToString()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Netick.Tick.ToString*
- uid: Netick.Tick.IsValid
  commentId: P:Netick.Tick.IsValid
  id: IsValid
  parent: Netick.Tick
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: Tick.IsValid
  fullName: Netick.Tick.IsValid
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: Netick.Tick.IsValid*
references:
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: System.IEquatable{Netick.Tick}
  commentId: T:System.IEquatable{Netick.Tick}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Tick>
  nameWithType: IEquatable<Tick>
  fullName: System.IEquatable<Netick.Tick>
  nameWithType.vb: IEquatable(Of Tick)
  fullName.vb: System.IEquatable(Of Netick.Tick)
  name.vb: IEquatable(Of Tick)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Netick.Tick
    name: Tick
    isExternal: true
    href: Netick.Tick.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Netick.Tick
    name: Tick
    isExternal: true
    href: Netick.Tick.html
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Netick.Tick
  commentId: T:Netick.Tick
  parent: Netick
  isExternal: true
  href: Netick.Tick.html
  name: Tick
  nameWithType: Tick
  fullName: Netick.Tick
- uid: Netick.Tick.#ctor*
  commentId: Overload:Netick.Tick.#ctor
  isExternal: true
  href: Netick.Tick.html#Netick_Tick__ctor_System_Int32_
  name: Tick
  nameWithType: Tick.Tick
  fullName: Netick.Tick.Tick
  nameWithType.vb: Tick.New
  fullName.vb: Netick.Tick.New
  name.vb: New
- uid: Netick.Tick.op_Addition*
  commentId: Overload:Netick.Tick.op_Addition
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_Addition_Netick_Tick_System_Int32_
  name: operator +
  nameWithType: Tick.operator +
  fullName: Netick.Tick.operator +
  nameWithType.vb: Tick.+
  fullName.vb: Netick.Tick.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_Addition*
    name: +
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_Addition_Netick_Tick_System_Int32_
- uid: Netick.Tick.op_Subtraction*
  commentId: Overload:Netick.Tick.op_Subtraction
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_Subtraction_Netick_Tick_System_Int32_
  name: operator -
  nameWithType: Tick.operator -
  fullName: Netick.Tick.operator -
  nameWithType.vb: Tick.-
  fullName.vb: Netick.Tick.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_Subtraction*
    name: '-'
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_Subtraction_Netick_Tick_System_Int32_
- uid: Netick.Tick.op_Modulus*
  commentId: Overload:Netick.Tick.op_Modulus
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_Modulus_Netick_Tick_System_Int32_
  name: operator %
  nameWithType: Tick.operator %
  fullName: Netick.Tick.operator %
  nameWithType.vb: Tick.Mod
  fullName.vb: Netick.Tick.Mod
  name.vb: Mod
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_Modulus*
    name: '%'
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_Modulus_Netick_Tick_System_Int32_
- uid: Netick.Tick.op_Increment*
  commentId: Overload:Netick.Tick.op_Increment
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_Increment_Netick_Tick_
  name: operator ++
  nameWithType: Tick.operator ++
  fullName: Netick.Tick.operator ++
  nameWithType.vb: Tick.op_Increment
  fullName.vb: Netick.Tick.op_Increment
  name.vb: op_Increment
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_Increment*
    name: ++
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_Increment_Netick_Tick_
- uid: Netick.Tick.op_GreaterThan*
  commentId: Overload:Netick.Tick.op_GreaterThan
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_GreaterThan_Netick_Tick_Netick_Tick_
  name: operator >
  nameWithType: Tick.operator >
  fullName: Netick.Tick.operator >
  nameWithType.vb: Tick.>
  fullName.vb: Netick.Tick.>
  name.vb: '>'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_GreaterThan*
    name: '>'
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_GreaterThan_Netick_Tick_Netick_Tick_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Netick.Tick.op_LessThan*
  commentId: Overload:Netick.Tick.op_LessThan
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_LessThan_Netick_Tick_Netick_Tick_
  name: operator <
  nameWithType: Tick.operator <
  fullName: Netick.Tick.operator <
  nameWithType.vb: Tick.<
  fullName.vb: Netick.Tick.<
  name.vb: <
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_LessThan*
    name: <
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_LessThan_Netick_Tick_Netick_Tick_
- uid: Netick.Tick.op_GreaterThanOrEqual*
  commentId: Overload:Netick.Tick.op_GreaterThanOrEqual
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_GreaterThanOrEqual_Netick_Tick_Netick_Tick_
  name: operator >=
  nameWithType: Tick.operator >=
  fullName: Netick.Tick.operator >=
  nameWithType.vb: Tick.>=
  fullName.vb: Netick.Tick.>=
  name.vb: '>='
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_GreaterThanOrEqual*
    name: '>='
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_GreaterThanOrEqual_Netick_Tick_Netick_Tick_
- uid: Netick.Tick.op_LessThanOrEqual*
  commentId: Overload:Netick.Tick.op_LessThanOrEqual
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_LessThanOrEqual_Netick_Tick_Netick_Tick_
  name: operator <=
  nameWithType: Tick.operator <=
  fullName: Netick.Tick.operator <=
  nameWithType.vb: Tick.<=
  fullName.vb: Netick.Tick.<=
  name.vb: <=
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_LessThanOrEqual*
    name: <=
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_LessThanOrEqual_Netick_Tick_Netick_Tick_
- uid: Netick.Tick.op_Equality*
  commentId: Overload:Netick.Tick.op_Equality
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_Equality_Netick_Tick_Netick_Tick_
  name: operator ==
  nameWithType: Tick.operator ==
  fullName: Netick.Tick.operator ==
  nameWithType.vb: Tick.=
  fullName.vb: Netick.Tick.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_Equality*
    name: ==
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_Equality_Netick_Tick_Netick_Tick_
- uid: Netick.Tick.op_Inequality*
  commentId: Overload:Netick.Tick.op_Inequality
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_op_Inequality_Netick_Tick_Netick_Tick_
  name: operator !=
  nameWithType: Tick.operator !=
  fullName: Netick.Tick.operator !=
  nameWithType.vb: Tick.<>
  fullName.vb: Netick.Tick.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Netick.Tick.op_Inequality*
    name: '!='
    isExternal: true
    href: Netick.Tick.html#Netick_Tick_op_Inequality_Netick_Tick_Netick_Tick_
- uid: Netick.Tick.op_Implicit*
  commentId: Overload:Netick.Tick.op_Implicit
  name: implicit operator
  nameWithType: Tick.implicit operator
  fullName: Netick.Tick.implicit operator
  nameWithType.vb: Tick.CType
  fullName.vb: Netick.Tick.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Netick.Tick.GetHashCode*
  commentId: Overload:Netick.Tick.GetHashCode
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_GetHashCode
  name: GetHashCode
  nameWithType: Tick.GetHashCode
  fullName: Netick.Tick.GetHashCode
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Netick.Tick.Equals*
  commentId: Overload:Netick.Tick.Equals
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_Equals_System_Object_
  name: Equals
  nameWithType: Tick.Equals
  fullName: Netick.Tick.Equals
- uid: System.IEquatable{Netick.Tick}.Equals(Netick.Tick)
  commentId: M:System.IEquatable{Netick.Tick}.Equals(Netick.Tick)
  parent: System.IEquatable{Netick.Tick}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Tick)
  nameWithType: IEquatable<Tick>.Equals(Tick)
  fullName: System.IEquatable<Netick.Tick>.Equals(Netick.Tick)
  nameWithType.vb: IEquatable(Of Tick).Equals(Tick)
  fullName.vb: System.IEquatable(Of Netick.Tick).Equals(Netick.Tick)
  spec.csharp:
  - uid: System.IEquatable{Netick.Tick}.Equals(Netick.Tick)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Netick.Tick
    name: Tick
    isExternal: true
    href: Netick.Tick.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Netick.Tick}.Equals(Netick.Tick)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Netick.Tick
    name: Tick
    isExternal: true
    href: Netick.Tick.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Netick.Tick.ToString*
  commentId: Overload:Netick.Tick.ToString
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_ToString
  name: ToString
  nameWithType: Tick.ToString
  fullName: Netick.Tick.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Netick.Tick.IsValid*
  commentId: Overload:Netick.Tick.IsValid
  isExternal: true
  href: Netick.Tick.html#Netick_Tick_IsValid
  name: IsValid
  nameWithType: Tick.IsValid
  fullName: Netick.Tick.IsValid

### YamlMime:ManagedReference
items:
- uid: Netick.NetickEngine
  commentId: T:Netick.NetickEngine
  id: NetickEngine
  parent: Netick
  children:
  - Netick.NetickEngine.#ctor
  - Netick.NetickEngine.AllEntities
  - Netick.NetickEngine.AttachBehaviour(Netick.INetickScript,System.Boolean)
  - Netick.NetickEngine.AuthoritativeTick
  - Netick.NetickEngine.Client
  - Netick.NetickEngine.ClientSimulation
  - Netick.NetickEngine.ClientSimulationCallbacks
  - Netick.NetickEngine.Config
  - Netick.NetickEngine.Connect(System.Int32,System.String,System.Byte[],System.Int32)
  - Netick.NetickEngine.ConnectHost
  - Netick.NetickEngine.ConnectedClients
  - Netick.NetickEngine.ConnectedPlayers
  - Netick.NetickEngine.ContainsPlayer(Netick.NetworkPlayerId)
  - Netick.NetickEngine.CopyWorldStateTo(System.Int32,System.Byte*)
  - Netick.NetickEngine.CopyWorldStateTo(System.Int32,System.Byte[])
  - Netick.NetickEngine.CurrentRpcCaller
  - Netick.NetickEngine.CurrentRpcSource
  - Netick.NetickEngine.DestroyEntity(Netick.Entity,System.Boolean,System.Boolean)
  - Netick.NetickEngine.DetachBehaviour(Netick.INetickScript)
  - Netick.NetickEngine.DisconnectFromServer
  - Netick.NetickEngine.DisconnectHost
  - Netick.NetickEngine.Entities
  - Netick.NetickEngine.FetchInput``1(``0@,System.Boolean@,Netick.Entity,System.Int32)
  - Netick.NetickEngine.FixedDeltaTime
  - Netick.NetickEngine.GameVersion
  - Netick.NetickEngine.GetBehaviourOrder(System.Type)
  - Netick.NetickEngine.GetBehavioursOfType``1(System.Collections.Generic.List{``0})
  - Netick.NetickEngine.GetInput``1(System.Int32)
  - Netick.NetickEngine.GetPlayerById(Netick.NetworkPlayerId)
  - Netick.NetickEngine.GetPlayerEntity(Netick.NetworkPlayerId)
  - Netick.NetickEngine.GetWorldStateBlockCount
  - Netick.NetickEngine.GetWorldStateBlockSize
  - Netick.NetickEngine.GetWorldStateTotalSize
  - Netick.NetickEngine.InKBps
  - Netick.NetickEngine.InPacketLoss
  - Netick.NetickEngine.InterestManagement
  - Netick.NetickEngine.InterpolationDelay
  - Netick.NetickEngine.IsClient
  - Netick.NetickEngine.IsConnected
  - Netick.NetickEngine.IsFirstNetworkFixedUpdateCall
  - Netick.NetickEngine.IsIMEnabled
  - Netick.NetickEngine.IsInputEnabled
  - Netick.NetickEngine.IsInvokingNetworkRender
  - Netick.NetickEngine.IsLagCompensationDebugEnabled
  - Netick.NetickEngine.IsLastNetworkFixedUpdateCall
  - Netick.NetickEngine.IsLoggingEnabled
  - Netick.NetickEngine.IsOffline
  - Netick.NetickEngine.IsProfilingEnabled
  - Netick.NetickEngine.IsRecording
  - Netick.NetickEngine.IsReplayEnabled
  - Netick.NetickEngine.IsReplaying
  - Netick.NetickEngine.IsResimulating
  - Netick.NetickEngine.IsRunning
  - Netick.NetickEngine.IsServer
  - Netick.NetickEngine.Kick(Netick.ServerConnection)
  - Netick.NetickEngine.LagCompensation
  - Netick.NetickEngine.LocalInterpolation
  - Netick.NetickEngine.LocalPeer
  - Netick.NetickEngine.LocalPlayer
  - Netick.NetickEngine.MaxClients
  - Netick.NetickEngine.MaxPlayers
  - Netick.NetickEngine.Monitor
  - Netick.NetickEngine.Name
  - Netick.NetickEngine.OnPostNetworkStart
  - Netick.NetickEngine.OnTickEnd
  - Netick.NetickEngine.OnTickStart
  - Netick.NetickEngine.OutKBps
  - Netick.NetickEngine.OutPacketLoss
  - Netick.NetickEngine.Players
  - Netick.NetickEngine.Port
  - Netick.NetickEngine.PostNetworkFixedUpdate
  - Netick.NetickEngine.PostNetworkRender
  - Netick.NetickEngine.PostNetworkUpdate
  - Netick.NetickEngine.PostResimulation
  - Netick.NetickEngine.PostRollback
  - Netick.NetickEngine.PreNetworkFixedUpdate
  - Netick.NetickEngine.PreNetworkRender
  - Netick.NetickEngine.PreNetworkUpdate
  - Netick.NetickEngine.PreRollback
  - Netick.NetickEngine.PredictedTick
  - Netick.NetickEngine.RTT
  - Netick.NetickEngine.RemoteInterpolation
  - Netick.NetickEngine.Render
  - Netick.NetickEngine.Replay
  - Netick.NetickEngine.ResetForSceneSwitch
  - Netick.NetickEngine.Server
  - Netick.NetickEngine.ServerEndPoint
  - Netick.NetickEngine.ServerSimulation
  - Netick.NetickEngine.SetInput``1(``0,System.Int32)
  - Netick.NetickEngine.SetPlayerEntity(Netick.NetworkPlayerId,Netick.Entity)
  - Netick.NetickEngine.Shutdown
  - Netick.NetickEngine.SimulatedLossIn
  - Netick.NetickEngine.SimulatedLossOut
  - Netick.NetickEngine.Simulation
  - Netick.NetickEngine.SimulationTick
  - Netick.NetickEngine.SnapshotTick
  - Netick.NetickEngine.Start(System.Object,System.String,System.Int32,Netick.NetickStartMode,Netick.IGameEngine,Netick.IReplayTransport,Netick.NetickConfigData,Netick.NetworkTransport,Netick.ReflectionData,Netick.INetickLogger,Netick.IMemoryAllocator,Netick.MismatchChecker,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - Netick.NetickEngine.StartMode
  - Netick.NetickEngine.StartPlayback(System.String)
  - Netick.NetickEngine.StartRecordingReplay(System.String)
  - Netick.NetickEngine.StopRecordingReplay
  - Netick.NetickEngine.Tick
  - Netick.NetickEngine.Timer
  - Netick.NetickEngine.Transport
  - Netick.NetickEngine.Update(System.Single,System.Single,System.Boolean)
  - Netick.NetickEngine.UserObject
  langs:
  - csharp
  - vb
  name: NetickEngine
  nameWithType: NetickEngine
  fullName: Netick.NetickEngine
  type: Class
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public sealed class NetickEngine
    content.vb: Public NotInheritable Class NetickEngine
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Netick.NetickEngine.IsProfilingEnabled
  commentId: F:Netick.NetickEngine.IsProfilingEnabled
  id: IsProfilingEnabled
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsProfilingEnabled
  nameWithType: NetickEngine.IsProfilingEnabled
  fullName: Netick.NetickEngine.IsProfilingEnabled
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsProfilingEnabled
    return:
      type: System.Boolean
    content.vb: Public IsProfilingEnabled As Boolean
- uid: Netick.NetickEngine.IsLoggingEnabled
  commentId: F:Netick.NetickEngine.IsLoggingEnabled
  id: IsLoggingEnabled
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsLoggingEnabled
  nameWithType: NetickEngine.IsLoggingEnabled
  fullName: Netick.NetickEngine.IsLoggingEnabled
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsLoggingEnabled
    return:
      type: System.Boolean
    content.vb: Public IsLoggingEnabled As Boolean
- uid: Netick.NetickEngine.IsLagCompensationDebugEnabled
  commentId: F:Netick.NetickEngine.IsLagCompensationDebugEnabled
  id: IsLagCompensationDebugEnabled
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsLagCompensationDebugEnabled
  nameWithType: NetickEngine.IsLagCompensationDebugEnabled
  fullName: Netick.NetickEngine.IsLagCompensationDebugEnabled
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsLagCompensationDebugEnabled
    return:
      type: System.Boolean
    content.vb: Public IsLagCompensationDebugEnabled As Boolean
- uid: Netick.NetickEngine.ClientSimulationCallbacks
  commentId: F:Netick.NetickEngine.ClientSimulationCallbacks
  id: ClientSimulationCallbacks
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: ClientSimulationCallbacks
  nameWithType: NetickEngine.ClientSimulationCallbacks
  fullName: Netick.NetickEngine.ClientSimulationCallbacks
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public readonly List<IClientSimulationCallbacks> ClientSimulationCallbacks
    return:
      type: System.Collections.Generic.List{Netick.IClientSimulationCallbacks}
    content.vb: Public ReadOnly ClientSimulationCallbacks As List(Of IClientSimulationCallbacks)
- uid: Netick.NetickEngine.SimulatedLossOut
  commentId: F:Netick.NetickEngine.SimulatedLossOut
  id: SimulatedLossOut
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: SimulatedLossOut
  nameWithType: NetickEngine.SimulatedLossOut
  fullName: Netick.NetickEngine.SimulatedLossOut
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float SimulatedLossOut
    return:
      type: System.Single
    content.vb: Public SimulatedLossOut As Single
- uid: Netick.NetickEngine.SimulatedLossIn
  commentId: F:Netick.NetickEngine.SimulatedLossIn
  id: SimulatedLossIn
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: SimulatedLossIn
  nameWithType: NetickEngine.SimulatedLossIn
  fullName: Netick.NetickEngine.SimulatedLossIn
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float SimulatedLossIn
    return:
      type: System.Single
    content.vb: Public SimulatedLossIn As Single
- uid: Netick.NetickEngine.Start(System.Object,System.String,System.Int32,Netick.NetickStartMode,Netick.IGameEngine,Netick.IReplayTransport,Netick.NetickConfigData,Netick.NetworkTransport,Netick.ReflectionData,Netick.INetickLogger,Netick.IMemoryAllocator,Netick.MismatchChecker,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Netick.NetickEngine.Start(System.Object,System.String,System.Int32,Netick.NetickStartMode,Netick.IGameEngine,Netick.IReplayTransport,Netick.NetickConfigData,Netick.NetworkTransport,Netick.ReflectionData,Netick.INetickLogger,Netick.IMemoryAllocator,Netick.MismatchChecker,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: Start(System.Object,System.String,System.Int32,Netick.NetickStartMode,Netick.IGameEngine,Netick.IReplayTransport,Netick.NetickConfigData,Netick.NetworkTransport,Netick.ReflectionData,Netick.INetickLogger,Netick.IMemoryAllocator,Netick.MismatchChecker,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Start(object, string, int, NetickStartMode, IGameEngine, IReplayTransport, NetickConfigData, NetworkTransport, ReflectionData, INetickLogger, IMemoryAllocator, MismatchChecker, int, int, bool, bool, bool, bool, bool)
  nameWithType: NetickEngine.Start(object, string, int, NetickStartMode, IGameEngine, IReplayTransport, NetickConfigData, NetworkTransport, ReflectionData, INetickLogger, IMemoryAllocator, MismatchChecker, int, int, bool, bool, bool, bool, bool)
  fullName: Netick.NetickEngine.Start(object, string, int, Netick.NetickStartMode, Netick.IGameEngine, Netick.IReplayTransport, Netick.NetickConfigData, Netick.NetworkTransport, Netick.ReflectionData, Netick.INetickLogger, Netick.IMemoryAllocator, Netick.MismatchChecker, int, int, bool, bool, bool, bool, bool)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void Start(object userObject, string name, int serverPort, NetickStartMode startMode, IGameEngine gameEngine, IReplayTransport replayBackend, NetickConfigData config, NetworkTransport transport, ReflectionData reflectionData, INetickLogger logger, IMemoryAllocator allocator, MismatchChecker mismatchChecker, int gameVersion, int numberOfThreads, bool aggressivePreAllocation, bool fastSerialization, bool isArm32Bit, bool isProfilingEnabled, bool isLoggingEnabled)
    parameters:
    - id: userObject
      type: System.Object
    - id: name
      type: System.String
    - id: serverPort
      type: System.Int32
    - id: startMode
      type: Netick.NetickStartMode
    - id: gameEngine
      type: Netick.IGameEngine
    - id: replayBackend
      type: Netick.IReplayTransport
    - id: config
      type: Netick.NetickConfigData
    - id: transport
      type: Netick.NetworkTransport
    - id: reflectionData
      type: Netick.ReflectionData
    - id: logger
      type: Netick.INetickLogger
    - id: allocator
      type: Netick.IMemoryAllocator
    - id: mismatchChecker
      type: Netick.MismatchChecker
    - id: gameVersion
      type: System.Int32
    - id: numberOfThreads
      type: System.Int32
    - id: aggressivePreAllocation
      type: System.Boolean
    - id: fastSerialization
      type: System.Boolean
    - id: isArm32Bit
      type: System.Boolean
    - id: isProfilingEnabled
      type: System.Boolean
    - id: isLoggingEnabled
      type: System.Boolean
    content.vb: Public Sub Start(userObject As Object, name As String, serverPort As Integer, startMode As NetickStartMode, gameEngine As IGameEngine, replayBackend As IReplayTransport, config As NetickConfigData, transport As NetworkTransport, reflectionData As ReflectionData, logger As INetickLogger, allocator As IMemoryAllocator, mismatchChecker As MismatchChecker, gameVersion As Integer, numberOfThreads As Integer, aggressivePreAllocation As Boolean, fastSerialization As Boolean, isArm32Bit As Boolean, isProfilingEnabled As Boolean, isLoggingEnabled As Boolean)
  overload: Netick.NetickEngine.Start*
  nameWithType.vb: NetickEngine.Start(Object, String, Integer, NetickStartMode, IGameEngine, IReplayTransport, NetickConfigData, NetworkTransport, ReflectionData, INetickLogger, IMemoryAllocator, MismatchChecker, Integer, Integer, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: Netick.NetickEngine.Start(Object, String, Integer, Netick.NetickStartMode, Netick.IGameEngine, Netick.IReplayTransport, Netick.NetickConfigData, Netick.NetworkTransport, Netick.ReflectionData, Netick.INetickLogger, Netick.IMemoryAllocator, Netick.MismatchChecker, Integer, Integer, Boolean, Boolean, Boolean, Boolean, Boolean)
  name.vb: Start(Object, String, Integer, NetickStartMode, IGameEngine, IReplayTransport, NetickConfigData, NetworkTransport, ReflectionData, INetickLogger, IMemoryAllocator, MismatchChecker, Integer, Integer, Boolean, Boolean, Boolean, Boolean, Boolean)
- uid: Netick.NetickEngine.Shutdown
  commentId: M:Netick.NetickEngine.Shutdown
  id: Shutdown
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: NetickEngine.Shutdown()
  fullName: Netick.NetickEngine.Shutdown()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void Shutdown()
    content.vb: Public Sub Shutdown()
  overload: Netick.NetickEngine.Shutdown*
- uid: Netick.NetickEngine.ResetForSceneSwitch
  commentId: M:Netick.NetickEngine.ResetForSceneSwitch
  id: ResetForSceneSwitch
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: ResetForSceneSwitch()
  nameWithType: NetickEngine.ResetForSceneSwitch()
  fullName: Netick.NetickEngine.ResetForSceneSwitch()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void ResetForSceneSwitch()
    content.vb: Public Sub ResetForSceneSwitch()
  overload: Netick.NetickEngine.ResetForSceneSwitch*
- uid: Netick.NetickEngine.Update(System.Single,System.Single,System.Boolean)
  commentId: M:Netick.NetickEngine.Update(System.Single,System.Single,System.Boolean)
  id: Update(System.Single,System.Single,System.Boolean)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Update(float, float, bool)
  nameWithType: NetickEngine.Update(float, float, bool)
  fullName: Netick.NetickEngine.Update(float, float, bool)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void Update(float deltaTime, float timeScale, bool simulate)
    parameters:
    - id: deltaTime
      type: System.Single
    - id: timeScale
      type: System.Single
    - id: simulate
      type: System.Boolean
    content.vb: Public Sub Update(deltaTime As Single, timeScale As Single, simulate As Boolean)
  overload: Netick.NetickEngine.Update*
  nameWithType.vb: NetickEngine.Update(Single, Single, Boolean)
  fullName.vb: Netick.NetickEngine.Update(Single, Single, Boolean)
  name.vb: Update(Single, Single, Boolean)
- uid: Netick.NetickEngine.Render
  commentId: M:Netick.NetickEngine.Render
  id: Render
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Render()
  nameWithType: NetickEngine.Render()
  fullName: Netick.NetickEngine.Render()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void Render()
    content.vb: Public Sub Render()
  overload: Netick.NetickEngine.Render*
- uid: Netick.NetickEngine.Connect(System.Int32,System.String,System.Byte[],System.Int32)
  commentId: M:Netick.NetickEngine.Connect(System.Int32,System.String,System.Byte[],System.Int32)
  id: Connect(System.Int32,System.String,System.Byte[],System.Int32)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Connect(int, string, byte[], int)
  nameWithType: NetickEngine.Connect(int, string, byte[], int)
  fullName: Netick.NetickEngine.Connect(int, string, byte[], int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void Connect(int port, string ip, byte[] connectionData = null, int connectionDataLength = 0)
    parameters:
    - id: port
      type: System.Int32
    - id: ip
      type: System.String
    - id: connectionData
      type: System.Byte[]
    - id: connectionDataLength
      type: System.Int32
    content.vb: Public Sub Connect(port As Integer, ip As String, connectionData As Byte() = Nothing, connectionDataLength As Integer = 0)
  overload: Netick.NetickEngine.Connect*
  nameWithType.vb: NetickEngine.Connect(Integer, String, Byte(), Integer)
  fullName.vb: Netick.NetickEngine.Connect(Integer, String, Byte(), Integer)
  name.vb: Connect(Integer, String, Byte(), Integer)
- uid: Netick.NetickEngine.Kick(Netick.ServerConnection)
  commentId: M:Netick.NetickEngine.Kick(Netick.ServerConnection)
  id: Kick(Netick.ServerConnection)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Kick(ServerConnection)
  nameWithType: NetickEngine.Kick(ServerConnection)
  fullName: Netick.NetickEngine.Kick(Netick.ServerConnection)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void Kick(ServerConnection connection)
    parameters:
    - id: connection
      type: Netick.ServerConnection
    content.vb: Public Sub Kick(connection As ServerConnection)
  overload: Netick.NetickEngine.Kick*
- uid: Netick.NetickEngine.DisconnectFromServer
  commentId: M:Netick.NetickEngine.DisconnectFromServer
  id: DisconnectFromServer
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: DisconnectFromServer()
  nameWithType: NetickEngine.DisconnectFromServer()
  fullName: Netick.NetickEngine.DisconnectFromServer()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void DisconnectFromServer()
    content.vb: Public Sub DisconnectFromServer()
  overload: Netick.NetickEngine.DisconnectFromServer*
- uid: Netick.NetickEngine.ConnectHost
  commentId: M:Netick.NetickEngine.ConnectHost
  id: ConnectHost
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: ConnectHost()
  nameWithType: NetickEngine.ConnectHost()
  fullName: Netick.NetickEngine.ConnectHost()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void ConnectHost()
    content.vb: Public Sub ConnectHost()
  overload: Netick.NetickEngine.ConnectHost*
- uid: Netick.NetickEngine.DisconnectHost
  commentId: M:Netick.NetickEngine.DisconnectHost
  id: DisconnectHost
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: DisconnectHost()
  nameWithType: NetickEngine.DisconnectHost()
  fullName: Netick.NetickEngine.DisconnectHost()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void DisconnectHost()
    content.vb: Public Sub DisconnectHost()
  overload: Netick.NetickEngine.DisconnectHost*
- uid: Netick.NetickEngine.StartRecordingReplay(System.String)
  commentId: M:Netick.NetickEngine.StartRecordingReplay(System.String)
  id: StartRecordingReplay(System.String)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: StartRecordingReplay(string)
  nameWithType: NetickEngine.StartRecordingReplay(string)
  fullName: Netick.NetickEngine.StartRecordingReplay(string)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void StartRecordingReplay(string replayAddress)
    parameters:
    - id: replayAddress
      type: System.String
    content.vb: Public Sub StartRecordingReplay(replayAddress As String)
  overload: Netick.NetickEngine.StartRecordingReplay*
  nameWithType.vb: NetickEngine.StartRecordingReplay(String)
  fullName.vb: Netick.NetickEngine.StartRecordingReplay(String)
  name.vb: StartRecordingReplay(String)
- uid: Netick.NetickEngine.StopRecordingReplay
  commentId: M:Netick.NetickEngine.StopRecordingReplay
  id: StopRecordingReplay
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: StopRecordingReplay()
  nameWithType: NetickEngine.StopRecordingReplay()
  fullName: Netick.NetickEngine.StopRecordingReplay()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Task StopRecordingReplay()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StopRecordingReplay() As Task
  overload: Netick.NetickEngine.StopRecordingReplay*
- uid: Netick.NetickEngine.StartPlayback(System.String)
  commentId: M:Netick.NetickEngine.StartPlayback(System.String)
  id: StartPlayback(System.String)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: StartPlayback(string)
  nameWithType: NetickEngine.StartPlayback(string)
  fullName: Netick.NetickEngine.StartPlayback(string)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void StartPlayback(string replayAddress)
    parameters:
    - id: replayAddress
      type: System.String
    content.vb: Public Sub StartPlayback(replayAddress As String)
  overload: Netick.NetickEngine.StartPlayback*
  nameWithType.vb: NetickEngine.StartPlayback(String)
  fullName.vb: Netick.NetickEngine.StartPlayback(String)
  name.vb: StartPlayback(String)
- uid: Netick.NetickEngine.GetInput``1(System.Int32)
  commentId: M:Netick.NetickEngine.GetInput``1(System.Int32)
  id: GetInput``1(System.Int32)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: GetInput<T>(int)
  nameWithType: NetickEngine.GetInput<T>(int)
  fullName: Netick.NetickEngine.GetInput<T>(int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public T GetInput<T>(int index = 0) where T : unmanaged'
    parameters:
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetInput(Of T As Structure)(index As Integer = 0) As T
  overload: Netick.NetickEngine.GetInput*
  nameWithType.vb: NetickEngine.GetInput(Of T)(Integer)
  fullName.vb: Netick.NetickEngine.GetInput(Of T)(Integer)
  name.vb: GetInput(Of T)(Integer)
- uid: Netick.NetickEngine.SetInput``1(``0,System.Int32)
  commentId: M:Netick.NetickEngine.SetInput``1(``0,System.Int32)
  id: SetInput``1(``0,System.Int32)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: SetInput<T>(T, int)
  nameWithType: NetickEngine.SetInput<T>(T, int)
  fullName: Netick.NetickEngine.SetInput<T>(T, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public void SetInput<T>(T input, int index = 0) where T : unmanaged'
    parameters:
    - id: input
      type: '{T}'
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub SetInput(Of T As Structure)(input As T, index As Integer = 0)
  overload: Netick.NetickEngine.SetInput*
  nameWithType.vb: NetickEngine.SetInput(Of T)(T, Integer)
  fullName.vb: Netick.NetickEngine.SetInput(Of T)(T, Integer)
  name.vb: SetInput(Of T)(T, Integer)
- uid: Netick.NetickEngine.FetchInput``1(``0@,System.Boolean@,Netick.Entity,System.Int32)
  commentId: M:Netick.NetickEngine.FetchInput``1(``0@,System.Boolean@,Netick.Entity,System.Int32)
  id: FetchInput``1(``0@,System.Boolean@,Netick.Entity,System.Int32)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: FetchInput<T>(out T, ref bool, Entity, int)
  nameWithType: NetickEngine.FetchInput<T>(out T, ref bool, Entity, int)
  fullName: Netick.NetickEngine.FetchInput<T>(out T, ref bool, Netick.Entity, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public bool FetchInput<T>(out T input, ref bool isDuplicated, Entity entity, int localPlayerIndex) where T : unmanaged'
    parameters:
    - id: input
      type: '{T}'
    - id: isDuplicated
      type: System.Boolean
    - id: entity
      type: Netick.Entity
    - id: localPlayerIndex
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function FetchInput(Of T As Structure)(input As T, isDuplicated As Boolean, entity As Entity, localPlayerIndex As Integer) As Boolean
  overload: Netick.NetickEngine.FetchInput*
  nameWithType.vb: NetickEngine.FetchInput(Of T)(T, Boolean, Entity, Integer)
  fullName.vb: Netick.NetickEngine.FetchInput(Of T)(T, Boolean, Netick.Entity, Integer)
  name.vb: FetchInput(Of T)(T, Boolean, Entity, Integer)
- uid: Netick.NetickEngine.GetPlayerEntity(Netick.NetworkPlayerId)
  commentId: M:Netick.NetickEngine.GetPlayerEntity(Netick.NetworkPlayerId)
  id: GetPlayerEntity(Netick.NetworkPlayerId)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: GetPlayerEntity(NetworkPlayerId)
  nameWithType: NetickEngine.GetPlayerEntity(NetworkPlayerId)
  fullName: Netick.NetickEngine.GetPlayerEntity(Netick.NetworkPlayerId)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Entity GetPlayerEntity(NetworkPlayerId playerId)
    parameters:
    - id: playerId
      type: Netick.NetworkPlayerId
    return:
      type: Netick.Entity
    content.vb: Public Function GetPlayerEntity(playerId As NetworkPlayerId) As Entity
  overload: Netick.NetickEngine.GetPlayerEntity*
- uid: Netick.NetickEngine.SetPlayerEntity(Netick.NetworkPlayerId,Netick.Entity)
  commentId: M:Netick.NetickEngine.SetPlayerEntity(Netick.NetworkPlayerId,Netick.Entity)
  id: SetPlayerEntity(Netick.NetworkPlayerId,Netick.Entity)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: SetPlayerEntity(NetworkPlayerId, Entity)
  nameWithType: NetickEngine.SetPlayerEntity(NetworkPlayerId, Entity)
  fullName: Netick.NetickEngine.SetPlayerEntity(Netick.NetworkPlayerId, Netick.Entity)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void SetPlayerEntity(NetworkPlayerId playerId, Entity entity)
    parameters:
    - id: playerId
      type: Netick.NetworkPlayerId
    - id: entity
      type: Netick.Entity
    content.vb: Public Sub SetPlayerEntity(playerId As NetworkPlayerId, entity As Entity)
  overload: Netick.NetickEngine.SetPlayerEntity*
- uid: Netick.NetickEngine.DestroyEntity(Netick.Entity,System.Boolean,System.Boolean)
  commentId: M:Netick.NetickEngine.DestroyEntity(Netick.Entity,System.Boolean,System.Boolean)
  id: DestroyEntity(Netick.Entity,System.Boolean,System.Boolean)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: DestroyEntity(Entity, bool, bool)
  nameWithType: NetickEngine.DestroyEntity(Entity, bool, bool)
  fullName: Netick.NetickEngine.DestroyEntity(Netick.Entity, bool, bool)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void DestroyEntity(Entity entity, bool instant, bool freeMemory)
    parameters:
    - id: entity
      type: Netick.Entity
    - id: instant
      type: System.Boolean
    - id: freeMemory
      type: System.Boolean
    content.vb: Public Sub DestroyEntity(entity As Entity, instant As Boolean, freeMemory As Boolean)
  overload: Netick.NetickEngine.DestroyEntity*
  nameWithType.vb: NetickEngine.DestroyEntity(Entity, Boolean, Boolean)
  fullName.vb: Netick.NetickEngine.DestroyEntity(Netick.Entity, Boolean, Boolean)
  name.vb: DestroyEntity(Entity, Boolean, Boolean)
- uid: Netick.NetickEngine.AttachBehaviour(Netick.INetickScript,System.Boolean)
  commentId: M:Netick.NetickEngine.AttachBehaviour(Netick.INetickScript,System.Boolean)
  id: AttachBehaviour(Netick.INetickScript,System.Boolean)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: AttachBehaviour(INetickScript, bool)
  nameWithType: NetickEngine.AttachBehaviour(INetickScript, bool)
  fullName: Netick.NetickEngine.AttachBehaviour(Netick.INetickScript, bool)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void AttachBehaviour(INetickScript behaviour, bool addToResimulationLoop = true)
    parameters:
    - id: behaviour
      type: Netick.INetickScript
    - id: addToResimulationLoop
      type: System.Boolean
    content.vb: Public Sub AttachBehaviour(behaviour As INetickScript, addToResimulationLoop As Boolean = True)
  overload: Netick.NetickEngine.AttachBehaviour*
  nameWithType.vb: NetickEngine.AttachBehaviour(INetickScript, Boolean)
  fullName.vb: Netick.NetickEngine.AttachBehaviour(Netick.INetickScript, Boolean)
  name.vb: AttachBehaviour(INetickScript, Boolean)
- uid: Netick.NetickEngine.DetachBehaviour(Netick.INetickScript)
  commentId: M:Netick.NetickEngine.DetachBehaviour(Netick.INetickScript)
  id: DetachBehaviour(Netick.INetickScript)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: DetachBehaviour(INetickScript)
  nameWithType: NetickEngine.DetachBehaviour(INetickScript)
  fullName: Netick.NetickEngine.DetachBehaviour(Netick.INetickScript)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void DetachBehaviour(INetickScript behaviour)
    parameters:
    - id: behaviour
      type: Netick.INetickScript
    content.vb: Public Sub DetachBehaviour(behaviour As INetickScript)
  overload: Netick.NetickEngine.DetachBehaviour*
- uid: Netick.NetickEngine.GetWorldStateTotalSize
  commentId: M:Netick.NetickEngine.GetWorldStateTotalSize
  id: GetWorldStateTotalSize
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: GetWorldStateTotalSize()
  nameWithType: NetickEngine.GetWorldStateTotalSize()
  fullName: Netick.NetickEngine.GetWorldStateTotalSize()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public long GetWorldStateTotalSize()
    return:
      type: System.Int64
    content.vb: Public Function GetWorldStateTotalSize() As Long
  overload: Netick.NetickEngine.GetWorldStateTotalSize*
- uid: Netick.NetickEngine.GetWorldStateBlockSize
  commentId: M:Netick.NetickEngine.GetWorldStateBlockSize
  id: GetWorldStateBlockSize
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: GetWorldStateBlockSize()
  nameWithType: NetickEngine.GetWorldStateBlockSize()
  fullName: Netick.NetickEngine.GetWorldStateBlockSize()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public long GetWorldStateBlockSize()
    return:
      type: System.Int64
    content.vb: Public Function GetWorldStateBlockSize() As Long
  overload: Netick.NetickEngine.GetWorldStateBlockSize*
- uid: Netick.NetickEngine.GetWorldStateBlockCount
  commentId: M:Netick.NetickEngine.GetWorldStateBlockCount
  id: GetWorldStateBlockCount
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: GetWorldStateBlockCount()
  nameWithType: NetickEngine.GetWorldStateBlockCount()
  fullName: Netick.NetickEngine.GetWorldStateBlockCount()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int GetWorldStateBlockCount()
    return:
      type: System.Int32
    content.vb: Public Function GetWorldStateBlockCount() As Integer
  overload: Netick.NetickEngine.GetWorldStateBlockCount*
- uid: Netick.NetickEngine.CopyWorldStateTo(System.Int32,System.Byte*)
  commentId: M:Netick.NetickEngine.CopyWorldStateTo(System.Int32,System.Byte*)
  id: CopyWorldStateTo(System.Int32,System.Byte*)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: CopyWorldStateTo(int, byte*)
  nameWithType: NetickEngine.CopyWorldStateTo(int, byte*)
  fullName: Netick.NetickEngine.CopyWorldStateTo(int, byte*)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void CopyWorldStateTo(int blockIndex, byte* target)
    parameters:
    - id: blockIndex
      type: System.Int32
    - id: target
      type: System.Byte*
    content.vb: Public Sub CopyWorldStateTo(blockIndex As Integer, target As Byte*)
  overload: Netick.NetickEngine.CopyWorldStateTo*
  nameWithType.vb: NetickEngine.CopyWorldStateTo(Integer, Byte*)
  fullName.vb: Netick.NetickEngine.CopyWorldStateTo(Integer, Byte*)
  name.vb: CopyWorldStateTo(Integer, Byte*)
- uid: Netick.NetickEngine.CopyWorldStateTo(System.Int32,System.Byte[])
  commentId: M:Netick.NetickEngine.CopyWorldStateTo(System.Int32,System.Byte[])
  id: CopyWorldStateTo(System.Int32,System.Byte[])
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: CopyWorldStateTo(int, byte[])
  nameWithType: NetickEngine.CopyWorldStateTo(int, byte[])
  fullName: Netick.NetickEngine.CopyWorldStateTo(int, byte[])
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void CopyWorldStateTo(int blockIndex, byte[] target)
    parameters:
    - id: blockIndex
      type: System.Int32
    - id: target
      type: System.Byte[]
    content.vb: Public Sub CopyWorldStateTo(blockIndex As Integer, target As Byte())
  overload: Netick.NetickEngine.CopyWorldStateTo*
  nameWithType.vb: NetickEngine.CopyWorldStateTo(Integer, Byte())
  fullName.vb: Netick.NetickEngine.CopyWorldStateTo(Integer, Byte())
  name.vb: CopyWorldStateTo(Integer, Byte())
- uid: Netick.NetickEngine.ContainsPlayer(Netick.NetworkPlayerId)
  commentId: M:Netick.NetickEngine.ContainsPlayer(Netick.NetworkPlayerId)
  id: ContainsPlayer(Netick.NetworkPlayerId)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: ContainsPlayer(NetworkPlayerId)
  nameWithType: NetickEngine.ContainsPlayer(NetworkPlayerId)
  fullName: Netick.NetickEngine.ContainsPlayer(Netick.NetworkPlayerId)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool ContainsPlayer(NetworkPlayerId playerId)
    parameters:
    - id: playerId
      type: Netick.NetworkPlayerId
    return:
      type: System.Boolean
    content.vb: Public Function ContainsPlayer(playerId As NetworkPlayerId) As Boolean
  overload: Netick.NetickEngine.ContainsPlayer*
- uid: Netick.NetickEngine.GetPlayerById(Netick.NetworkPlayerId)
  commentId: M:Netick.NetickEngine.GetPlayerById(Netick.NetworkPlayerId)
  id: GetPlayerById(Netick.NetworkPlayerId)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: GetPlayerById(NetworkPlayerId)
  nameWithType: NetickEngine.GetPlayerById(NetworkPlayerId)
  fullName: Netick.NetickEngine.GetPlayerById(Netick.NetworkPlayerId)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetworkPlayer GetPlayerById(NetworkPlayerId playerId)
    parameters:
    - id: playerId
      type: Netick.NetworkPlayerId
    return:
      type: Netick.NetworkPlayer
    content.vb: Public Function GetPlayerById(playerId As NetworkPlayerId) As NetworkPlayer
  overload: Netick.NetickEngine.GetPlayerById*
- uid: Netick.NetickEngine.GetBehaviourOrder(System.Type)
  commentId: M:Netick.NetickEngine.GetBehaviourOrder(System.Type)
  id: GetBehaviourOrder(System.Type)
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: GetBehaviourOrder(Type)
  nameWithType: NetickEngine.GetBehaviourOrder(Type)
  fullName: Netick.NetickEngine.GetBehaviourOrder(System.Type)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int GetBehaviourOrder(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Int32
    content.vb: Public Function GetBehaviourOrder(type As Type) As Integer
  overload: Netick.NetickEngine.GetBehaviourOrder*
- uid: Netick.NetickEngine.GetBehavioursOfType``1(System.Collections.Generic.List{``0})
  commentId: M:Netick.NetickEngine.GetBehavioursOfType``1(System.Collections.Generic.List{``0})
  id: GetBehavioursOfType``1(System.Collections.Generic.List{``0})
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: GetBehavioursOfType<T>(List<T>)
  nameWithType: NetickEngine.GetBehavioursOfType<T>(List<T>)
  fullName: Netick.NetickEngine.GetBehavioursOfType<T>(System.Collections.Generic.List<T>)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public void GetBehavioursOfType<T>(List<T> result) where T : INetickScript'
    parameters:
    - id: result
      type: System.Collections.Generic.List{{T}}
    typeParameters:
    - id: T
    content.vb: Public Sub GetBehavioursOfType(Of T As INetickScript)(result As List(Of T))
  overload: Netick.NetickEngine.GetBehavioursOfType*
  nameWithType.vb: NetickEngine.GetBehavioursOfType(Of T)(List(Of T))
  fullName.vb: Netick.NetickEngine.GetBehavioursOfType(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetBehavioursOfType(Of T)(List(Of T))
- uid: Netick.NetickEngine.#ctor
  commentId: M:Netick.NetickEngine.#ctor
  id: '#ctor'
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: NetickEngine()
  nameWithType: NetickEngine.NetickEngine()
  fullName: Netick.NetickEngine.NetickEngine()
  type: Constructor
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetickEngine()
    content.vb: Public Sub New()
  overload: Netick.NetickEngine.#ctor*
  nameWithType.vb: NetickEngine.New()
  fullName.vb: Netick.NetickEngine.New()
  name.vb: New()
- uid: Netick.NetickEngine.UserObject
  commentId: P:Netick.NetickEngine.UserObject
  id: UserObject
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: UserObject
  nameWithType: NetickEngine.UserObject
  fullName: Netick.NetickEngine.UserObject
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public object UserObject { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property UserObject As Object
  overload: Netick.NetickEngine.UserObject*
- uid: Netick.NetickEngine.Name
  commentId: P:Netick.NetickEngine.Name
  id: Name
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NetickEngine.Name
  fullName: Netick.NetickEngine.Name
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Netick.NetickEngine.Name*
- uid: Netick.NetickEngine.StartMode
  commentId: P:Netick.NetickEngine.StartMode
  id: StartMode
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: StartMode
  nameWithType: NetickEngine.StartMode
  fullName: Netick.NetickEngine.StartMode
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetickStartMode StartMode { get; }
    parameters: []
    return:
      type: Netick.NetickStartMode
    content.vb: Public ReadOnly Property StartMode As NetickStartMode
  overload: Netick.NetickEngine.StartMode*
- uid: Netick.NetickEngine.IsRunning
  commentId: P:Netick.NetickEngine.IsRunning
  id: IsRunning
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsRunning
  nameWithType: NetickEngine.IsRunning
  fullName: Netick.NetickEngine.IsRunning
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsRunning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRunning As Boolean
  overload: Netick.NetickEngine.IsRunning*
- uid: Netick.NetickEngine.IsOffline
  commentId: P:Netick.NetickEngine.IsOffline
  id: IsOffline
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsOffline
  nameWithType: NetickEngine.IsOffline
  fullName: Netick.NetickEngine.IsOffline
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsOffline { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOffline As Boolean
  overload: Netick.NetickEngine.IsOffline*
- uid: Netick.NetickEngine.IsServer
  commentId: P:Netick.NetickEngine.IsServer
  id: IsServer
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsServer
  nameWithType: NetickEngine.IsServer
  fullName: Netick.NetickEngine.IsServer
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsServer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsServer As Boolean
  overload: Netick.NetickEngine.IsServer*
- uid: Netick.NetickEngine.IsClient
  commentId: P:Netick.NetickEngine.IsClient
  id: IsClient
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsClient
  nameWithType: NetickEngine.IsClient
  fullName: Netick.NetickEngine.IsClient
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsClient { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClient As Boolean
  overload: Netick.NetickEngine.IsClient*
- uid: Netick.NetickEngine.IsReplaying
  commentId: P:Netick.NetickEngine.IsReplaying
  id: IsReplaying
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsReplaying
  nameWithType: NetickEngine.IsReplaying
  fullName: Netick.NetickEngine.IsReplaying
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsReplaying { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReplaying As Boolean
  overload: Netick.NetickEngine.IsReplaying*
- uid: Netick.NetickEngine.IsRecording
  commentId: P:Netick.NetickEngine.IsRecording
  id: IsRecording
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsRecording
  nameWithType: NetickEngine.IsRecording
  fullName: Netick.NetickEngine.IsRecording
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsRecording { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRecording As Boolean
  overload: Netick.NetickEngine.IsRecording*
- uid: Netick.NetickEngine.Port
  commentId: P:Netick.NetickEngine.Port
  id: Port
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: NetickEngine.Port
  fullName: Netick.NetickEngine.Port
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int Port { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Port As Integer
  overload: Netick.NetickEngine.Port*
- uid: Netick.NetickEngine.MaxClients
  commentId: P:Netick.NetickEngine.MaxClients
  id: MaxClients
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: MaxClients
  nameWithType: NetickEngine.MaxClients
  fullName: Netick.NetickEngine.MaxClients
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int MaxClients { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxClients As Integer
  overload: Netick.NetickEngine.MaxClients*
- uid: Netick.NetickEngine.MaxPlayers
  commentId: P:Netick.NetickEngine.MaxPlayers
  id: MaxPlayers
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: MaxPlayers
  nameWithType: NetickEngine.MaxPlayers
  fullName: Netick.NetickEngine.MaxPlayers
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int MaxPlayers { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxPlayers As Integer
  overload: Netick.NetickEngine.MaxPlayers*
- uid: Netick.NetickEngine.GameVersion
  commentId: P:Netick.NetickEngine.GameVersion
  id: GameVersion
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: GameVersion
  nameWithType: NetickEngine.GameVersion
  fullName: Netick.NetickEngine.GameVersion
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int GameVersion { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property GameVersion As Integer
  overload: Netick.NetickEngine.GameVersion*
- uid: Netick.NetickEngine.IsReplayEnabled
  commentId: P:Netick.NetickEngine.IsReplayEnabled
  id: IsReplayEnabled
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsReplayEnabled
  nameWithType: NetickEngine.IsReplayEnabled
  fullName: Netick.NetickEngine.IsReplayEnabled
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsReplayEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReplayEnabled As Boolean
  overload: Netick.NetickEngine.IsReplayEnabled*
- uid: Netick.NetickEngine.IsInputEnabled
  commentId: P:Netick.NetickEngine.IsInputEnabled
  id: IsInputEnabled
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsInputEnabled
  nameWithType: NetickEngine.IsInputEnabled
  fullName: Netick.NetickEngine.IsInputEnabled
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsInputEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsInputEnabled As Boolean
  overload: Netick.NetickEngine.IsInputEnabled*
- uid: Netick.NetickEngine.Config
  commentId: P:Netick.NetickEngine.Config
  id: Config
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: NetickEngine.Config
  fullName: Netick.NetickEngine.Config
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetickConfigData Config { get; }
    parameters: []
    return:
      type: Netick.NetickConfigData
    content.vb: Public ReadOnly Property Config As NetickConfigData
  overload: Netick.NetickEngine.Config*
- uid: Netick.NetickEngine.Transport
  commentId: P:Netick.NetickEngine.Transport
  id: Transport
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Transport
  nameWithType: NetickEngine.Transport
  fullName: Netick.NetickEngine.Transport
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetworkTransport Transport { get; }
    parameters: []
    return:
      type: Netick.NetworkTransport
    content.vb: Public ReadOnly Property Transport As NetworkTransport
  overload: Netick.NetickEngine.Transport*
- uid: Netick.NetickEngine.InterestManagement
  commentId: P:Netick.NetickEngine.InterestManagement
  id: InterestManagement
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: InterestManagement
  nameWithType: NetickEngine.InterestManagement
  fullName: Netick.NetickEngine.InterestManagement
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public InterestManagement InterestManagement { get; }
    parameters: []
    return:
      type: Netick.InterestManagement
    content.vb: Public ReadOnly Property InterestManagement As InterestManagement
  overload: Netick.NetickEngine.InterestManagement*
- uid: Netick.NetickEngine.LocalPeer
  commentId: P:Netick.NetickEngine.LocalPeer
  id: LocalPeer
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: LocalPeer
  nameWithType: NetickEngine.LocalPeer
  fullName: Netick.NetickEngine.LocalPeer
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetworkPeer LocalPeer { get; }
    parameters: []
    return:
      type: Netick.NetworkPeer
    content.vb: Public ReadOnly Property LocalPeer As NetworkPeer
  overload: Netick.NetickEngine.LocalPeer*
- uid: Netick.NetickEngine.LocalPlayer
  commentId: P:Netick.NetickEngine.LocalPlayer
  id: LocalPlayer
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: LocalPlayer
  nameWithType: NetickEngine.LocalPlayer
  fullName: Netick.NetickEngine.LocalPlayer
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetworkPeer LocalPlayer { get; }
    parameters: []
    return:
      type: Netick.NetworkPeer
    content.vb: Public ReadOnly Property LocalPlayer As NetworkPeer
  overload: Netick.NetickEngine.LocalPlayer*
- uid: Netick.NetickEngine.Client
  commentId: P:Netick.NetickEngine.Client
  id: Client
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: NetickEngine.Client
  fullName: Netick.NetickEngine.Client
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Client Client { get; }
    parameters: []
    return:
      type: Netick.Client
    content.vb: Public ReadOnly Property Client As Client
  overload: Netick.NetickEngine.Client*
- uid: Netick.NetickEngine.Server
  commentId: P:Netick.NetickEngine.Server
  id: Server
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: NetickEngine.Server
  fullName: Netick.NetickEngine.Server
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Server Server { get; }
    parameters: []
    return:
      type: Netick.Server
    content.vb: Public ReadOnly Property Server As Server
  overload: Netick.NetickEngine.Server*
- uid: Netick.NetickEngine.SnapshotTick
  commentId: P:Netick.NetickEngine.SnapshotTick
  id: SnapshotTick
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: SnapshotTick
  nameWithType: NetickEngine.SnapshotTick
  fullName: Netick.NetickEngine.SnapshotTick
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Tick SnapshotTick { get; }
    parameters: []
    return:
      type: Netick.Tick
    content.vb: Public ReadOnly Property SnapshotTick As Tick
  overload: Netick.NetickEngine.SnapshotTick*
- uid: Netick.NetickEngine.SimulationTick
  commentId: P:Netick.NetickEngine.SimulationTick
  id: SimulationTick
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: SimulationTick
  nameWithType: NetickEngine.SimulationTick
  fullName: Netick.NetickEngine.SimulationTick
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Tick SimulationTick { get; }
    parameters: []
    return:
      type: Netick.Tick
    content.vb: Public ReadOnly Property SimulationTick As Tick
  overload: Netick.NetickEngine.SimulationTick*
- uid: Netick.NetickEngine.ClientSimulation
  commentId: P:Netick.NetickEngine.ClientSimulation
  id: ClientSimulation
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: ClientSimulation
  nameWithType: NetickEngine.ClientSimulation
  fullName: Netick.NetickEngine.ClientSimulation
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public ClientSimulation ClientSimulation { get; }
    parameters: []
    return:
      type: Netick.ClientSimulation
    content.vb: Public ReadOnly Property ClientSimulation As ClientSimulation
  overload: Netick.NetickEngine.ClientSimulation*
- uid: Netick.NetickEngine.ServerSimulation
  commentId: P:Netick.NetickEngine.ServerSimulation
  id: ServerSimulation
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: ServerSimulation
  nameWithType: NetickEngine.ServerSimulation
  fullName: Netick.NetickEngine.ServerSimulation
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public ServerSimulation ServerSimulation { get; }
    parameters: []
    return:
      type: Netick.ServerSimulation
    content.vb: Public ReadOnly Property ServerSimulation As ServerSimulation
  overload: Netick.NetickEngine.ServerSimulation*
- uid: Netick.NetickEngine.Simulation
  commentId: P:Netick.NetickEngine.Simulation
  id: Simulation
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Simulation
  nameWithType: NetickEngine.Simulation
  fullName: Netick.NetickEngine.Simulation
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Simulation Simulation { get; }
    parameters: []
    return:
      type: Netick.Simulation
    content.vb: Public ReadOnly Property Simulation As Simulation
  overload: Netick.NetickEngine.Simulation*
- uid: Netick.NetickEngine.LagCompensation
  commentId: P:Netick.NetickEngine.LagCompensation
  id: LagCompensation
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: LagCompensation
  nameWithType: NetickEngine.LagCompensation
  fullName: Netick.NetickEngine.LagCompensation
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public INetickComponent LagCompensation { get; }
    parameters: []
    return:
      type: Netick.INetickComponent
    content.vb: Public ReadOnly Property LagCompensation As INetickComponent
  overload: Netick.NetickEngine.LagCompensation*
- uid: Netick.NetickEngine.Replay
  commentId: P:Netick.NetickEngine.Replay
  id: Replay
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Replay
  nameWithType: NetickEngine.Replay
  fullName: Netick.NetickEngine.Replay
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Replay Replay { get; }
    parameters: []
    return:
      type: Netick.Replay
    content.vb: Public ReadOnly Property Replay As Replay
  overload: Netick.NetickEngine.Replay*
- uid: Netick.NetickEngine.Timer
  commentId: P:Netick.NetickEngine.Timer
  id: Timer
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Timer
  nameWithType: NetickEngine.Timer
  fullName: Netick.NetickEngine.Timer
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public SimulationClock Timer { get; }
    parameters: []
    return:
      type: Netick.SimulationClock
    content.vb: Public ReadOnly Property Timer As SimulationClock
  overload: Netick.NetickEngine.Timer*
- uid: Netick.NetickEngine.LocalInterpolation
  commentId: P:Netick.NetickEngine.LocalInterpolation
  id: LocalInterpolation
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: LocalInterpolation
  nameWithType: NetickEngine.LocalInterpolation
  fullName: Netick.NetickEngine.LocalInterpolation
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public LocalInterpolation LocalInterpolation { get; }
    parameters: []
    return:
      type: Netick.LocalInterpolation
    content.vb: Public ReadOnly Property LocalInterpolation As LocalInterpolation
  overload: Netick.NetickEngine.LocalInterpolation*
- uid: Netick.NetickEngine.RemoteInterpolation
  commentId: P:Netick.NetickEngine.RemoteInterpolation
  id: RemoteInterpolation
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: RemoteInterpolation
  nameWithType: NetickEngine.RemoteInterpolation
  fullName: Netick.NetickEngine.RemoteInterpolation
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public RemoteInterpolation RemoteInterpolation { get; }
    parameters: []
    return:
      type: Netick.RemoteInterpolation
    content.vb: Public ReadOnly Property RemoteInterpolation As RemoteInterpolation
  overload: Netick.NetickEngine.RemoteInterpolation*
- uid: Netick.NetickEngine.AllEntities
  commentId: P:Netick.NetickEngine.AllEntities
  id: AllEntities
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: AllEntities
  nameWithType: NetickEngine.AllEntities
  fullName: Netick.NetickEngine.AllEntities
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public IReadOnlyDictionary<int, Entity> AllEntities { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.Int32,Netick.Entity}
    content.vb: Public ReadOnly Property AllEntities As IReadOnlyDictionary(Of Integer, Entity)
  overload: Netick.NetickEngine.AllEntities*
- uid: Netick.NetickEngine.Entities
  commentId: P:Netick.NetickEngine.Entities
  id: Entities
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Entities
  nameWithType: NetickEngine.Entities
  fullName: Netick.NetickEngine.Entities
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public IReadOnlyDictionary<int, Entity> Entities { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.Int32,Netick.Entity}
    content.vb: Public ReadOnly Property Entities As IReadOnlyDictionary(Of Integer, Entity)
  overload: Netick.NetickEngine.Entities*
- uid: Netick.NetickEngine.Players
  commentId: P:Netick.NetickEngine.Players
  id: Players
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Players
  nameWithType: NetickEngine.Players
  fullName: Netick.NetickEngine.Players
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public IReadOnlyList<NetworkPlayerId> Players { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Netick.NetworkPlayerId}
    content.vb: Public ReadOnly Property Players As IReadOnlyList(Of NetworkPlayerId)
  overload: Netick.NetickEngine.Players*
- uid: Netick.NetickEngine.ServerEndPoint
  commentId: P:Netick.NetickEngine.ServerEndPoint
  id: ServerEndPoint
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: ServerEndPoint
  nameWithType: NetickEngine.ServerEndPoint
  fullName: Netick.NetickEngine.ServerEndPoint
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public IEndPoint ServerEndPoint { get; }
    parameters: []
    return:
      type: Netick.IEndPoint
    content.vb: Public ReadOnly Property ServerEndPoint As IEndPoint
  overload: Netick.NetickEngine.ServerEndPoint*
- uid: Netick.NetickEngine.IsConnected
  commentId: P:Netick.NetickEngine.IsConnected
  id: IsConnected
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: NetickEngine.IsConnected
  fullName: Netick.NetickEngine.IsConnected
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConnected As Boolean
  overload: Netick.NetickEngine.IsConnected*
- uid: Netick.NetickEngine.FixedDeltaTime
  commentId: P:Netick.NetickEngine.FixedDeltaTime
  id: FixedDeltaTime
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: FixedDeltaTime
  nameWithType: NetickEngine.FixedDeltaTime
  fullName: Netick.NetickEngine.FixedDeltaTime
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float FixedDeltaTime { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property FixedDeltaTime As Single
  overload: Netick.NetickEngine.FixedDeltaTime*
- uid: Netick.NetickEngine.Tick
  commentId: P:Netick.NetickEngine.Tick
  id: Tick
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Tick
  nameWithType: NetickEngine.Tick
  fullName: Netick.NetickEngine.Tick
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Tick Tick { get; }
    parameters: []
    return:
      type: Netick.Tick
    content.vb: Public ReadOnly Property Tick As Tick
  overload: Netick.NetickEngine.Tick*
- uid: Netick.NetickEngine.AuthoritativeTick
  commentId: P:Netick.NetickEngine.AuthoritativeTick
  id: AuthoritativeTick
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: AuthoritativeTick
  nameWithType: NetickEngine.AuthoritativeTick
  fullName: Netick.NetickEngine.AuthoritativeTick
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Tick AuthoritativeTick { get; }
    parameters: []
    return:
      type: Netick.Tick
    content.vb: Public ReadOnly Property AuthoritativeTick As Tick
  overload: Netick.NetickEngine.AuthoritativeTick*
- uid: Netick.NetickEngine.PredictedTick
  commentId: P:Netick.NetickEngine.PredictedTick
  id: PredictedTick
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PredictedTick
  nameWithType: NetickEngine.PredictedTick
  fullName: Netick.NetickEngine.PredictedTick
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Tick PredictedTick { get; }
    parameters: []
    return:
      type: Netick.Tick
    content.vb: Public ReadOnly Property PredictedTick As Tick
  overload: Netick.NetickEngine.PredictedTick*
- uid: Netick.NetickEngine.IsFirstNetworkFixedUpdateCall
  commentId: P:Netick.NetickEngine.IsFirstNetworkFixedUpdateCall
  id: IsFirstNetworkFixedUpdateCall
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsFirstNetworkFixedUpdateCall
  nameWithType: NetickEngine.IsFirstNetworkFixedUpdateCall
  fullName: Netick.NetickEngine.IsFirstNetworkFixedUpdateCall
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsFirstNetworkFixedUpdateCall { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFirstNetworkFixedUpdateCall As Boolean
  overload: Netick.NetickEngine.IsFirstNetworkFixedUpdateCall*
- uid: Netick.NetickEngine.IsLastNetworkFixedUpdateCall
  commentId: P:Netick.NetickEngine.IsLastNetworkFixedUpdateCall
  id: IsLastNetworkFixedUpdateCall
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsLastNetworkFixedUpdateCall
  nameWithType: NetickEngine.IsLastNetworkFixedUpdateCall
  fullName: Netick.NetickEngine.IsLastNetworkFixedUpdateCall
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsLastNetworkFixedUpdateCall { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLastNetworkFixedUpdateCall As Boolean
  overload: Netick.NetickEngine.IsLastNetworkFixedUpdateCall*
- uid: Netick.NetickEngine.IsResimulating
  commentId: P:Netick.NetickEngine.IsResimulating
  id: IsResimulating
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsResimulating
  nameWithType: NetickEngine.IsResimulating
  fullName: Netick.NetickEngine.IsResimulating
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsResimulating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResimulating As Boolean
  overload: Netick.NetickEngine.IsResimulating*
- uid: Netick.NetickEngine.InKBps
  commentId: P:Netick.NetickEngine.InKBps
  id: InKBps
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: InKBps
  nameWithType: NetickEngine.InKBps
  fullName: Netick.NetickEngine.InKBps
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float InKBps { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property InKBps As Single
  overload: Netick.NetickEngine.InKBps*
- uid: Netick.NetickEngine.OutKBps
  commentId: P:Netick.NetickEngine.OutKBps
  id: OutKBps
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: OutKBps
  nameWithType: NetickEngine.OutKBps
  fullName: Netick.NetickEngine.OutKBps
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float OutKBps { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property OutKBps As Single
  overload: Netick.NetickEngine.OutKBps*
- uid: Netick.NetickEngine.InPacketLoss
  commentId: P:Netick.NetickEngine.InPacketLoss
  id: InPacketLoss
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: InPacketLoss
  nameWithType: NetickEngine.InPacketLoss
  fullName: Netick.NetickEngine.InPacketLoss
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float InPacketLoss { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property InPacketLoss As Single
  overload: Netick.NetickEngine.InPacketLoss*
- uid: Netick.NetickEngine.OutPacketLoss
  commentId: P:Netick.NetickEngine.OutPacketLoss
  id: OutPacketLoss
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: OutPacketLoss
  nameWithType: NetickEngine.OutPacketLoss
  fullName: Netick.NetickEngine.OutPacketLoss
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float OutPacketLoss { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property OutPacketLoss As Single
  overload: Netick.NetickEngine.OutPacketLoss*
- uid: Netick.NetickEngine.InterpolationDelay
  commentId: P:Netick.NetickEngine.InterpolationDelay
  id: InterpolationDelay
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: InterpolationDelay
  nameWithType: NetickEngine.InterpolationDelay
  fullName: Netick.NetickEngine.InterpolationDelay
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float InterpolationDelay { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property InterpolationDelay As Single
  overload: Netick.NetickEngine.InterpolationDelay*
- uid: Netick.NetickEngine.RTT
  commentId: P:Netick.NetickEngine.RTT
  id: RTT
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: RTT
  nameWithType: NetickEngine.RTT
  fullName: Netick.NetickEngine.RTT
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public double RTT { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property RTT As Double
  overload: Netick.NetickEngine.RTT*
- uid: Netick.NetickEngine.Monitor
  commentId: P:Netick.NetickEngine.Monitor
  id: Monitor
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: Monitor
  nameWithType: NetickEngine.Monitor
  fullName: Netick.NetickEngine.Monitor
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Monitor Monitor { get; }
    parameters: []
    return:
      type: Netick.Monitor
    content.vb: Public ReadOnly Property Monitor As Monitor
  overload: Netick.NetickEngine.Monitor*
- uid: Netick.NetickEngine.CurrentRpcSource
  commentId: P:Netick.NetickEngine.CurrentRpcSource
  id: CurrentRpcSource
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: CurrentRpcSource
  nameWithType: NetickEngine.CurrentRpcSource
  fullName: Netick.NetickEngine.CurrentRpcSource
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetworkConnection CurrentRpcSource { get; }
    parameters: []
    return:
      type: Netick.NetworkConnection
    content.vb: Public ReadOnly Property CurrentRpcSource As NetworkConnection
  overload: Netick.NetickEngine.CurrentRpcSource*
- uid: Netick.NetickEngine.CurrentRpcCaller
  commentId: P:Netick.NetickEngine.CurrentRpcCaller
  id: CurrentRpcCaller
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: CurrentRpcCaller
  nameWithType: NetickEngine.CurrentRpcCaller
  fullName: Netick.NetickEngine.CurrentRpcCaller
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetworkPlayer CurrentRpcCaller { get; }
    parameters: []
    return:
      type: Netick.NetworkPlayer
    content.vb: Public ReadOnly Property CurrentRpcCaller As NetworkPlayer
  overload: Netick.NetickEngine.CurrentRpcCaller*
- uid: Netick.NetickEngine.IsInvokingNetworkRender
  commentId: P:Netick.NetickEngine.IsInvokingNetworkRender
  id: IsInvokingNetworkRender
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsInvokingNetworkRender
  nameWithType: NetickEngine.IsInvokingNetworkRender
  fullName: Netick.NetickEngine.IsInvokingNetworkRender
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsInvokingNetworkRender { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvokingNetworkRender As Boolean
  overload: Netick.NetickEngine.IsInvokingNetworkRender*
- uid: Netick.NetickEngine.IsIMEnabled
  commentId: P:Netick.NetickEngine.IsIMEnabled
  id: IsIMEnabled
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: IsIMEnabled
  nameWithType: NetickEngine.IsIMEnabled
  fullName: Netick.NetickEngine.IsIMEnabled
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsIMEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIMEnabled As Boolean
  overload: Netick.NetickEngine.IsIMEnabled*
- uid: Netick.NetickEngine.PostNetworkUpdate
  commentId: P:Netick.NetickEngine.PostNetworkUpdate
  id: PostNetworkUpdate
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PostNetworkUpdate
  nameWithType: NetickEngine.PostNetworkUpdate
  fullName: Netick.NetickEngine.PostNetworkUpdate
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action PostNetworkUpdate { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property PostNetworkUpdate As Action
  overload: Netick.NetickEngine.PostNetworkUpdate*
- uid: Netick.NetickEngine.PreNetworkUpdate
  commentId: P:Netick.NetickEngine.PreNetworkUpdate
  id: PreNetworkUpdate
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PreNetworkUpdate
  nameWithType: NetickEngine.PreNetworkUpdate
  fullName: Netick.NetickEngine.PreNetworkUpdate
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action PreNetworkUpdate { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property PreNetworkUpdate As Action
  overload: Netick.NetickEngine.PreNetworkUpdate*
- uid: Netick.NetickEngine.PostNetworkRender
  commentId: P:Netick.NetickEngine.PostNetworkRender
  id: PostNetworkRender
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PostNetworkRender
  nameWithType: NetickEngine.PostNetworkRender
  fullName: Netick.NetickEngine.PostNetworkRender
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action PostNetworkRender { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property PostNetworkRender As Action
  overload: Netick.NetickEngine.PostNetworkRender*
- uid: Netick.NetickEngine.PreNetworkRender
  commentId: P:Netick.NetickEngine.PreNetworkRender
  id: PreNetworkRender
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PreNetworkRender
  nameWithType: NetickEngine.PreNetworkRender
  fullName: Netick.NetickEngine.PreNetworkRender
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action PreNetworkRender { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property PreNetworkRender As Action
  overload: Netick.NetickEngine.PreNetworkRender*
- uid: Netick.NetickEngine.PostNetworkFixedUpdate
  commentId: P:Netick.NetickEngine.PostNetworkFixedUpdate
  id: PostNetworkFixedUpdate
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PostNetworkFixedUpdate
  nameWithType: NetickEngine.PostNetworkFixedUpdate
  fullName: Netick.NetickEngine.PostNetworkFixedUpdate
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action PostNetworkFixedUpdate { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property PostNetworkFixedUpdate As Action
  overload: Netick.NetickEngine.PostNetworkFixedUpdate*
- uid: Netick.NetickEngine.PreNetworkFixedUpdate
  commentId: P:Netick.NetickEngine.PreNetworkFixedUpdate
  id: PreNetworkFixedUpdate
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PreNetworkFixedUpdate
  nameWithType: NetickEngine.PreNetworkFixedUpdate
  fullName: Netick.NetickEngine.PreNetworkFixedUpdate
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action PreNetworkFixedUpdate { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property PreNetworkFixedUpdate As Action
  overload: Netick.NetickEngine.PreNetworkFixedUpdate*
- uid: Netick.NetickEngine.PostResimulation
  commentId: P:Netick.NetickEngine.PostResimulation
  id: PostResimulation
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PostResimulation
  nameWithType: NetickEngine.PostResimulation
  fullName: Netick.NetickEngine.PostResimulation
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action PostResimulation { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property PostResimulation As Action
  overload: Netick.NetickEngine.PostResimulation*
- uid: Netick.NetickEngine.PreRollback
  commentId: P:Netick.NetickEngine.PreRollback
  id: PreRollback
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PreRollback
  nameWithType: NetickEngine.PreRollback
  fullName: Netick.NetickEngine.PreRollback
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action PreRollback { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property PreRollback As Action
  overload: Netick.NetickEngine.PreRollback*
- uid: Netick.NetickEngine.PostRollback
  commentId: P:Netick.NetickEngine.PostRollback
  id: PostRollback
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: PostRollback
  nameWithType: NetickEngine.PostRollback
  fullName: Netick.NetickEngine.PostRollback
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action PostRollback { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property PostRollback As Action
  overload: Netick.NetickEngine.PostRollback*
- uid: Netick.NetickEngine.OnPostNetworkStart
  commentId: P:Netick.NetickEngine.OnPostNetworkStart
  id: OnPostNetworkStart
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: OnPostNetworkStart
  nameWithType: NetickEngine.OnPostNetworkStart
  fullName: Netick.NetickEngine.OnPostNetworkStart
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action OnPostNetworkStart { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property OnPostNetworkStart As Action
  overload: Netick.NetickEngine.OnPostNetworkStart*
- uid: Netick.NetickEngine.OnTickEnd
  commentId: P:Netick.NetickEngine.OnTickEnd
  id: OnTickEnd
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: OnTickEnd
  nameWithType: NetickEngine.OnTickEnd
  fullName: Netick.NetickEngine.OnTickEnd
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action OnTickEnd { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property OnTickEnd As Action
  overload: Netick.NetickEngine.OnTickEnd*
- uid: Netick.NetickEngine.OnTickStart
  commentId: P:Netick.NetickEngine.OnTickStart
  id: OnTickStart
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: OnTickStart
  nameWithType: NetickEngine.OnTickStart
  fullName: Netick.NetickEngine.OnTickStart
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Action OnTickStart { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property OnTickStart As Action
  overload: Netick.NetickEngine.OnTickStart*
- uid: Netick.NetickEngine.ConnectedClients
  commentId: P:Netick.NetickEngine.ConnectedClients
  id: ConnectedClients
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: ConnectedClients
  nameWithType: NetickEngine.ConnectedClients
  fullName: Netick.NetickEngine.ConnectedClients
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: >-
      [Obsolete("This will be removed in the future, please use Players instead.")]

      public IReadOnlyList<ServerConnection> ConnectedClients { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Netick.ServerConnection}
    content.vb: >-
      <Obsolete("This will be removed in the future, please use Players instead.")>

      Public ReadOnly Property ConnectedClients As IReadOnlyList(Of ServerConnection)
  overload: Netick.NetickEngine.ConnectedClients*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This will be removed in the future, please use Players instead.
- uid: Netick.NetickEngine.ConnectedPlayers
  commentId: P:Netick.NetickEngine.ConnectedPlayers
  id: ConnectedPlayers
  parent: Netick.NetickEngine
  langs:
  - csharp
  - vb
  name: ConnectedPlayers
  nameWithType: NetickEngine.ConnectedPlayers
  fullName: Netick.NetickEngine.ConnectedPlayers
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: >-
      [Obsolete("This will be removed in the future, please use Players instead.")]

      public IReadOnlyList<NetworkPlayer> ConnectedPlayers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Netick.NetworkPlayer}
    content.vb: >-
      <Obsolete("This will be removed in the future, please use Players instead.")>

      Public ReadOnly Property ConnectedPlayers As IReadOnlyList(Of NetworkPlayer)
  overload: Netick.NetickEngine.ConnectedPlayers*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This will be removed in the future, please use Players instead.
references:
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.List{Netick.IClientSimulationCallbacks}
  commentId: T:System.Collections.Generic.List{Netick.IClientSimulationCallbacks}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IClientSimulationCallbacks>
  nameWithType: List<IClientSimulationCallbacks>
  fullName: System.Collections.Generic.List<Netick.IClientSimulationCallbacks>
  nameWithType.vb: List(Of IClientSimulationCallbacks)
  fullName.vb: System.Collections.Generic.List(Of Netick.IClientSimulationCallbacks)
  name.vb: List(Of IClientSimulationCallbacks)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Netick.IClientSimulationCallbacks
    name: IClientSimulationCallbacks
    isExternal: true
    href: Netick.IClientSimulationCallbacks.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Netick.IClientSimulationCallbacks
    name: IClientSimulationCallbacks
    isExternal: true
    href: Netick.IClientSimulationCallbacks.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Netick.NetickEngine.Start*
  commentId: Overload:Netick.NetickEngine.Start
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Start_System_Object_System_String_System_Int32_Netick_NetickStartMode_Netick_IGameEngine_Netick_IReplayTransport_Netick_NetickConfigData_Netick_NetworkTransport_Netick_ReflectionData_Netick_INetickLogger_Netick_IMemoryAllocator_Netick_MismatchChecker_System_Int32_System_Int32_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: Start
  nameWithType: NetickEngine.Start
  fullName: Netick.NetickEngine.Start
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Netick.NetickStartMode
  commentId: T:Netick.NetickStartMode
  parent: Netick
  isExternal: true
  href: Netick.NetickStartMode.html
  name: NetickStartMode
  nameWithType: NetickStartMode
  fullName: Netick.NetickStartMode
- uid: Netick.IGameEngine
  commentId: T:Netick.IGameEngine
  parent: Netick
  isExternal: true
  href: Netick.IGameEngine.html
  name: IGameEngine
  nameWithType: IGameEngine
  fullName: Netick.IGameEngine
- uid: Netick.IReplayTransport
  commentId: T:Netick.IReplayTransport
  parent: Netick
  isExternal: true
  href: Netick.IReplayTransport.html
  name: IReplayTransport
  nameWithType: IReplayTransport
  fullName: Netick.IReplayTransport
- uid: Netick.NetickConfigData
  commentId: T:Netick.NetickConfigData
  parent: Netick
  isExternal: true
  href: Netick.NetickConfigData.html
  name: NetickConfigData
  nameWithType: NetickConfigData
  fullName: Netick.NetickConfigData
- uid: Netick.NetworkTransport
  commentId: T:Netick.NetworkTransport
  parent: Netick
  isExternal: true
  href: Netick.NetworkTransport.html
  name: NetworkTransport
  nameWithType: NetworkTransport
  fullName: Netick.NetworkTransport
- uid: Netick.ReflectionData
  commentId: T:Netick.ReflectionData
  parent: Netick
  isExternal: true
  href: Netick.ReflectionData.html
  name: ReflectionData
  nameWithType: ReflectionData
  fullName: Netick.ReflectionData
- uid: Netick.INetickLogger
  commentId: T:Netick.INetickLogger
  parent: Netick
  isExternal: true
  href: Netick.INetickLogger.html
  name: INetickLogger
  nameWithType: INetickLogger
  fullName: Netick.INetickLogger
- uid: Netick.IMemoryAllocator
  commentId: T:Netick.IMemoryAllocator
  parent: Netick
  isExternal: true
  href: Netick.IMemoryAllocator.html
  name: IMemoryAllocator
  nameWithType: IMemoryAllocator
  fullName: Netick.IMemoryAllocator
- uid: Netick.MismatchChecker
  commentId: T:Netick.MismatchChecker
  parent: Netick
  isExternal: true
  href: Netick.MismatchChecker.html
  name: MismatchChecker
  nameWithType: MismatchChecker
  fullName: Netick.MismatchChecker
- uid: Netick.NetickEngine.Shutdown*
  commentId: Overload:Netick.NetickEngine.Shutdown
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Shutdown
  name: Shutdown
  nameWithType: NetickEngine.Shutdown
  fullName: Netick.NetickEngine.Shutdown
- uid: Netick.NetickEngine.ResetForSceneSwitch*
  commentId: Overload:Netick.NetickEngine.ResetForSceneSwitch
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_ResetForSceneSwitch
  name: ResetForSceneSwitch
  nameWithType: NetickEngine.ResetForSceneSwitch
  fullName: Netick.NetickEngine.ResetForSceneSwitch
- uid: Netick.NetickEngine.Update*
  commentId: Overload:Netick.NetickEngine.Update
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Update_System_Single_System_Single_System_Boolean_
  name: Update
  nameWithType: NetickEngine.Update
  fullName: Netick.NetickEngine.Update
- uid: Netick.NetickEngine.Render*
  commentId: Overload:Netick.NetickEngine.Render
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Render
  name: Render
  nameWithType: NetickEngine.Render
  fullName: Netick.NetickEngine.Render
- uid: Netick.NetickEngine.Connect*
  commentId: Overload:Netick.NetickEngine.Connect
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Connect_System_Int32_System_String_System_Byte___System_Int32_
  name: Connect
  nameWithType: NetickEngine.Connect
  fullName: Netick.NetickEngine.Connect
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Netick.NetickEngine.Kick*
  commentId: Overload:Netick.NetickEngine.Kick
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Kick_Netick_ServerConnection_
  name: Kick
  nameWithType: NetickEngine.Kick
  fullName: Netick.NetickEngine.Kick
- uid: Netick.ServerConnection
  commentId: T:Netick.ServerConnection
  parent: Netick
  isExternal: true
  href: Netick.ServerConnection.html
  name: ServerConnection
  nameWithType: ServerConnection
  fullName: Netick.ServerConnection
- uid: Netick.NetickEngine.DisconnectFromServer*
  commentId: Overload:Netick.NetickEngine.DisconnectFromServer
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_DisconnectFromServer
  name: DisconnectFromServer
  nameWithType: NetickEngine.DisconnectFromServer
  fullName: Netick.NetickEngine.DisconnectFromServer
- uid: Netick.NetickEngine.ConnectHost*
  commentId: Overload:Netick.NetickEngine.ConnectHost
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_ConnectHost
  name: ConnectHost
  nameWithType: NetickEngine.ConnectHost
  fullName: Netick.NetickEngine.ConnectHost
- uid: Netick.NetickEngine.DisconnectHost*
  commentId: Overload:Netick.NetickEngine.DisconnectHost
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_DisconnectHost
  name: DisconnectHost
  nameWithType: NetickEngine.DisconnectHost
  fullName: Netick.NetickEngine.DisconnectHost
- uid: Netick.NetickEngine.StartRecordingReplay*
  commentId: Overload:Netick.NetickEngine.StartRecordingReplay
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_StartRecordingReplay_System_String_
  name: StartRecordingReplay
  nameWithType: NetickEngine.StartRecordingReplay
  fullName: Netick.NetickEngine.StartRecordingReplay
- uid: Netick.NetickEngine.StopRecordingReplay*
  commentId: Overload:Netick.NetickEngine.StopRecordingReplay
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_StopRecordingReplay
  name: StopRecordingReplay
  nameWithType: NetickEngine.StopRecordingReplay
  fullName: Netick.NetickEngine.StopRecordingReplay
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Netick.NetickEngine.StartPlayback*
  commentId: Overload:Netick.NetickEngine.StartPlayback
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_StartPlayback_System_String_
  name: StartPlayback
  nameWithType: NetickEngine.StartPlayback
  fullName: Netick.NetickEngine.StartPlayback
- uid: Netick.NetickEngine.GetInput*
  commentId: Overload:Netick.NetickEngine.GetInput
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_GetInput__1_System_Int32_
  name: GetInput
  nameWithType: NetickEngine.GetInput
  fullName: Netick.NetickEngine.GetInput
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Netick.NetickEngine.SetInput*
  commentId: Overload:Netick.NetickEngine.SetInput
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_SetInput__1___0_System_Int32_
  name: SetInput
  nameWithType: NetickEngine.SetInput
  fullName: Netick.NetickEngine.SetInput
- uid: Netick.NetickEngine.FetchInput*
  commentId: Overload:Netick.NetickEngine.FetchInput
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_FetchInput__1___0__System_Boolean__Netick_Entity_System_Int32_
  name: FetchInput
  nameWithType: NetickEngine.FetchInput
  fullName: Netick.NetickEngine.FetchInput
- uid: Netick.Entity
  commentId: T:Netick.Entity
  parent: Netick
  isExternal: true
  href: Netick.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: Netick.Entity
- uid: Netick.NetickEngine.GetPlayerEntity*
  commentId: Overload:Netick.NetickEngine.GetPlayerEntity
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_GetPlayerEntity_Netick_NetworkPlayerId_
  name: GetPlayerEntity
  nameWithType: NetickEngine.GetPlayerEntity
  fullName: Netick.NetickEngine.GetPlayerEntity
- uid: Netick.NetworkPlayerId
  commentId: T:Netick.NetworkPlayerId
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayerId.html
  name: NetworkPlayerId
  nameWithType: NetworkPlayerId
  fullName: Netick.NetworkPlayerId
- uid: Netick.NetickEngine.SetPlayerEntity*
  commentId: Overload:Netick.NetickEngine.SetPlayerEntity
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_SetPlayerEntity_Netick_NetworkPlayerId_Netick_Entity_
  name: SetPlayerEntity
  nameWithType: NetickEngine.SetPlayerEntity
  fullName: Netick.NetickEngine.SetPlayerEntity
- uid: Netick.NetickEngine.DestroyEntity*
  commentId: Overload:Netick.NetickEngine.DestroyEntity
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_DestroyEntity_Netick_Entity_System_Boolean_System_Boolean_
  name: DestroyEntity
  nameWithType: NetickEngine.DestroyEntity
  fullName: Netick.NetickEngine.DestroyEntity
- uid: Netick.NetickEngine.AttachBehaviour*
  commentId: Overload:Netick.NetickEngine.AttachBehaviour
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_AttachBehaviour_Netick_INetickScript_System_Boolean_
  name: AttachBehaviour
  nameWithType: NetickEngine.AttachBehaviour
  fullName: Netick.NetickEngine.AttachBehaviour
- uid: Netick.INetickScript
  commentId: T:Netick.INetickScript
  parent: Netick
  isExternal: true
  href: Netick.INetickScript.html
  name: INetickScript
  nameWithType: INetickScript
  fullName: Netick.INetickScript
- uid: Netick.NetickEngine.DetachBehaviour*
  commentId: Overload:Netick.NetickEngine.DetachBehaviour
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_DetachBehaviour_Netick_INetickScript_
  name: DetachBehaviour
  nameWithType: NetickEngine.DetachBehaviour
  fullName: Netick.NetickEngine.DetachBehaviour
- uid: Netick.NetickEngine.GetWorldStateTotalSize*
  commentId: Overload:Netick.NetickEngine.GetWorldStateTotalSize
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_GetWorldStateTotalSize
  name: GetWorldStateTotalSize
  nameWithType: NetickEngine.GetWorldStateTotalSize
  fullName: Netick.NetickEngine.GetWorldStateTotalSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Netick.NetickEngine.GetWorldStateBlockSize*
  commentId: Overload:Netick.NetickEngine.GetWorldStateBlockSize
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_GetWorldStateBlockSize
  name: GetWorldStateBlockSize
  nameWithType: NetickEngine.GetWorldStateBlockSize
  fullName: Netick.NetickEngine.GetWorldStateBlockSize
- uid: Netick.NetickEngine.GetWorldStateBlockCount*
  commentId: Overload:Netick.NetickEngine.GetWorldStateBlockCount
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_GetWorldStateBlockCount
  name: GetWorldStateBlockCount
  nameWithType: NetickEngine.GetWorldStateBlockCount
  fullName: Netick.NetickEngine.GetWorldStateBlockCount
- uid: Netick.NetickEngine.CopyWorldStateTo*
  commentId: Overload:Netick.NetickEngine.CopyWorldStateTo
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_CopyWorldStateTo_System_Int32_System_Byte__
  name: CopyWorldStateTo
  nameWithType: NetickEngine.CopyWorldStateTo
  fullName: Netick.NetickEngine.CopyWorldStateTo
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: Netick.NetickEngine.ContainsPlayer*
  commentId: Overload:Netick.NetickEngine.ContainsPlayer
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_ContainsPlayer_Netick_NetworkPlayerId_
  name: ContainsPlayer
  nameWithType: NetickEngine.ContainsPlayer
  fullName: Netick.NetickEngine.ContainsPlayer
- uid: Netick.NetickEngine.GetPlayerById*
  commentId: Overload:Netick.NetickEngine.GetPlayerById
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_GetPlayerById_Netick_NetworkPlayerId_
  name: GetPlayerById
  nameWithType: NetickEngine.GetPlayerById
  fullName: Netick.NetickEngine.GetPlayerById
- uid: Netick.NetworkPlayer
  commentId: T:Netick.NetworkPlayer
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayer.html
  name: NetworkPlayer
  nameWithType: NetworkPlayer
  fullName: Netick.NetworkPlayer
- uid: Netick.NetickEngine.GetBehaviourOrder*
  commentId: Overload:Netick.NetickEngine.GetBehaviourOrder
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_GetBehaviourOrder_System_Type_
  name: GetBehaviourOrder
  nameWithType: NetickEngine.GetBehaviourOrder
  fullName: Netick.NetickEngine.GetBehaviourOrder
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Netick.NetickEngine.GetBehavioursOfType*
  commentId: Overload:Netick.NetickEngine.GetBehavioursOfType
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_GetBehavioursOfType__1_System_Collections_Generic_List___0__
  name: GetBehavioursOfType
  nameWithType: NetickEngine.GetBehavioursOfType
  fullName: Netick.NetickEngine.GetBehavioursOfType
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetickEngine.#ctor*
  commentId: Overload:Netick.NetickEngine.#ctor
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine__ctor
  name: NetickEngine
  nameWithType: NetickEngine.NetickEngine
  fullName: Netick.NetickEngine.NetickEngine
  nameWithType.vb: NetickEngine.New
  fullName.vb: Netick.NetickEngine.New
  name.vb: New
- uid: Netick.NetickEngine.UserObject*
  commentId: Overload:Netick.NetickEngine.UserObject
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_UserObject
  name: UserObject
  nameWithType: NetickEngine.UserObject
  fullName: Netick.NetickEngine.UserObject
- uid: Netick.NetickEngine.Name*
  commentId: Overload:Netick.NetickEngine.Name
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Name
  name: Name
  nameWithType: NetickEngine.Name
  fullName: Netick.NetickEngine.Name
- uid: Netick.NetickEngine.StartMode*
  commentId: Overload:Netick.NetickEngine.StartMode
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_StartMode
  name: StartMode
  nameWithType: NetickEngine.StartMode
  fullName: Netick.NetickEngine.StartMode
- uid: Netick.NetickEngine.IsRunning*
  commentId: Overload:Netick.NetickEngine.IsRunning
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsRunning
  name: IsRunning
  nameWithType: NetickEngine.IsRunning
  fullName: Netick.NetickEngine.IsRunning
- uid: Netick.NetickEngine.IsOffline*
  commentId: Overload:Netick.NetickEngine.IsOffline
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsOffline
  name: IsOffline
  nameWithType: NetickEngine.IsOffline
  fullName: Netick.NetickEngine.IsOffline
- uid: Netick.NetickEngine.IsServer*
  commentId: Overload:Netick.NetickEngine.IsServer
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsServer
  name: IsServer
  nameWithType: NetickEngine.IsServer
  fullName: Netick.NetickEngine.IsServer
- uid: Netick.NetickEngine.IsClient*
  commentId: Overload:Netick.NetickEngine.IsClient
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsClient
  name: IsClient
  nameWithType: NetickEngine.IsClient
  fullName: Netick.NetickEngine.IsClient
- uid: Netick.NetickEngine.IsReplaying*
  commentId: Overload:Netick.NetickEngine.IsReplaying
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsReplaying
  name: IsReplaying
  nameWithType: NetickEngine.IsReplaying
  fullName: Netick.NetickEngine.IsReplaying
- uid: Netick.NetickEngine.IsRecording*
  commentId: Overload:Netick.NetickEngine.IsRecording
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsRecording
  name: IsRecording
  nameWithType: NetickEngine.IsRecording
  fullName: Netick.NetickEngine.IsRecording
- uid: Netick.NetickEngine.Port*
  commentId: Overload:Netick.NetickEngine.Port
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Port
  name: Port
  nameWithType: NetickEngine.Port
  fullName: Netick.NetickEngine.Port
- uid: Netick.NetickEngine.MaxClients*
  commentId: Overload:Netick.NetickEngine.MaxClients
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_MaxClients
  name: MaxClients
  nameWithType: NetickEngine.MaxClients
  fullName: Netick.NetickEngine.MaxClients
- uid: Netick.NetickEngine.MaxPlayers*
  commentId: Overload:Netick.NetickEngine.MaxPlayers
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_MaxPlayers
  name: MaxPlayers
  nameWithType: NetickEngine.MaxPlayers
  fullName: Netick.NetickEngine.MaxPlayers
- uid: Netick.NetickEngine.GameVersion*
  commentId: Overload:Netick.NetickEngine.GameVersion
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_GameVersion
  name: GameVersion
  nameWithType: NetickEngine.GameVersion
  fullName: Netick.NetickEngine.GameVersion
- uid: Netick.NetickEngine.IsReplayEnabled*
  commentId: Overload:Netick.NetickEngine.IsReplayEnabled
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsReplayEnabled
  name: IsReplayEnabled
  nameWithType: NetickEngine.IsReplayEnabled
  fullName: Netick.NetickEngine.IsReplayEnabled
- uid: Netick.NetickEngine.IsInputEnabled*
  commentId: Overload:Netick.NetickEngine.IsInputEnabled
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsInputEnabled
  name: IsInputEnabled
  nameWithType: NetickEngine.IsInputEnabled
  fullName: Netick.NetickEngine.IsInputEnabled
- uid: Netick.NetickEngine.Config*
  commentId: Overload:Netick.NetickEngine.Config
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Config
  name: Config
  nameWithType: NetickEngine.Config
  fullName: Netick.NetickEngine.Config
- uid: Netick.NetickEngine.Transport*
  commentId: Overload:Netick.NetickEngine.Transport
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Transport
  name: Transport
  nameWithType: NetickEngine.Transport
  fullName: Netick.NetickEngine.Transport
- uid: Netick.NetickEngine.InterestManagement*
  commentId: Overload:Netick.NetickEngine.InterestManagement
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_InterestManagement
  name: InterestManagement
  nameWithType: NetickEngine.InterestManagement
  fullName: Netick.NetickEngine.InterestManagement
- uid: Netick.InterestManagement
  commentId: T:Netick.InterestManagement
  parent: Netick
  isExternal: true
  href: Netick.InterestManagement.html
  name: InterestManagement
  nameWithType: InterestManagement
  fullName: Netick.InterestManagement
- uid: Netick.NetickEngine.LocalPeer*
  commentId: Overload:Netick.NetickEngine.LocalPeer
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_LocalPeer
  name: LocalPeer
  nameWithType: NetickEngine.LocalPeer
  fullName: Netick.NetickEngine.LocalPeer
- uid: Netick.NetworkPeer
  commentId: T:Netick.NetworkPeer
  parent: Netick
  isExternal: true
  href: Netick.NetworkPeer.html
  name: NetworkPeer
  nameWithType: NetworkPeer
  fullName: Netick.NetworkPeer
- uid: Netick.NetickEngine.LocalPlayer*
  commentId: Overload:Netick.NetickEngine.LocalPlayer
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_LocalPlayer
  name: LocalPlayer
  nameWithType: NetickEngine.LocalPlayer
  fullName: Netick.NetickEngine.LocalPlayer
- uid: Netick.NetickEngine.Client*
  commentId: Overload:Netick.NetickEngine.Client
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Client
  name: Client
  nameWithType: NetickEngine.Client
  fullName: Netick.NetickEngine.Client
- uid: Netick.Client
  commentId: T:Netick.Client
  parent: Netick
  isExternal: true
  href: Netick.Client.html
  name: Client
  nameWithType: Client
  fullName: Netick.Client
- uid: Netick.NetickEngine.Server*
  commentId: Overload:Netick.NetickEngine.Server
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Server
  name: Server
  nameWithType: NetickEngine.Server
  fullName: Netick.NetickEngine.Server
- uid: Netick.Server
  commentId: T:Netick.Server
  parent: Netick
  isExternal: true
  href: Netick.Server.html
  name: Server
  nameWithType: Server
  fullName: Netick.Server
- uid: Netick.NetickEngine.SnapshotTick*
  commentId: Overload:Netick.NetickEngine.SnapshotTick
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_SnapshotTick
  name: SnapshotTick
  nameWithType: NetickEngine.SnapshotTick
  fullName: Netick.NetickEngine.SnapshotTick
- uid: Netick.Tick
  commentId: T:Netick.Tick
  parent: Netick
  isExternal: true
  href: Netick.Tick.html
  name: Tick
  nameWithType: Tick
  fullName: Netick.Tick
- uid: Netick.NetickEngine.SimulationTick*
  commentId: Overload:Netick.NetickEngine.SimulationTick
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_SimulationTick
  name: SimulationTick
  nameWithType: NetickEngine.SimulationTick
  fullName: Netick.NetickEngine.SimulationTick
- uid: Netick.NetickEngine.ClientSimulation*
  commentId: Overload:Netick.NetickEngine.ClientSimulation
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_ClientSimulation
  name: ClientSimulation
  nameWithType: NetickEngine.ClientSimulation
  fullName: Netick.NetickEngine.ClientSimulation
- uid: Netick.ClientSimulation
  commentId: T:Netick.ClientSimulation
  parent: Netick
  isExternal: true
  href: Netick.ClientSimulation.html
  name: ClientSimulation
  nameWithType: ClientSimulation
  fullName: Netick.ClientSimulation
- uid: Netick.NetickEngine.ServerSimulation*
  commentId: Overload:Netick.NetickEngine.ServerSimulation
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_ServerSimulation
  name: ServerSimulation
  nameWithType: NetickEngine.ServerSimulation
  fullName: Netick.NetickEngine.ServerSimulation
- uid: Netick.ServerSimulation
  commentId: T:Netick.ServerSimulation
  parent: Netick
  isExternal: true
  href: Netick.ServerSimulation.html
  name: ServerSimulation
  nameWithType: ServerSimulation
  fullName: Netick.ServerSimulation
- uid: Netick.NetickEngine.Simulation*
  commentId: Overload:Netick.NetickEngine.Simulation
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Simulation
  name: Simulation
  nameWithType: NetickEngine.Simulation
  fullName: Netick.NetickEngine.Simulation
- uid: Netick.Simulation
  commentId: T:Netick.Simulation
  parent: Netick
  isExternal: true
  href: Netick.Simulation.html
  name: Simulation
  nameWithType: Simulation
  fullName: Netick.Simulation
- uid: Netick.NetickEngine.LagCompensation*
  commentId: Overload:Netick.NetickEngine.LagCompensation
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_LagCompensation
  name: LagCompensation
  nameWithType: NetickEngine.LagCompensation
  fullName: Netick.NetickEngine.LagCompensation
- uid: Netick.INetickComponent
  commentId: T:Netick.INetickComponent
  parent: Netick
  isExternal: true
  href: Netick.INetickComponent.html
  name: INetickComponent
  nameWithType: INetickComponent
  fullName: Netick.INetickComponent
- uid: Netick.NetickEngine.Replay*
  commentId: Overload:Netick.NetickEngine.Replay
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Replay
  name: Replay
  nameWithType: NetickEngine.Replay
  fullName: Netick.NetickEngine.Replay
- uid: Netick.Replay
  commentId: T:Netick.Replay
  parent: Netick
  isExternal: true
  href: Netick.Replay.html
  name: Replay
  nameWithType: Replay
  fullName: Netick.Replay
- uid: Netick.NetickEngine.Timer*
  commentId: Overload:Netick.NetickEngine.Timer
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Timer
  name: Timer
  nameWithType: NetickEngine.Timer
  fullName: Netick.NetickEngine.Timer
- uid: Netick.SimulationClock
  commentId: T:Netick.SimulationClock
  parent: Netick
  isExternal: true
  href: Netick.SimulationClock.html
  name: SimulationClock
  nameWithType: SimulationClock
  fullName: Netick.SimulationClock
- uid: Netick.NetickEngine.LocalInterpolation*
  commentId: Overload:Netick.NetickEngine.LocalInterpolation
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_LocalInterpolation
  name: LocalInterpolation
  nameWithType: NetickEngine.LocalInterpolation
  fullName: Netick.NetickEngine.LocalInterpolation
- uid: Netick.LocalInterpolation
  commentId: T:Netick.LocalInterpolation
  parent: Netick
  isExternal: true
  href: Netick.LocalInterpolation.html
  name: LocalInterpolation
  nameWithType: LocalInterpolation
  fullName: Netick.LocalInterpolation
- uid: Netick.NetickEngine.RemoteInterpolation*
  commentId: Overload:Netick.NetickEngine.RemoteInterpolation
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_RemoteInterpolation
  name: RemoteInterpolation
  nameWithType: NetickEngine.RemoteInterpolation
  fullName: Netick.NetickEngine.RemoteInterpolation
- uid: Netick.RemoteInterpolation
  commentId: T:Netick.RemoteInterpolation
  parent: Netick
  isExternal: true
  href: Netick.RemoteInterpolation.html
  name: RemoteInterpolation
  nameWithType: RemoteInterpolation
  fullName: Netick.RemoteInterpolation
- uid: Netick.NetickEngine.AllEntities*
  commentId: Overload:Netick.NetickEngine.AllEntities
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_AllEntities
  name: AllEntities
  nameWithType: NetickEngine.AllEntities
  fullName: Netick.NetickEngine.AllEntities
- uid: System.Collections.Generic.IReadOnlyDictionary{System.Int32,Netick.Entity}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.Int32,Netick.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<int, Entity>
  nameWithType: IReadOnlyDictionary<int, Entity>
  fullName: System.Collections.Generic.IReadOnlyDictionary<int, Netick.Entity>
  nameWithType.vb: IReadOnlyDictionary(Of Integer, Entity)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of Integer, Netick.Entity)
  name.vb: IReadOnlyDictionary(Of Integer, Entity)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Netick.Entity
    name: Entity
    isExternal: true
    href: Netick.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Netick.Entity
    name: Entity
    isExternal: true
    href: Netick.Entity.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Netick.NetickEngine.Entities*
  commentId: Overload:Netick.NetickEngine.Entities
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Entities
  name: Entities
  nameWithType: NetickEngine.Entities
  fullName: Netick.NetickEngine.Entities
- uid: Netick.NetickEngine.Players*
  commentId: Overload:Netick.NetickEngine.Players
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Players
  name: Players
  nameWithType: NetickEngine.Players
  fullName: Netick.NetickEngine.Players
- uid: System.Collections.Generic.IReadOnlyList{Netick.NetworkPlayerId}
  commentId: T:System.Collections.Generic.IReadOnlyList{Netick.NetworkPlayerId}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<NetworkPlayerId>
  nameWithType: IReadOnlyList<NetworkPlayerId>
  fullName: System.Collections.Generic.IReadOnlyList<Netick.NetworkPlayerId>
  nameWithType.vb: IReadOnlyList(Of NetworkPlayerId)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Netick.NetworkPlayerId)
  name.vb: IReadOnlyList(Of NetworkPlayerId)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Netick.NetworkPlayerId
    name: NetworkPlayerId
    isExternal: true
    href: Netick.NetworkPlayerId.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Netick.NetworkPlayerId
    name: NetworkPlayerId
    isExternal: true
    href: Netick.NetworkPlayerId.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetickEngine.ServerEndPoint*
  commentId: Overload:Netick.NetickEngine.ServerEndPoint
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_ServerEndPoint
  name: ServerEndPoint
  nameWithType: NetickEngine.ServerEndPoint
  fullName: Netick.NetickEngine.ServerEndPoint
- uid: Netick.IEndPoint
  commentId: T:Netick.IEndPoint
  parent: Netick
  isExternal: true
  href: Netick.IEndPoint.html
  name: IEndPoint
  nameWithType: IEndPoint
  fullName: Netick.IEndPoint
- uid: Netick.NetickEngine.IsConnected*
  commentId: Overload:Netick.NetickEngine.IsConnected
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsConnected
  name: IsConnected
  nameWithType: NetickEngine.IsConnected
  fullName: Netick.NetickEngine.IsConnected
- uid: Netick.NetickEngine.FixedDeltaTime*
  commentId: Overload:Netick.NetickEngine.FixedDeltaTime
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_FixedDeltaTime
  name: FixedDeltaTime
  nameWithType: NetickEngine.FixedDeltaTime
  fullName: Netick.NetickEngine.FixedDeltaTime
- uid: Netick.NetickEngine.Tick*
  commentId: Overload:Netick.NetickEngine.Tick
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Tick
  name: Tick
  nameWithType: NetickEngine.Tick
  fullName: Netick.NetickEngine.Tick
- uid: Netick.NetickEngine.AuthoritativeTick*
  commentId: Overload:Netick.NetickEngine.AuthoritativeTick
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_AuthoritativeTick
  name: AuthoritativeTick
  nameWithType: NetickEngine.AuthoritativeTick
  fullName: Netick.NetickEngine.AuthoritativeTick
- uid: Netick.NetickEngine.PredictedTick*
  commentId: Overload:Netick.NetickEngine.PredictedTick
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PredictedTick
  name: PredictedTick
  nameWithType: NetickEngine.PredictedTick
  fullName: Netick.NetickEngine.PredictedTick
- uid: Netick.NetickEngine.IsFirstNetworkFixedUpdateCall*
  commentId: Overload:Netick.NetickEngine.IsFirstNetworkFixedUpdateCall
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsFirstNetworkFixedUpdateCall
  name: IsFirstNetworkFixedUpdateCall
  nameWithType: NetickEngine.IsFirstNetworkFixedUpdateCall
  fullName: Netick.NetickEngine.IsFirstNetworkFixedUpdateCall
- uid: Netick.NetickEngine.IsLastNetworkFixedUpdateCall*
  commentId: Overload:Netick.NetickEngine.IsLastNetworkFixedUpdateCall
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsLastNetworkFixedUpdateCall
  name: IsLastNetworkFixedUpdateCall
  nameWithType: NetickEngine.IsLastNetworkFixedUpdateCall
  fullName: Netick.NetickEngine.IsLastNetworkFixedUpdateCall
- uid: Netick.NetickEngine.IsResimulating*
  commentId: Overload:Netick.NetickEngine.IsResimulating
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsResimulating
  name: IsResimulating
  nameWithType: NetickEngine.IsResimulating
  fullName: Netick.NetickEngine.IsResimulating
- uid: Netick.NetickEngine.InKBps*
  commentId: Overload:Netick.NetickEngine.InKBps
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_InKBps
  name: InKBps
  nameWithType: NetickEngine.InKBps
  fullName: Netick.NetickEngine.InKBps
- uid: Netick.NetickEngine.OutKBps*
  commentId: Overload:Netick.NetickEngine.OutKBps
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_OutKBps
  name: OutKBps
  nameWithType: NetickEngine.OutKBps
  fullName: Netick.NetickEngine.OutKBps
- uid: Netick.NetickEngine.InPacketLoss*
  commentId: Overload:Netick.NetickEngine.InPacketLoss
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_InPacketLoss
  name: InPacketLoss
  nameWithType: NetickEngine.InPacketLoss
  fullName: Netick.NetickEngine.InPacketLoss
- uid: Netick.NetickEngine.OutPacketLoss*
  commentId: Overload:Netick.NetickEngine.OutPacketLoss
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_OutPacketLoss
  name: OutPacketLoss
  nameWithType: NetickEngine.OutPacketLoss
  fullName: Netick.NetickEngine.OutPacketLoss
- uid: Netick.NetickEngine.InterpolationDelay*
  commentId: Overload:Netick.NetickEngine.InterpolationDelay
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_InterpolationDelay
  name: InterpolationDelay
  nameWithType: NetickEngine.InterpolationDelay
  fullName: Netick.NetickEngine.InterpolationDelay
- uid: Netick.NetickEngine.RTT*
  commentId: Overload:Netick.NetickEngine.RTT
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_RTT
  name: RTT
  nameWithType: NetickEngine.RTT
  fullName: Netick.NetickEngine.RTT
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Netick.NetickEngine.Monitor*
  commentId: Overload:Netick.NetickEngine.Monitor
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_Monitor
  name: Monitor
  nameWithType: NetickEngine.Monitor
  fullName: Netick.NetickEngine.Monitor
- uid: Netick.Monitor
  commentId: T:Netick.Monitor
  parent: Netick
  isExternal: true
  href: Netick.Monitor.html
  name: Monitor
  nameWithType: Monitor
  fullName: Netick.Monitor
- uid: Netick.NetickEngine.CurrentRpcSource*
  commentId: Overload:Netick.NetickEngine.CurrentRpcSource
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_CurrentRpcSource
  name: CurrentRpcSource
  nameWithType: NetickEngine.CurrentRpcSource
  fullName: Netick.NetickEngine.CurrentRpcSource
- uid: Netick.NetworkConnection
  commentId: T:Netick.NetworkConnection
  parent: Netick
  isExternal: true
  href: Netick.NetworkConnection.html
  name: NetworkConnection
  nameWithType: NetworkConnection
  fullName: Netick.NetworkConnection
- uid: Netick.NetickEngine.CurrentRpcCaller*
  commentId: Overload:Netick.NetickEngine.CurrentRpcCaller
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_CurrentRpcCaller
  name: CurrentRpcCaller
  nameWithType: NetickEngine.CurrentRpcCaller
  fullName: Netick.NetickEngine.CurrentRpcCaller
- uid: Netick.NetickEngine.IsInvokingNetworkRender*
  commentId: Overload:Netick.NetickEngine.IsInvokingNetworkRender
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsInvokingNetworkRender
  name: IsInvokingNetworkRender
  nameWithType: NetickEngine.IsInvokingNetworkRender
  fullName: Netick.NetickEngine.IsInvokingNetworkRender
- uid: Netick.NetickEngine.IsIMEnabled*
  commentId: Overload:Netick.NetickEngine.IsIMEnabled
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_IsIMEnabled
  name: IsIMEnabled
  nameWithType: NetickEngine.IsIMEnabled
  fullName: Netick.NetickEngine.IsIMEnabled
- uid: Netick.NetickEngine.PostNetworkUpdate*
  commentId: Overload:Netick.NetickEngine.PostNetworkUpdate
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PostNetworkUpdate
  name: PostNetworkUpdate
  nameWithType: NetickEngine.PostNetworkUpdate
  fullName: Netick.NetickEngine.PostNetworkUpdate
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Netick.NetickEngine.PreNetworkUpdate*
  commentId: Overload:Netick.NetickEngine.PreNetworkUpdate
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PreNetworkUpdate
  name: PreNetworkUpdate
  nameWithType: NetickEngine.PreNetworkUpdate
  fullName: Netick.NetickEngine.PreNetworkUpdate
- uid: Netick.NetickEngine.PostNetworkRender*
  commentId: Overload:Netick.NetickEngine.PostNetworkRender
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PostNetworkRender
  name: PostNetworkRender
  nameWithType: NetickEngine.PostNetworkRender
  fullName: Netick.NetickEngine.PostNetworkRender
- uid: Netick.NetickEngine.PreNetworkRender*
  commentId: Overload:Netick.NetickEngine.PreNetworkRender
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PreNetworkRender
  name: PreNetworkRender
  nameWithType: NetickEngine.PreNetworkRender
  fullName: Netick.NetickEngine.PreNetworkRender
- uid: Netick.NetickEngine.PostNetworkFixedUpdate*
  commentId: Overload:Netick.NetickEngine.PostNetworkFixedUpdate
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PostNetworkFixedUpdate
  name: PostNetworkFixedUpdate
  nameWithType: NetickEngine.PostNetworkFixedUpdate
  fullName: Netick.NetickEngine.PostNetworkFixedUpdate
- uid: Netick.NetickEngine.PreNetworkFixedUpdate*
  commentId: Overload:Netick.NetickEngine.PreNetworkFixedUpdate
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PreNetworkFixedUpdate
  name: PreNetworkFixedUpdate
  nameWithType: NetickEngine.PreNetworkFixedUpdate
  fullName: Netick.NetickEngine.PreNetworkFixedUpdate
- uid: Netick.NetickEngine.PostResimulation*
  commentId: Overload:Netick.NetickEngine.PostResimulation
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PostResimulation
  name: PostResimulation
  nameWithType: NetickEngine.PostResimulation
  fullName: Netick.NetickEngine.PostResimulation
- uid: Netick.NetickEngine.PreRollback*
  commentId: Overload:Netick.NetickEngine.PreRollback
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PreRollback
  name: PreRollback
  nameWithType: NetickEngine.PreRollback
  fullName: Netick.NetickEngine.PreRollback
- uid: Netick.NetickEngine.PostRollback*
  commentId: Overload:Netick.NetickEngine.PostRollback
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_PostRollback
  name: PostRollback
  nameWithType: NetickEngine.PostRollback
  fullName: Netick.NetickEngine.PostRollback
- uid: Netick.NetickEngine.OnPostNetworkStart*
  commentId: Overload:Netick.NetickEngine.OnPostNetworkStart
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_OnPostNetworkStart
  name: OnPostNetworkStart
  nameWithType: NetickEngine.OnPostNetworkStart
  fullName: Netick.NetickEngine.OnPostNetworkStart
- uid: Netick.NetickEngine.OnTickEnd*
  commentId: Overload:Netick.NetickEngine.OnTickEnd
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_OnTickEnd
  name: OnTickEnd
  nameWithType: NetickEngine.OnTickEnd
  fullName: Netick.NetickEngine.OnTickEnd
- uid: Netick.NetickEngine.OnTickStart*
  commentId: Overload:Netick.NetickEngine.OnTickStart
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_OnTickStart
  name: OnTickStart
  nameWithType: NetickEngine.OnTickStart
  fullName: Netick.NetickEngine.OnTickStart
- uid: Netick.NetickEngine.ConnectedClients*
  commentId: Overload:Netick.NetickEngine.ConnectedClients
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_ConnectedClients
  name: ConnectedClients
  nameWithType: NetickEngine.ConnectedClients
  fullName: Netick.NetickEngine.ConnectedClients
- uid: System.Collections.Generic.IReadOnlyList{Netick.ServerConnection}
  commentId: T:System.Collections.Generic.IReadOnlyList{Netick.ServerConnection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<ServerConnection>
  nameWithType: IReadOnlyList<ServerConnection>
  fullName: System.Collections.Generic.IReadOnlyList<Netick.ServerConnection>
  nameWithType.vb: IReadOnlyList(Of ServerConnection)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Netick.ServerConnection)
  name.vb: IReadOnlyList(Of ServerConnection)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Netick.ServerConnection
    name: ServerConnection
    isExternal: true
    href: Netick.ServerConnection.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Netick.ServerConnection
    name: ServerConnection
    isExternal: true
    href: Netick.ServerConnection.html
  - name: )
- uid: Netick.NetickEngine.ConnectedPlayers*
  commentId: Overload:Netick.NetickEngine.ConnectedPlayers
  isExternal: true
  href: Netick.NetickEngine.html#Netick_NetickEngine_ConnectedPlayers
  name: ConnectedPlayers
  nameWithType: NetickEngine.ConnectedPlayers
  fullName: Netick.NetickEngine.ConnectedPlayers
- uid: System.Collections.Generic.IReadOnlyList{Netick.NetworkPlayer}
  commentId: T:System.Collections.Generic.IReadOnlyList{Netick.NetworkPlayer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<NetworkPlayer>
  nameWithType: IReadOnlyList<NetworkPlayer>
  fullName: System.Collections.Generic.IReadOnlyList<Netick.NetworkPlayer>
  nameWithType.vb: IReadOnlyList(Of NetworkPlayer)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Netick.NetworkPlayer)
  name.vb: IReadOnlyList(Of NetworkPlayer)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Netick.NetworkPlayer
    name: NetworkPlayer
    isExternal: true
    href: Netick.NetworkPlayer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Netick.NetworkPlayer
    name: NetworkPlayer
    isExternal: true
    href: Netick.NetworkPlayer.html
  - name: )

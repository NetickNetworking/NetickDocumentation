### YamlMime:ManagedReference
items:
- uid: Netick.Unity.NetworkEventsListener
  commentId: T:Netick.Unity.NetworkEventsListener
  id: NetworkEventsListener
  parent: Netick.Unity
  children:
  - Netick.Unity.NetworkEventsListener.#ctor
  - Netick.Unity.NetworkEventsListener.OnClientConnected(Netick.Unity.NetworkSandbox,Netick.NetworkConnection)
  - Netick.Unity.NetworkEventsListener.OnClientDisconnected(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,Netick.TransportDisconnectReason)
  - Netick.Unity.NetworkEventsListener.OnConnectFailed(Netick.Unity.NetworkSandbox,Netick.ConnectionFailedReason)
  - Netick.Unity.NetworkEventsListener.OnConnectRequest(Netick.Unity.NetworkSandbox,Netick.NetworkConnectionRequest)
  - Netick.Unity.NetworkEventsListener.OnConnectedToServer(Netick.Unity.NetworkSandbox,Netick.NetworkConnection)
  - Netick.Unity.NetworkEventsListener.OnDataReceived(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,System.Byte,System.Byte*,System.Int32,Netick.TransportDeliveryMethod)
  - Netick.Unity.NetworkEventsListener.OnDisconnectedFromServer(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,Netick.TransportDisconnectReason)
  - Netick.Unity.NetworkEventsListener.OnInput(Netick.Unity.NetworkSandbox)
  - Netick.Unity.NetworkEventsListener.OnMatchCreated(Netick.Unity.NetworkSandbox)
  - Netick.Unity.NetworkEventsListener.OnMatchListUpdate(Netick.Unity.NetworkSandbox,System.Collections.Generic.List{Netick.Session})
  - Netick.Unity.NetworkEventsListener.OnObjectCreated(Netick.Unity.NetworkObject)
  - Netick.Unity.NetworkEventsListener.OnObjectDestroyed(Netick.Unity.NetworkObject)
  - Netick.Unity.NetworkEventsListener.OnPlayerConnected(Netick.Unity.NetworkSandbox,Netick.NetworkPlayer)
  - Netick.Unity.NetworkEventsListener.OnPlayerDisconnected(Netick.Unity.NetworkSandbox,Netick.NetworkPlayer,Netick.TransportDisconnectReason)
  - Netick.Unity.NetworkEventsListener.OnPlayerJoined(Netick.Unity.NetworkSandbox,Netick.NetworkPlayerId)
  - Netick.Unity.NetworkEventsListener.OnPlayerLeft(Netick.Unity.NetworkSandbox,Netick.NetworkPlayerId)
  - Netick.Unity.NetworkEventsListener.OnSceneLoadStarted(Netick.Unity.NetworkSandbox)
  - Netick.Unity.NetworkEventsListener.OnSceneLoaded(Netick.Unity.NetworkSandbox)
  - Netick.Unity.NetworkEventsListener.OnSceneOperationBegan(Netick.Unity.NetworkSandbox,Netick.Unity.NetworkSceneOperation)
  - Netick.Unity.NetworkEventsListener.OnSceneOperationDone(Netick.Unity.NetworkSandbox,Netick.Unity.NetworkSceneOperation)
  - Netick.Unity.NetworkEventsListener.OnShutdown(Netick.Unity.NetworkSandbox)
  - Netick.Unity.NetworkEventsListener.OnStartup(Netick.Unity.NetworkSandbox)
  - Netick.Unity.NetworkEventsListener.OnVisibilityChanged(Netick.Unity.NetworkSandbox)
  - Netick.Unity.NetworkEventsListener.Sandbox
  - Netick.Unity.NetworkEventsListener.UnlinkFromNetick
  langs:
  - csharp
  - vb
  name: NetworkEventsListener
  nameWithType: NetworkEventsListener
  fullName: Netick.Unity.NetworkEventsListener
  type: Class
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: 'public abstract class NetworkEventsListener : NetickBaseBehaviour'
    content.vb: Public MustInherit Class NetworkEventsListener Inherits NetickBaseBehaviour
  inheritance:
  - System.Object
  - Netick.Unity.NetickBaseBehaviour
  derivedClasses:
  - Netick.Unity.GridRenderer
  - Netick.Unity.NetworkEvents
  - Netick.Unity.NetworkSceneHandler
- uid: Netick.Unity.NetworkEventsListener.OnConnectRequest(Netick.Unity.NetworkSandbox,Netick.NetworkConnectionRequest)
  commentId: M:Netick.Unity.NetworkEventsListener.OnConnectRequest(Netick.Unity.NetworkSandbox,Netick.NetworkConnectionRequest)
  id: OnConnectRequest(Netick.Unity.NetworkSandbox,Netick.NetworkConnectionRequest)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnConnectRequest(NetworkSandbox, NetworkConnectionRequest)
  nameWithType: NetworkEventsListener.OnConnectRequest(NetworkSandbox, NetworkConnectionRequest)
  fullName: Netick.Unity.NetworkEventsListener.OnConnectRequest(Netick.Unity.NetworkSandbox, Netick.NetworkConnectionRequest)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on the server when a client tries to connect. Use <code class="paramref">request</code> to decide whether or not to allow this client to connect.
  example: []
  syntax:
    content: public virtual void OnConnectRequest(NetworkSandbox sandbox, NetworkConnectionRequest request)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: request
      type: Netick.NetworkConnectionRequest
      description: ''
    content.vb: Public Overridable Sub OnConnectRequest(sandbox As NetworkSandbox, request As NetworkConnectionRequest)
  overload: Netick.Unity.NetworkEventsListener.OnConnectRequest*
- uid: Netick.Unity.NetworkEventsListener.OnConnectFailed(Netick.Unity.NetworkSandbox,Netick.ConnectionFailedReason)
  commentId: M:Netick.Unity.NetworkEventsListener.OnConnectFailed(Netick.Unity.NetworkSandbox,Netick.ConnectionFailedReason)
  id: OnConnectFailed(Netick.Unity.NetworkSandbox,Netick.ConnectionFailedReason)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnConnectFailed(NetworkSandbox, ConnectionFailedReason)
  nameWithType: NetworkEventsListener.OnConnectFailed(NetworkSandbox, ConnectionFailedReason)
  fullName: Netick.Unity.NetworkEventsListener.OnConnectFailed(Netick.Unity.NetworkSandbox, Netick.ConnectionFailedReason)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on the client when the connection to the server was refused, or simply failed.
  example: []
  syntax:
    content: public virtual void OnConnectFailed(NetworkSandbox sandbox, ConnectionFailedReason reason)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: reason
      type: Netick.ConnectionFailedReason
      description: ''
    content.vb: Public Overridable Sub OnConnectFailed(sandbox As NetworkSandbox, reason As ConnectionFailedReason)
  overload: Netick.Unity.NetworkEventsListener.OnConnectFailed*
- uid: Netick.Unity.NetworkEventsListener.OnInput(Netick.Unity.NetworkSandbox)
  commentId: M:Netick.Unity.NetworkEventsListener.OnInput(Netick.Unity.NetworkSandbox)
  id: OnInput(Netick.Unity.NetworkSandbox)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnInput(NetworkSandbox)
  nameWithType: NetworkEventsListener.OnInput(NetworkSandbox)
  fullName: Netick.Unity.NetworkEventsListener.OnInput(Netick.Unity.NetworkSandbox)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called to read inputs.
  example: []
  syntax:
    content: public virtual void OnInput(NetworkSandbox sandbox)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    content.vb: Public Overridable Sub OnInput(sandbox As NetworkSandbox)
  overload: Netick.Unity.NetworkEventsListener.OnInput*
- uid: Netick.Unity.NetworkEventsListener.OnStartup(Netick.Unity.NetworkSandbox)
  commentId: M:Netick.Unity.NetworkEventsListener.OnStartup(Netick.Unity.NetworkSandbox)
  id: OnStartup(Netick.Unity.NetworkSandbox)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnStartup(NetworkSandbox)
  nameWithType: NetworkEventsListener.OnStartup(NetworkSandbox)
  fullName: Netick.Unity.NetworkEventsListener.OnStartup(Netick.Unity.NetworkSandbox)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called when Netick has been started.
  example: []
  syntax:
    content: public virtual void OnStartup(NetworkSandbox sandbox)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    content.vb: Public Overridable Sub OnStartup(sandbox As NetworkSandbox)
  overload: Netick.Unity.NetworkEventsListener.OnStartup*
- uid: Netick.Unity.NetworkEventsListener.OnShutdown(Netick.Unity.NetworkSandbox)
  commentId: M:Netick.Unity.NetworkEventsListener.OnShutdown(Netick.Unity.NetworkSandbox)
  id: OnShutdown(Netick.Unity.NetworkSandbox)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnShutdown(NetworkSandbox)
  nameWithType: NetworkEventsListener.OnShutdown(NetworkSandbox)
  fullName: Netick.Unity.NetworkEventsListener.OnShutdown(Netick.Unity.NetworkSandbox)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called when Netick has been shut down.
  example: []
  syntax:
    content: public virtual void OnShutdown(NetworkSandbox sandbox)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    content.vb: Public Overridable Sub OnShutdown(sandbox As NetworkSandbox)
  overload: Netick.Unity.NetworkEventsListener.OnShutdown*
- uid: Netick.Unity.NetworkEventsListener.OnVisibilityChanged(Netick.Unity.NetworkSandbox)
  commentId: M:Netick.Unity.NetworkEventsListener.OnVisibilityChanged(Netick.Unity.NetworkSandbox)
  id: OnVisibilityChanged(Netick.Unity.NetworkSandbox)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnVisibilityChanged(NetworkSandbox)
  nameWithType: NetworkEventsListener.OnVisibilityChanged(NetworkSandbox)
  fullName: Netick.Unity.NetworkEventsListener.OnVisibilityChanged(Netick.Unity.NetworkSandbox)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called when a sandbox visibility changes. Use Sandbox.IsVisible to find if the sandbox is visible or not.
  example: []
  syntax:
    content: public virtual void OnVisibilityChanged(NetworkSandbox sandbox)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    content.vb: Public Overridable Sub OnVisibilityChanged(sandbox As NetworkSandbox)
  overload: Netick.Unity.NetworkEventsListener.OnVisibilityChanged*
- uid: Netick.Unity.NetworkEventsListener.OnSceneOperationBegan(Netick.Unity.NetworkSandbox,Netick.Unity.NetworkSceneOperation)
  commentId: M:Netick.Unity.NetworkEventsListener.OnSceneOperationBegan(Netick.Unity.NetworkSandbox,Netick.Unity.NetworkSceneOperation)
  id: OnSceneOperationBegan(Netick.Unity.NetworkSandbox,Netick.Unity.NetworkSceneOperation)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnSceneOperationBegan(NetworkSandbox, NetworkSceneOperation)
  nameWithType: NetworkEventsListener.OnSceneOperationBegan(NetworkSandbox, NetworkSceneOperation)
  fullName: Netick.Unity.NetworkEventsListener.OnSceneOperationBegan(Netick.Unity.NetworkSandbox, Netick.Unity.NetworkSceneOperation)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on both the client and the server when a scene load/unload operation was started.
  example: []
  syntax:
    content: public virtual void OnSceneOperationBegan(NetworkSandbox sandbox, NetworkSceneOperation sceneOperation)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: sceneOperation
      type: Netick.Unity.NetworkSceneOperation
    content.vb: Public Overridable Sub OnSceneOperationBegan(sandbox As NetworkSandbox, sceneOperation As NetworkSceneOperation)
  overload: Netick.Unity.NetworkEventsListener.OnSceneOperationBegan*
- uid: Netick.Unity.NetworkEventsListener.OnSceneOperationDone(Netick.Unity.NetworkSandbox,Netick.Unity.NetworkSceneOperation)
  commentId: M:Netick.Unity.NetworkEventsListener.OnSceneOperationDone(Netick.Unity.NetworkSandbox,Netick.Unity.NetworkSceneOperation)
  id: OnSceneOperationDone(Netick.Unity.NetworkSandbox,Netick.Unity.NetworkSceneOperation)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnSceneOperationDone(NetworkSandbox, NetworkSceneOperation)
  nameWithType: NetworkEventsListener.OnSceneOperationDone(NetworkSandbox, NetworkSceneOperation)
  fullName: Netick.Unity.NetworkEventsListener.OnSceneOperationDone(Netick.Unity.NetworkSandbox, Netick.Unity.NetworkSceneOperation)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on both the client and the server when a scene load/unload operation finished.
  example: []
  syntax:
    content: public virtual void OnSceneOperationDone(NetworkSandbox sandbox, NetworkSceneOperation sceneOperation)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: sceneOperation
      type: Netick.Unity.NetworkSceneOperation
    content.vb: Public Overridable Sub OnSceneOperationDone(sandbox As NetworkSandbox, sceneOperation As NetworkSceneOperation)
  overload: Netick.Unity.NetworkEventsListener.OnSceneOperationDone*
- uid: Netick.Unity.NetworkEventsListener.OnSceneLoaded(Netick.Unity.NetworkSandbox)
  commentId: M:Netick.Unity.NetworkEventsListener.OnSceneLoaded(Netick.Unity.NetworkSandbox)
  id: OnSceneLoaded(Netick.Unity.NetworkSandbox)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnSceneLoaded(NetworkSandbox)
  nameWithType: NetworkEventsListener.OnSceneLoaded(NetworkSandbox)
  fullName: Netick.Unity.NetworkEventsListener.OnSceneLoaded(Netick.Unity.NetworkSandbox)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on both the client and the server when the scene has been loaded.
  example: []
  syntax:
    content: >-
      [Obsolete("This method will be removed. Use OnSceneLoadBegan instead.")]

      public virtual void OnSceneLoaded(NetworkSandbox sandbox)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    content.vb: >-
      <Obsolete("This method will be removed. Use OnSceneLoadBegan instead.")>

      Public Overridable Sub OnSceneLoaded(sandbox As NetworkSandbox)
  overload: Netick.Unity.NetworkEventsListener.OnSceneLoaded*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method will be removed. Use OnSceneLoadBegan instead.
- uid: Netick.Unity.NetworkEventsListener.OnSceneLoadStarted(Netick.Unity.NetworkSandbox)
  commentId: M:Netick.Unity.NetworkEventsListener.OnSceneLoadStarted(Netick.Unity.NetworkSandbox)
  id: OnSceneLoadStarted(Netick.Unity.NetworkSandbox)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnSceneLoadStarted(NetworkSandbox)
  nameWithType: NetworkEventsListener.OnSceneLoadStarted(NetworkSandbox)
  fullName: Netick.Unity.NetworkEventsListener.OnSceneLoadStarted(Netick.Unity.NetworkSandbox)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on both the client and the server before beginning to load the new scene.
  example: []
  syntax:
    content: >-
      [Obsolete("This method will be removed. Use OnSceneLoadDone instead.")]

      public virtual void OnSceneLoadStarted(NetworkSandbox sandbox)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    content.vb: >-
      <Obsolete("This method will be removed. Use OnSceneLoadDone instead.")>

      Public Overridable Sub OnSceneLoadStarted(sandbox As NetworkSandbox)
  overload: Netick.Unity.NetworkEventsListener.OnSceneLoadStarted*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method will be removed. Use OnSceneLoadDone instead.
- uid: Netick.Unity.NetworkEventsListener.OnConnectedToServer(Netick.Unity.NetworkSandbox,Netick.NetworkConnection)
  commentId: M:Netick.Unity.NetworkEventsListener.OnConnectedToServer(Netick.Unity.NetworkSandbox,Netick.NetworkConnection)
  id: OnConnectedToServer(Netick.Unity.NetworkSandbox,Netick.NetworkConnection)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnConnectedToServer(NetworkSandbox, NetworkConnection)
  nameWithType: NetworkEventsListener.OnConnectedToServer(NetworkSandbox, NetworkConnection)
  fullName: Netick.Unity.NetworkEventsListener.OnConnectedToServer(Netick.Unity.NetworkSandbox, Netick.NetworkConnection)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on the client when connection to the server has been initiated.
  example: []
  syntax:
    content: public virtual void OnConnectedToServer(NetworkSandbox sandbox, NetworkConnection server)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: server
      type: Netick.NetworkConnection
      description: ''
    content.vb: Public Overridable Sub OnConnectedToServer(sandbox As NetworkSandbox, server As NetworkConnection)
  overload: Netick.Unity.NetworkEventsListener.OnConnectedToServer*
- uid: Netick.Unity.NetworkEventsListener.OnDisconnectedFromServer(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,Netick.TransportDisconnectReason)
  commentId: M:Netick.Unity.NetworkEventsListener.OnDisconnectedFromServer(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,Netick.TransportDisconnectReason)
  id: OnDisconnectedFromServer(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,Netick.TransportDisconnectReason)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnDisconnectedFromServer(NetworkSandbox, NetworkConnection, TransportDisconnectReason)
  nameWithType: NetworkEventsListener.OnDisconnectedFromServer(NetworkSandbox, NetworkConnection, TransportDisconnectReason)
  fullName: Netick.Unity.NetworkEventsListener.OnDisconnectedFromServer(Netick.Unity.NetworkSandbox, Netick.NetworkConnection, Netick.TransportDisconnectReason)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on the client when connection to the server ended, or when a network error caused the disconnection.
  example: []
  syntax:
    content: public virtual void OnDisconnectedFromServer(NetworkSandbox sandbox, NetworkConnection server, TransportDisconnectReason transportDisconnectReason)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: server
      type: Netick.NetworkConnection
      description: ''
    - id: transportDisconnectReason
      type: Netick.TransportDisconnectReason
    content.vb: Public Overridable Sub OnDisconnectedFromServer(sandbox As NetworkSandbox, server As NetworkConnection, transportDisconnectReason As TransportDisconnectReason)
  overload: Netick.Unity.NetworkEventsListener.OnDisconnectedFromServer*
- uid: Netick.Unity.NetworkEventsListener.OnPlayerJoined(Netick.Unity.NetworkSandbox,Netick.NetworkPlayerId)
  commentId: M:Netick.Unity.NetworkEventsListener.OnPlayerJoined(Netick.Unity.NetworkSandbox,Netick.NetworkPlayerId)
  id: OnPlayerJoined(Netick.Unity.NetworkSandbox,Netick.NetworkPlayerId)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnPlayerJoined(NetworkSandbox, NetworkPlayerId)
  nameWithType: NetworkEventsListener.OnPlayerJoined(NetworkSandbox, NetworkPlayerId)
  fullName: Netick.Unity.NetworkEventsListener.OnPlayerJoined(Netick.Unity.NetworkSandbox, Netick.NetworkPlayerId)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on when a specific player has joined the game. This is synced to all clients, including late-joiners..
  example: []
  syntax:
    content: public virtual void OnPlayerJoined(NetworkSandbox sandbox, NetworkPlayerId player)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
    - id: player
      type: Netick.NetworkPlayerId
    content.vb: Public Overridable Sub OnPlayerJoined(sandbox As NetworkSandbox, player As NetworkPlayerId)
  overload: Netick.Unity.NetworkEventsListener.OnPlayerJoined*
- uid: Netick.Unity.NetworkEventsListener.OnPlayerLeft(Netick.Unity.NetworkSandbox,Netick.NetworkPlayerId)
  commentId: M:Netick.Unity.NetworkEventsListener.OnPlayerLeft(Netick.Unity.NetworkSandbox,Netick.NetworkPlayerId)
  id: OnPlayerLeft(Netick.Unity.NetworkSandbox,Netick.NetworkPlayerId)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnPlayerLeft(NetworkSandbox, NetworkPlayerId)
  nameWithType: NetworkEventsListener.OnPlayerLeft(NetworkSandbox, NetworkPlayerId)
  fullName: Netick.Unity.NetworkEventsListener.OnPlayerLeft(Netick.Unity.NetworkSandbox, Netick.NetworkPlayerId)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on when a specific player has left the game. This is synced to all clients, including late-joiners..
  example: []
  syntax:
    content: public virtual void OnPlayerLeft(NetworkSandbox sandbox, NetworkPlayerId player)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
    - id: player
      type: Netick.NetworkPlayerId
    content.vb: Public Overridable Sub OnPlayerLeft(sandbox As NetworkSandbox, player As NetworkPlayerId)
  overload: Netick.Unity.NetworkEventsListener.OnPlayerLeft*
- uid: Netick.Unity.NetworkEventsListener.OnClientConnected(Netick.Unity.NetworkSandbox,Netick.NetworkConnection)
  commentId: M:Netick.Unity.NetworkEventsListener.OnClientConnected(Netick.Unity.NetworkSandbox,Netick.NetworkConnection)
  id: OnClientConnected(Netick.Unity.NetworkSandbox,Netick.NetworkConnection)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnClientConnected(NetworkSandbox, NetworkConnection)
  nameWithType: NetworkEventsListener.OnClientConnected(NetworkSandbox, NetworkConnection)
  fullName: Netick.Unity.NetworkEventsListener.OnClientConnected(Netick.Unity.NetworkSandbox, Netick.NetworkConnection)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on the server when a specific client has connected.
  example: []
  syntax:
    content: >-
      [Obsolete("This method will be removed. Use OnPlayerJoined instead.")]

      public virtual void OnClientConnected(NetworkSandbox sandbox, NetworkConnection client)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: client
      type: Netick.NetworkConnection
      description: ''
    content.vb: >-
      <Obsolete("This method will be removed. Use OnPlayerJoined instead.")>

      Public Overridable Sub OnClientConnected(sandbox As NetworkSandbox, client As NetworkConnection)
  overload: Netick.Unity.NetworkEventsListener.OnClientConnected*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method will be removed. Use OnPlayerJoined instead.
- uid: Netick.Unity.NetworkEventsListener.OnClientDisconnected(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,Netick.TransportDisconnectReason)
  commentId: M:Netick.Unity.NetworkEventsListener.OnClientDisconnected(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,Netick.TransportDisconnectReason)
  id: OnClientDisconnected(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,Netick.TransportDisconnectReason)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnClientDisconnected(NetworkSandbox, NetworkConnection, TransportDisconnectReason)
  nameWithType: NetworkEventsListener.OnClientDisconnected(NetworkSandbox, NetworkConnection, TransportDisconnectReason)
  fullName: Netick.Unity.NetworkEventsListener.OnClientDisconnected(Netick.Unity.NetworkSandbox, Netick.NetworkConnection, Netick.TransportDisconnectReason)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on the server when a specific client has disconnected.
  example: []
  syntax:
    content: >-
      [Obsolete("This method will be removed. Use OnPlayerLeft instead.")]

      public virtual void OnClientDisconnected(NetworkSandbox sandbox, NetworkConnection client, TransportDisconnectReason transportDisconnectReason)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: client
      type: Netick.NetworkConnection
      description: ''
    - id: transportDisconnectReason
      type: Netick.TransportDisconnectReason
    content.vb: >-
      <Obsolete("This method will be removed. Use OnPlayerLeft instead.")>

      Public Overridable Sub OnClientDisconnected(sandbox As NetworkSandbox, client As NetworkConnection, transportDisconnectReason As TransportDisconnectReason)
  overload: Netick.Unity.NetworkEventsListener.OnClientDisconnected*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method will be removed. Use OnPlayerLeft instead.
- uid: Netick.Unity.NetworkEventsListener.OnPlayerConnected(Netick.Unity.NetworkSandbox,Netick.NetworkPlayer)
  commentId: M:Netick.Unity.NetworkEventsListener.OnPlayerConnected(Netick.Unity.NetworkSandbox,Netick.NetworkPlayer)
  id: OnPlayerConnected(Netick.Unity.NetworkSandbox,Netick.NetworkPlayer)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnPlayerConnected(NetworkSandbox, NetworkPlayer)
  nameWithType: NetworkEventsListener.OnPlayerConnected(NetworkSandbox, NetworkPlayer)
  fullName: Netick.Unity.NetworkEventsListener.OnPlayerConnected(Netick.Unity.NetworkSandbox, Netick.NetworkPlayer)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on the server when a specific player has connected.
  example: []
  syntax:
    content: >-
      [Obsolete("This method will be removed. Use OnPlayerJoined instead.")]

      public virtual void OnPlayerConnected(NetworkSandbox sandbox, NetworkPlayer player)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: player
      type: Netick.NetworkPlayer
    content.vb: >-
      <Obsolete("This method will be removed. Use OnPlayerJoined instead.")>

      Public Overridable Sub OnPlayerConnected(sandbox As NetworkSandbox, player As NetworkPlayer)
  overload: Netick.Unity.NetworkEventsListener.OnPlayerConnected*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method will be removed. Use OnPlayerJoined instead.
- uid: Netick.Unity.NetworkEventsListener.OnPlayerDisconnected(Netick.Unity.NetworkSandbox,Netick.NetworkPlayer,Netick.TransportDisconnectReason)
  commentId: M:Netick.Unity.NetworkEventsListener.OnPlayerDisconnected(Netick.Unity.NetworkSandbox,Netick.NetworkPlayer,Netick.TransportDisconnectReason)
  id: OnPlayerDisconnected(Netick.Unity.NetworkSandbox,Netick.NetworkPlayer,Netick.TransportDisconnectReason)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnPlayerDisconnected(NetworkSandbox, NetworkPlayer, TransportDisconnectReason)
  nameWithType: NetworkEventsListener.OnPlayerDisconnected(NetworkSandbox, NetworkPlayer, TransportDisconnectReason)
  fullName: Netick.Unity.NetworkEventsListener.OnPlayerDisconnected(Netick.Unity.NetworkSandbox, Netick.NetworkPlayer, Netick.TransportDisconnectReason)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on the server when a specific player has disconnected.
  example: []
  syntax:
    content: >-
      [Obsolete("This method will be removed. Use OnPlayerLeft instead.")]

      public virtual void OnPlayerDisconnected(NetworkSandbox sandbox, NetworkPlayer player, TransportDisconnectReason transportDisconnectReason)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
      description: ''
    - id: player
      type: Netick.NetworkPlayer
    - id: transportDisconnectReason
      type: Netick.TransportDisconnectReason
    content.vb: >-
      <Obsolete("This method will be removed. Use OnPlayerLeft instead.")>

      Public Overridable Sub OnPlayerDisconnected(sandbox As NetworkSandbox, player As NetworkPlayer, transportDisconnectReason As TransportDisconnectReason)
  overload: Netick.Unity.NetworkEventsListener.OnPlayerDisconnected*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method will be removed. Use OnPlayerLeft instead.
- uid: Netick.Unity.NetworkEventsListener.OnObjectCreated(Netick.Unity.NetworkObject)
  commentId: M:Netick.Unity.NetworkEventsListener.OnObjectCreated(Netick.Unity.NetworkObject)
  id: OnObjectCreated(Netick.Unity.NetworkObject)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnObjectCreated(NetworkObject)
  nameWithType: NetworkEventsListener.OnObjectCreated(NetworkObject)
  fullName: Netick.Unity.NetworkEventsListener.OnObjectCreated(Netick.Unity.NetworkObject)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called when a network object has been created/initialized.
  example: []
  syntax:
    content: public virtual void OnObjectCreated(NetworkObject entity)
    parameters:
    - id: entity
      type: Netick.Unity.NetworkObject
      description: ''
    content.vb: Public Overridable Sub OnObjectCreated(entity As NetworkObject)
  overload: Netick.Unity.NetworkEventsListener.OnObjectCreated*
- uid: Netick.Unity.NetworkEventsListener.OnObjectDestroyed(Netick.Unity.NetworkObject)
  commentId: M:Netick.Unity.NetworkEventsListener.OnObjectDestroyed(Netick.Unity.NetworkObject)
  id: OnObjectDestroyed(Netick.Unity.NetworkObject)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnObjectDestroyed(NetworkObject)
  nameWithType: NetworkEventsListener.OnObjectDestroyed(NetworkObject)
  fullName: Netick.Unity.NetworkEventsListener.OnObjectDestroyed(Netick.Unity.NetworkObject)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called when a network object has been destroyed/recycled.
  example: []
  syntax:
    content: public virtual void OnObjectDestroyed(NetworkObject entity)
    parameters:
    - id: entity
      type: Netick.Unity.NetworkObject
      description: ''
    content.vb: Public Overridable Sub OnObjectDestroyed(entity As NetworkObject)
  overload: Netick.Unity.NetworkEventsListener.OnObjectDestroyed*
- uid: Netick.Unity.NetworkEventsListener.OnMatchListUpdate(Netick.Unity.NetworkSandbox,System.Collections.Generic.List{Netick.Session})
  commentId: M:Netick.Unity.NetworkEventsListener.OnMatchListUpdate(Netick.Unity.NetworkSandbox,System.Collections.Generic.List{Netick.Session})
  id: OnMatchListUpdate(Netick.Unity.NetworkSandbox,System.Collections.Generic.List{Netick.Session})
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnMatchListUpdate(NetworkSandbox, List<Session>)
  nameWithType: NetworkEventsListener.OnMatchListUpdate(NetworkSandbox, List<Session>)
  fullName: Netick.Unity.NetworkEventsListener.OnMatchListUpdate(Netick.Unity.NetworkSandbox, System.Collections.Generic.List<Netick.Session>)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public virtual void OnMatchListUpdate(NetworkSandbox sandbox, List<Session> sessions)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
    - id: sessions
      type: System.Collections.Generic.List{Netick.Session}
    content.vb: Public Overridable Sub OnMatchListUpdate(sandbox As NetworkSandbox, sessions As List(Of Session))
  overload: Netick.Unity.NetworkEventsListener.OnMatchListUpdate*
  nameWithType.vb: NetworkEventsListener.OnMatchListUpdate(NetworkSandbox, List(Of Session))
  fullName.vb: Netick.Unity.NetworkEventsListener.OnMatchListUpdate(Netick.Unity.NetworkSandbox, System.Collections.Generic.List(Of Netick.Session))
  name.vb: OnMatchListUpdate(NetworkSandbox, List(Of Session))
- uid: Netick.Unity.NetworkEventsListener.OnMatchCreated(Netick.Unity.NetworkSandbox)
  commentId: M:Netick.Unity.NetworkEventsListener.OnMatchCreated(Netick.Unity.NetworkSandbox)
  id: OnMatchCreated(Netick.Unity.NetworkSandbox)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnMatchCreated(NetworkSandbox)
  nameWithType: NetworkEventsListener.OnMatchCreated(NetworkSandbox)
  fullName: Netick.Unity.NetworkEventsListener.OnMatchCreated(Netick.Unity.NetworkSandbox)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public virtual void OnMatchCreated(NetworkSandbox sandbox)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
    content.vb: Public Overridable Sub OnMatchCreated(sandbox As NetworkSandbox)
  overload: Netick.Unity.NetworkEventsListener.OnMatchCreated*
- uid: Netick.Unity.NetworkEventsListener.OnDataReceived(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,System.Byte,System.Byte*,System.Int32,Netick.TransportDeliveryMethod)
  commentId: M:Netick.Unity.NetworkEventsListener.OnDataReceived(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,System.Byte,System.Byte*,System.Int32,Netick.TransportDeliveryMethod)
  id: OnDataReceived(Netick.Unity.NetworkSandbox,Netick.NetworkConnection,System.Byte,System.Byte*,System.Int32,Netick.TransportDeliveryMethod)
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: OnDataReceived(NetworkSandbox, NetworkConnection, byte, byte*, int, TransportDeliveryMethod)
  nameWithType: NetworkEventsListener.OnDataReceived(NetworkSandbox, NetworkConnection, byte, byte*, int, TransportDeliveryMethod)
  fullName: Netick.Unity.NetworkEventsListener.OnDataReceived(Netick.Unity.NetworkSandbox, Netick.NetworkConnection, byte, byte*, int, Netick.TransportDeliveryMethod)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public virtual void OnDataReceived(NetworkSandbox sandbox, NetworkConnection sender, byte id, byte* data, int length, TransportDeliveryMethod transportDeliveryMethod)
    parameters:
    - id: sandbox
      type: Netick.Unity.NetworkSandbox
    - id: sender
      type: Netick.NetworkConnection
    - id: id
      type: System.Byte
    - id: data
      type: System.Byte*
    - id: length
      type: System.Int32
    - id: transportDeliveryMethod
      type: Netick.TransportDeliveryMethod
    content.vb: Public Overridable Sub OnDataReceived(sandbox As NetworkSandbox, sender As NetworkConnection, id As Byte, data As Byte*, length As Integer, transportDeliveryMethod As TransportDeliveryMethod)
  overload: Netick.Unity.NetworkEventsListener.OnDataReceived*
  nameWithType.vb: NetworkEventsListener.OnDataReceived(NetworkSandbox, NetworkConnection, Byte, Byte*, Integer, TransportDeliveryMethod)
  fullName.vb: Netick.Unity.NetworkEventsListener.OnDataReceived(Netick.Unity.NetworkSandbox, Netick.NetworkConnection, Byte, Byte*, Integer, Netick.TransportDeliveryMethod)
  name.vb: OnDataReceived(NetworkSandbox, NetworkConnection, Byte, Byte*, Integer, TransportDeliveryMethod)
- uid: Netick.Unity.NetworkEventsListener.UnlinkFromNetick
  commentId: M:Netick.Unity.NetworkEventsListener.UnlinkFromNetick
  id: UnlinkFromNetick
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: UnlinkFromNetick()
  nameWithType: NetworkEventsListener.UnlinkFromNetick()
  fullName: Netick.Unity.NetworkEventsListener.UnlinkFromNetick()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public void UnlinkFromNetick()
    content.vb: Public Sub UnlinkFromNetick()
  overload: Netick.Unity.NetworkEventsListener.UnlinkFromNetick*
- uid: Netick.Unity.NetworkEventsListener.#ctor
  commentId: M:Netick.Unity.NetworkEventsListener.#ctor
  id: '#ctor'
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: NetworkEventsListener()
  nameWithType: NetworkEventsListener.NetworkEventsListener()
  fullName: Netick.Unity.NetworkEventsListener.NetworkEventsListener()
  type: Constructor
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: protected NetworkEventsListener()
    content.vb: Protected Sub New()
  overload: Netick.Unity.NetworkEventsListener.#ctor*
  nameWithType.vb: NetworkEventsListener.New()
  fullName.vb: Netick.Unity.NetworkEventsListener.New()
  name.vb: New()
- uid: Netick.Unity.NetworkEventsListener.Sandbox
  commentId: P:Netick.Unity.NetworkEventsListener.Sandbox
  id: Sandbox
  parent: Netick.Unity.NetworkEventsListener
  langs:
  - csharp
  - vb
  name: Sandbox
  nameWithType: NetworkEventsListener.Sandbox
  fullName: Netick.Unity.NetworkEventsListener.Sandbox
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public NetworkSandbox Sandbox { get; }
    parameters: []
    return:
      type: Netick.Unity.NetworkSandbox
    content.vb: Public ReadOnly Property Sandbox As NetworkSandbox
  overload: Netick.Unity.NetworkEventsListener.Sandbox*
references:
- uid: Netick.Unity
  commentId: N:Netick.Unity
  isExternal: true
  href: Netick.html
  name: Netick.Unity
  nameWithType: Netick.Unity
  fullName: Netick.Unity
  spec.csharp:
  - uid: Netick
    name: Netick
    isExternal: true
    href: Netick.html
  - name: .
  - uid: Netick.Unity
    name: Unity
    isExternal: true
    href: Netick.Unity.html
  spec.vb:
  - uid: Netick
    name: Netick
    isExternal: true
    href: Netick.html
  - name: .
  - uid: Netick.Unity
    name: Unity
    isExternal: true
    href: Netick.Unity.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Netick.Unity.NetickBaseBehaviour
  commentId: T:Netick.Unity.NetickBaseBehaviour
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetickBaseBehaviour.html
  name: NetickBaseBehaviour
  nameWithType: NetickBaseBehaviour
  fullName: Netick.Unity.NetickBaseBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Netick.Unity.NetworkEventsListener.OnConnectRequest*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnConnectRequest
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnConnectRequest_Netick_Unity_NetworkSandbox_Netick_NetworkConnectionRequest_
  name: OnConnectRequest
  nameWithType: NetworkEventsListener.OnConnectRequest
  fullName: Netick.Unity.NetworkEventsListener.OnConnectRequest
- uid: Netick.Unity.NetworkSandbox
  commentId: T:Netick.Unity.NetworkSandbox
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkSandbox.html
  name: NetworkSandbox
  nameWithType: NetworkSandbox
  fullName: Netick.Unity.NetworkSandbox
- uid: Netick.NetworkConnectionRequest
  commentId: T:Netick.NetworkConnectionRequest
  parent: Netick
  isExternal: true
  href: Netick.NetworkConnectionRequest.html
  name: NetworkConnectionRequest
  nameWithType: NetworkConnectionRequest
  fullName: Netick.NetworkConnectionRequest
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: Netick.Unity.NetworkEventsListener.OnConnectFailed*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnConnectFailed
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnConnectFailed_Netick_Unity_NetworkSandbox_Netick_ConnectionFailedReason_
  name: OnConnectFailed
  nameWithType: NetworkEventsListener.OnConnectFailed
  fullName: Netick.Unity.NetworkEventsListener.OnConnectFailed
- uid: Netick.ConnectionFailedReason
  commentId: T:Netick.ConnectionFailedReason
  parent: Netick
  isExternal: true
  href: Netick.ConnectionFailedReason.html
  name: ConnectionFailedReason
  nameWithType: ConnectionFailedReason
  fullName: Netick.ConnectionFailedReason
- uid: Netick.Unity.NetworkEventsListener.OnInput*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnInput
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnInput_Netick_Unity_NetworkSandbox_
  name: OnInput
  nameWithType: NetworkEventsListener.OnInput
  fullName: Netick.Unity.NetworkEventsListener.OnInput
- uid: Netick.Unity.NetworkEventsListener.OnStartup*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnStartup
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnStartup_Netick_Unity_NetworkSandbox_
  name: OnStartup
  nameWithType: NetworkEventsListener.OnStartup
  fullName: Netick.Unity.NetworkEventsListener.OnStartup
- uid: Netick.Unity.NetworkEventsListener.OnShutdown*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnShutdown
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnShutdown_Netick_Unity_NetworkSandbox_
  name: OnShutdown
  nameWithType: NetworkEventsListener.OnShutdown
  fullName: Netick.Unity.NetworkEventsListener.OnShutdown
- uid: Netick.Unity.NetworkEventsListener.OnVisibilityChanged*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnVisibilityChanged
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnVisibilityChanged_Netick_Unity_NetworkSandbox_
  name: OnVisibilityChanged
  nameWithType: NetworkEventsListener.OnVisibilityChanged
  fullName: Netick.Unity.NetworkEventsListener.OnVisibilityChanged
- uid: Netick.Unity.NetworkEventsListener.OnSceneOperationBegan*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnSceneOperationBegan
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnSceneOperationBegan_Netick_Unity_NetworkSandbox_Netick_Unity_NetworkSceneOperation_
  name: OnSceneOperationBegan
  nameWithType: NetworkEventsListener.OnSceneOperationBegan
  fullName: Netick.Unity.NetworkEventsListener.OnSceneOperationBegan
- uid: Netick.Unity.NetworkSceneOperation
  commentId: T:Netick.Unity.NetworkSceneOperation
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkSceneOperation.html
  name: NetworkSceneOperation
  nameWithType: NetworkSceneOperation
  fullName: Netick.Unity.NetworkSceneOperation
- uid: Netick.Unity.NetworkEventsListener.OnSceneOperationDone*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnSceneOperationDone
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnSceneOperationDone_Netick_Unity_NetworkSandbox_Netick_Unity_NetworkSceneOperation_
  name: OnSceneOperationDone
  nameWithType: NetworkEventsListener.OnSceneOperationDone
  fullName: Netick.Unity.NetworkEventsListener.OnSceneOperationDone
- uid: Netick.Unity.NetworkEventsListener.OnSceneLoaded*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnSceneLoaded
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnSceneLoaded_Netick_Unity_NetworkSandbox_
  name: OnSceneLoaded
  nameWithType: NetworkEventsListener.OnSceneLoaded
  fullName: Netick.Unity.NetworkEventsListener.OnSceneLoaded
- uid: Netick.Unity.NetworkEventsListener.OnSceneLoadStarted*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnSceneLoadStarted
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnSceneLoadStarted_Netick_Unity_NetworkSandbox_
  name: OnSceneLoadStarted
  nameWithType: NetworkEventsListener.OnSceneLoadStarted
  fullName: Netick.Unity.NetworkEventsListener.OnSceneLoadStarted
- uid: Netick.Unity.NetworkEventsListener.OnConnectedToServer*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnConnectedToServer
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnConnectedToServer_Netick_Unity_NetworkSandbox_Netick_NetworkConnection_
  name: OnConnectedToServer
  nameWithType: NetworkEventsListener.OnConnectedToServer
  fullName: Netick.Unity.NetworkEventsListener.OnConnectedToServer
- uid: Netick.NetworkConnection
  commentId: T:Netick.NetworkConnection
  parent: Netick
  isExternal: true
  href: Netick.NetworkConnection.html
  name: NetworkConnection
  nameWithType: NetworkConnection
  fullName: Netick.NetworkConnection
- uid: Netick.Unity.NetworkEventsListener.OnDisconnectedFromServer*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnDisconnectedFromServer
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnDisconnectedFromServer_Netick_Unity_NetworkSandbox_Netick_NetworkConnection_Netick_TransportDisconnectReason_
  name: OnDisconnectedFromServer
  nameWithType: NetworkEventsListener.OnDisconnectedFromServer
  fullName: Netick.Unity.NetworkEventsListener.OnDisconnectedFromServer
- uid: Netick.TransportDisconnectReason
  commentId: T:Netick.TransportDisconnectReason
  parent: Netick
  isExternal: true
  href: Netick.TransportDisconnectReason.html
  name: TransportDisconnectReason
  nameWithType: TransportDisconnectReason
  fullName: Netick.TransportDisconnectReason
- uid: Netick.Unity.NetworkEventsListener.OnPlayerJoined*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnPlayerJoined
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnPlayerJoined_Netick_Unity_NetworkSandbox_Netick_NetworkPlayerId_
  name: OnPlayerJoined
  nameWithType: NetworkEventsListener.OnPlayerJoined
  fullName: Netick.Unity.NetworkEventsListener.OnPlayerJoined
- uid: Netick.NetworkPlayerId
  commentId: T:Netick.NetworkPlayerId
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayerId.html
  name: NetworkPlayerId
  nameWithType: NetworkPlayerId
  fullName: Netick.NetworkPlayerId
- uid: Netick.Unity.NetworkEventsListener.OnPlayerLeft*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnPlayerLeft
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnPlayerLeft_Netick_Unity_NetworkSandbox_Netick_NetworkPlayerId_
  name: OnPlayerLeft
  nameWithType: NetworkEventsListener.OnPlayerLeft
  fullName: Netick.Unity.NetworkEventsListener.OnPlayerLeft
- uid: Netick.Unity.NetworkEventsListener.OnClientConnected*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnClientConnected
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnClientConnected_Netick_Unity_NetworkSandbox_Netick_NetworkConnection_
  name: OnClientConnected
  nameWithType: NetworkEventsListener.OnClientConnected
  fullName: Netick.Unity.NetworkEventsListener.OnClientConnected
- uid: Netick.Unity.NetworkEventsListener.OnClientDisconnected*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnClientDisconnected
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnClientDisconnected_Netick_Unity_NetworkSandbox_Netick_NetworkConnection_Netick_TransportDisconnectReason_
  name: OnClientDisconnected
  nameWithType: NetworkEventsListener.OnClientDisconnected
  fullName: Netick.Unity.NetworkEventsListener.OnClientDisconnected
- uid: Netick.Unity.NetworkEventsListener.OnPlayerConnected*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnPlayerConnected
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnPlayerConnected_Netick_Unity_NetworkSandbox_Netick_NetworkPlayer_
  name: OnPlayerConnected
  nameWithType: NetworkEventsListener.OnPlayerConnected
  fullName: Netick.Unity.NetworkEventsListener.OnPlayerConnected
- uid: Netick.NetworkPlayer
  commentId: T:Netick.NetworkPlayer
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayer.html
  name: NetworkPlayer
  nameWithType: NetworkPlayer
  fullName: Netick.NetworkPlayer
- uid: Netick.Unity.NetworkEventsListener.OnPlayerDisconnected*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnPlayerDisconnected
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnPlayerDisconnected_Netick_Unity_NetworkSandbox_Netick_NetworkPlayer_Netick_TransportDisconnectReason_
  name: OnPlayerDisconnected
  nameWithType: NetworkEventsListener.OnPlayerDisconnected
  fullName: Netick.Unity.NetworkEventsListener.OnPlayerDisconnected
- uid: Netick.Unity.NetworkEventsListener.OnObjectCreated*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnObjectCreated
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnObjectCreated_Netick_Unity_NetworkObject_
  name: OnObjectCreated
  nameWithType: NetworkEventsListener.OnObjectCreated
  fullName: Netick.Unity.NetworkEventsListener.OnObjectCreated
- uid: Netick.Unity.NetworkObject
  commentId: T:Netick.Unity.NetworkObject
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkObject.html
  name: NetworkObject
  nameWithType: NetworkObject
  fullName: Netick.Unity.NetworkObject
- uid: Netick.Unity.NetworkEventsListener.OnObjectDestroyed*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnObjectDestroyed
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnObjectDestroyed_Netick_Unity_NetworkObject_
  name: OnObjectDestroyed
  nameWithType: NetworkEventsListener.OnObjectDestroyed
  fullName: Netick.Unity.NetworkEventsListener.OnObjectDestroyed
- uid: Netick.Unity.NetworkEventsListener.OnMatchListUpdate*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnMatchListUpdate
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnMatchListUpdate_Netick_Unity_NetworkSandbox_System_Collections_Generic_List_Netick_Session__
  name: OnMatchListUpdate
  nameWithType: NetworkEventsListener.OnMatchListUpdate
  fullName: Netick.Unity.NetworkEventsListener.OnMatchListUpdate
- uid: System.Collections.Generic.List{Netick.Session}
  commentId: T:System.Collections.Generic.List{Netick.Session}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Session>
  nameWithType: List<Session>
  fullName: System.Collections.Generic.List<Netick.Session>
  nameWithType.vb: List(Of Session)
  fullName.vb: System.Collections.Generic.List(Of Netick.Session)
  name.vb: List(Of Session)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Netick.Session
    name: Session
    isExternal: true
    href: Netick.Session.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Netick.Session
    name: Session
    isExternal: true
    href: Netick.Session.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Netick.Unity.NetworkEventsListener.OnMatchCreated*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnMatchCreated
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnMatchCreated_Netick_Unity_NetworkSandbox_
  name: OnMatchCreated
  nameWithType: NetworkEventsListener.OnMatchCreated
  fullName: Netick.Unity.NetworkEventsListener.OnMatchCreated
- uid: Netick.Unity.NetworkEventsListener.OnDataReceived*
  commentId: Overload:Netick.Unity.NetworkEventsListener.OnDataReceived
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_OnDataReceived_Netick_Unity_NetworkSandbox_Netick_NetworkConnection_System_Byte_System_Byte__System_Int32_Netick_TransportDeliveryMethod_
  name: OnDataReceived
  nameWithType: NetworkEventsListener.OnDataReceived
  fullName: Netick.Unity.NetworkEventsListener.OnDataReceived
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Netick.TransportDeliveryMethod
  commentId: T:Netick.TransportDeliveryMethod
  parent: Netick
  isExternal: true
  href: Netick.TransportDeliveryMethod.html
  name: TransportDeliveryMethod
  nameWithType: TransportDeliveryMethod
  fullName: Netick.TransportDeliveryMethod
- uid: Netick.Unity.NetworkEventsListener.UnlinkFromNetick*
  commentId: Overload:Netick.Unity.NetworkEventsListener.UnlinkFromNetick
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_UnlinkFromNetick
  name: UnlinkFromNetick
  nameWithType: NetworkEventsListener.UnlinkFromNetick
  fullName: Netick.Unity.NetworkEventsListener.UnlinkFromNetick
- uid: Netick.Unity.NetworkEventsListener.#ctor*
  commentId: Overload:Netick.Unity.NetworkEventsListener.#ctor
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener__ctor
  name: NetworkEventsListener
  nameWithType: NetworkEventsListener.NetworkEventsListener
  fullName: Netick.Unity.NetworkEventsListener.NetworkEventsListener
  nameWithType.vb: NetworkEventsListener.New
  fullName.vb: Netick.Unity.NetworkEventsListener.New
  name.vb: New
- uid: Netick.Unity.NetworkEventsListener.Sandbox*
  commentId: Overload:Netick.Unity.NetworkEventsListener.Sandbox
  isExternal: true
  href: Netick.Unity.NetworkEventsListener.html#Netick_Unity_NetworkEventsListener_Sandbox
  name: Sandbox
  nameWithType: NetworkEventsListener.Sandbox
  fullName: Netick.Unity.NetworkEventsListener.Sandbox

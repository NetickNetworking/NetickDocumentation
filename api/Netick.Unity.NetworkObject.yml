### YamlMime:ManagedReference
items:
- uid: Netick.Unity.NetworkObject
  commentId: T:Netick.Unity.NetworkObject
  id: NetworkObject
  parent: Netick.Unity
  children:
  - Netick.Unity.NetworkObject.#ctor
  - Netick.Unity.NetworkObject.AoILayer
  - Netick.Unity.NetworkObject.BroadPhaseFilter
  - Netick.Unity.NetworkObject.ClearState(System.Boolean)
  - Netick.Unity.NetworkObject.CopyStateTo(System.Byte*)
  - Netick.Unity.NetworkObject.CopyStateTo(System.Byte[])
  - Netick.Unity.NetworkObject.Engine
  - Netick.Unity.NetworkObject.Entity
  - Netick.Unity.NetworkObject.GetBehaviourById``1(System.Int32)
  - Netick.Unity.NetworkObject.GetBehaviour``1
  - Netick.Unity.NetworkObject.GetRef
  - Netick.Unity.NetworkObject.GetSceneId
  - Netick.Unity.NetworkObject.GetStateRef
  - Netick.Unity.NetworkObject.HasValidId
  - Netick.Unity.NetworkObject.Id
  - Netick.Unity.NetworkObject.InputSource
  - Netick.Unity.NetworkObject.InputSourcePlayerId
  - Netick.Unity.NetworkObject.InterestGroup
  - Netick.Unity.NetworkObject.IsClient
  - Netick.Unity.NetworkObject.IsInputSource
  - Netick.Unity.NetworkObject.IsOwner
  - Netick.Unity.NetworkObject.IsPersistent
  - Netick.Unity.NetworkObject.IsPrefabObject
  - Netick.Unity.NetworkObject.IsProxy
  - Netick.Unity.NetworkObject.IsResimulating
  - Netick.Unity.NetworkObject.IsSceneObject
  - Netick.Unity.NetworkObject.IsServer
  - Netick.Unity.NetworkObject.NarrowPhaseFilter
  - Netick.Unity.NetworkObject.NetickBehaviours
  - Netick.Unity.NetworkObject.NetworkedBehaviours
  - Netick.Unity.NetworkObject.Parent
  - Netick.Unity.NetworkObject.PredictionMode
  - Netick.Unity.NetworkObject.PrefabId
  - Netick.Unity.NetworkObject.RuntimeSceneId
  - Netick.Unity.NetworkObject.Sandbox
  - Netick.Unity.NetworkObject.SceneId
  - Netick.Unity.NetworkObject.SetInitialProperties(System.Boolean,Netick.Relevancy,System.Boolean,Netick.BroadPhaseFilter,System.Boolean)
  - Netick.Unity.NetworkObject.SetNarrowphaseInterest(Netick.NetworkPlayer,System.Boolean)
  - Netick.Unity.NetworkObject.SetParent(Netick.Unity.NetworkObject)
  - Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef,System.Byte*,System.Boolean)
  - Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef,System.Byte[],System.Boolean)
  - Netick.Unity.NetworkObject.SetStateFrom(System.Byte*,System.Boolean)
  - Netick.Unity.NetworkObject.SetStateFrom(System.Byte[],System.Boolean)
  - Netick.Unity.NetworkObject.SpatialPrioritization
  - Netick.Unity.NetworkObject.SpawnTick
  - Netick.Unity.NetworkObject.StateSize
  - Netick.Unity.NetworkObject.UpdateAoI
  - Netick.Unity.NetworkObject.UpdateAoI(UnityEngine.Vector3)
  langs:
  - csharp
  - vb
  name: NetworkObject
  nameWithType: NetworkObject
  fullName: Netick.Unity.NetworkObject
  type: Class
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Any GameObject which needs to be synced/replicated must have a Network Object component. Itâ€™s the component that tells Netick a GameObject is networked. Although not every child GameObject needs it, only the root has to have a Network Object.
  example: []
  syntax:
    content: 'public class NetworkObject : MonoBehaviour, INetickEntity'
    content.vb: Public Class NetworkObject Inherits MonoBehaviour Implements INetickEntity
  inheritance:
  - System.Object
  implements:
  - Netick.INetickEntity
- uid: Netick.Unity.NetworkObject.GetRef
  commentId: M:Netick.Unity.NetworkObject.GetRef
  id: GetRef
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: GetRef()
  nameWithType: NetworkObject.GetRef()
  fullName: Netick.Unity.NetworkObject.GetRef()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public NetworkObjectRef GetRef()
    return:
      type: Netick.Unity.NetworkObjectRef
    content.vb: Public Function GetRef() As NetworkObjectRef
  overload: Netick.Unity.NetworkObject.GetRef*
- uid: Netick.Unity.NetworkObject.GetSceneId
  commentId: M:Netick.Unity.NetworkObject.GetSceneId
  id: GetSceneId
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: GetSceneId()
  nameWithType: NetworkObject.GetSceneId()
  fullName: Netick.Unity.NetworkObject.GetSceneId()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public int GetSceneId()
    return:
      type: System.Int32
    content.vb: Public Function GetSceneId() As Integer
  overload: Netick.Unity.NetworkObject.GetSceneId*
- uid: Netick.Unity.NetworkObject.SetNarrowphaseInterest(Netick.NetworkPlayer,System.Boolean)
  commentId: M:Netick.Unity.NetworkObject.SetNarrowphaseInterest(Netick.NetworkPlayer,System.Boolean)
  id: SetNarrowphaseInterest(Netick.NetworkPlayer,System.Boolean)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SetNarrowphaseInterest(NetworkPlayer, bool)
  nameWithType: NetworkObject.SetNarrowphaseInterest(NetworkPlayer, bool)
  fullName: Netick.Unity.NetworkObject.SetNarrowphaseInterest(Netick.NetworkPlayer, bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public void SetNarrowphaseInterest(NetworkPlayer player, bool isInterested)
    parameters:
    - id: player
      type: Netick.NetworkPlayer
    - id: isInterested
      type: System.Boolean
    content.vb: Public Sub SetNarrowphaseInterest(player As NetworkPlayer, isInterested As Boolean)
  overload: Netick.Unity.NetworkObject.SetNarrowphaseInterest*
  nameWithType.vb: NetworkObject.SetNarrowphaseInterest(NetworkPlayer, Boolean)
  fullName.vb: Netick.Unity.NetworkObject.SetNarrowphaseInterest(Netick.NetworkPlayer, Boolean)
  name.vb: SetNarrowphaseInterest(NetworkPlayer, Boolean)
- uid: Netick.Unity.NetworkObject.GetStateRef
  commentId: M:Netick.Unity.NetworkObject.GetStateRef
  id: GetStateRef
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: GetStateRef()
  nameWithType: NetworkObject.GetStateRef()
  fullName: Netick.Unity.NetworkObject.GetStateRef()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public EntityStateRef GetStateRef()
    return:
      type: Netick.EntityStateRef
    content.vb: Public Function GetStateRef() As EntityStateRef
  overload: Netick.Unity.NetworkObject.GetStateRef*
- uid: Netick.Unity.NetworkObject.ClearState(System.Boolean)
  commentId: M:Netick.Unity.NetworkObject.ClearState(System.Boolean)
  id: ClearState(System.Boolean)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: ClearState(bool)
  nameWithType: NetworkObject.ClearState(bool)
  fullName: Netick.Unity.NetworkObject.ClearState(bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Zeros out the networked state memory of this object. Ignores InputSource Relevancy.
  example: []
  syntax:
    content: public void ClearState(bool invokeOnChanged = true)
    parameters:
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Sub ClearState(invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkObject.ClearState*
  nameWithType.vb: NetworkObject.ClearState(Boolean)
  fullName.vb: Netick.Unity.NetworkObject.ClearState(Boolean)
  name.vb: ClearState(Boolean)
- uid: Netick.Unity.NetworkObject.CopyStateTo(System.Byte*)
  commentId: M:Netick.Unity.NetworkObject.CopyStateTo(System.Byte*)
  id: CopyStateTo(System.Byte*)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: CopyStateTo(byte*)
  nameWithType: NetworkObject.CopyStateTo(byte*)
  fullName: Netick.Unity.NetworkObject.CopyStateTo(byte*)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Copies the state of this object into target.
  example: []
  syntax:
    content: public void CopyStateTo(byte* target)
    parameters:
    - id: target
      type: System.Byte*
    content.vb: Public Sub CopyStateTo(target As Byte*)
  overload: Netick.Unity.NetworkObject.CopyStateTo*
  nameWithType.vb: NetworkObject.CopyStateTo(Byte*)
  fullName.vb: Netick.Unity.NetworkObject.CopyStateTo(Byte*)
  name.vb: CopyStateTo(Byte*)
- uid: Netick.Unity.NetworkObject.CopyStateTo(System.Byte[])
  commentId: M:Netick.Unity.NetworkObject.CopyStateTo(System.Byte[])
  id: CopyStateTo(System.Byte[])
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: CopyStateTo(byte[])
  nameWithType: NetworkObject.CopyStateTo(byte[])
  fullName: Netick.Unity.NetworkObject.CopyStateTo(byte[])
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Copies the state of this object into target.
  example: []
  syntax:
    content: public void CopyStateTo(byte[] target)
    parameters:
    - id: target
      type: System.Byte[]
    content.vb: Public Sub CopyStateTo(target As Byte())
  overload: Netick.Unity.NetworkObject.CopyStateTo*
  nameWithType.vb: NetworkObject.CopyStateTo(Byte())
  fullName.vb: Netick.Unity.NetworkObject.CopyStateTo(Byte())
  name.vb: CopyStateTo(Byte())
- uid: Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef,System.Byte[],System.Boolean)
  commentId: M:Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef,System.Byte[],System.Boolean)
  id: SetStateFrom(Netick.EntityStateRef,System.Byte[],System.Boolean)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SetStateFrom(EntityStateRef, byte[], bool)
  nameWithType: NetworkObject.SetStateFrom(EntityStateRef, byte[], bool)
  fullName: Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef, byte[], bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public virtual void SetStateFrom(EntityStateRef stateRef, byte[] worldSnapshot, bool invokeOnChanged = true)
    parameters:
    - id: stateRef
      type: Netick.EntityStateRef
    - id: worldSnapshot
      type: System.Byte[]
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Overridable Sub SetStateFrom(stateRef As EntityStateRef, worldSnapshot As Byte(), invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkObject.SetStateFrom*
  nameWithType.vb: NetworkObject.SetStateFrom(EntityStateRef, Byte(), Boolean)
  fullName.vb: Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef, Byte(), Boolean)
  name.vb: SetStateFrom(EntityStateRef, Byte(), Boolean)
- uid: Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef,System.Byte*,System.Boolean)
  commentId: M:Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef,System.Byte*,System.Boolean)
  id: SetStateFrom(Netick.EntityStateRef,System.Byte*,System.Boolean)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SetStateFrom(EntityStateRef, byte*, bool)
  nameWithType: NetworkObject.SetStateFrom(EntityStateRef, byte*, bool)
  fullName: Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef, byte*, bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public void SetStateFrom(EntityStateRef stateRef, byte* worldSnapshot, bool invokeOnChanged = true)
    parameters:
    - id: stateRef
      type: Netick.EntityStateRef
    - id: worldSnapshot
      type: System.Byte*
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Sub SetStateFrom(stateRef As EntityStateRef, worldSnapshot As Byte*, invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkObject.SetStateFrom*
  nameWithType.vb: NetworkObject.SetStateFrom(EntityStateRef, Byte*, Boolean)
  fullName.vb: Netick.Unity.NetworkObject.SetStateFrom(Netick.EntityStateRef, Byte*, Boolean)
  name.vb: SetStateFrom(EntityStateRef, Byte*, Boolean)
- uid: Netick.Unity.NetworkObject.SetStateFrom(System.Byte*,System.Boolean)
  commentId: M:Netick.Unity.NetworkObject.SetStateFrom(System.Byte*,System.Boolean)
  id: SetStateFrom(System.Byte*,System.Boolean)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SetStateFrom(byte*, bool)
  nameWithType: NetworkObject.SetStateFrom(byte*, bool)
  fullName: Netick.Unity.NetworkObject.SetStateFrom(byte*, bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Sets the state of this object. Ignores InputSource Relevancy.
  example: []
  syntax:
    content: public void SetStateFrom(byte* source, bool invokeOnChanged = true)
    parameters:
    - id: source
      type: System.Byte*
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Sub SetStateFrom(source As Byte*, invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkObject.SetStateFrom*
  nameWithType.vb: NetworkObject.SetStateFrom(Byte*, Boolean)
  fullName.vb: Netick.Unity.NetworkObject.SetStateFrom(Byte*, Boolean)
  name.vb: SetStateFrom(Byte*, Boolean)
- uid: Netick.Unity.NetworkObject.SetStateFrom(System.Byte[],System.Boolean)
  commentId: M:Netick.Unity.NetworkObject.SetStateFrom(System.Byte[],System.Boolean)
  id: SetStateFrom(System.Byte[],System.Boolean)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SetStateFrom(byte[], bool)
  nameWithType: NetworkObject.SetStateFrom(byte[], bool)
  fullName: Netick.Unity.NetworkObject.SetStateFrom(byte[], bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Sets the state of this object. Ignores InputSource Relevancy.
  example: []
  syntax:
    content: public void SetStateFrom(byte[] source, bool invokeOnChanged = true)
    parameters:
    - id: source
      type: System.Byte[]
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Sub SetStateFrom(source As Byte(), invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkObject.SetStateFrom*
  nameWithType.vb: NetworkObject.SetStateFrom(Byte(), Boolean)
  fullName.vb: Netick.Unity.NetworkObject.SetStateFrom(Byte(), Boolean)
  name.vb: SetStateFrom(Byte(), Boolean)
- uid: Netick.Unity.NetworkObject.UpdateAoI
  commentId: M:Netick.Unity.NetworkObject.UpdateAoI
  id: UpdateAoI
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: UpdateAoI()
  nameWithType: NetworkObject.UpdateAoI()
  fullName: Netick.Unity.NetworkObject.UpdateAoI()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public void UpdateAoI()
    content.vb: Public Sub UpdateAoI()
  overload: Netick.Unity.NetworkObject.UpdateAoI*
- uid: Netick.Unity.NetworkObject.UpdateAoI(UnityEngine.Vector3)
  commentId: M:Netick.Unity.NetworkObject.UpdateAoI(UnityEngine.Vector3)
  id: UpdateAoI(UnityEngine.Vector3)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: UpdateAoI(Vector3)
  nameWithType: NetworkObject.UpdateAoI(Vector3)
  fullName: Netick.Unity.NetworkObject.UpdateAoI(UnityEngine.Vector3)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public void UpdateAoI(Vector3 position)
    parameters:
    - id: position
      type: UnityEngine.Vector3
    content.vb: Public Sub UpdateAoI(position As Vector3)
  overload: Netick.Unity.NetworkObject.UpdateAoI*
- uid: Netick.Unity.NetworkObject.GetBehaviour``1
  commentId: M:Netick.Unity.NetworkObject.GetBehaviour``1
  id: GetBehaviour``1
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: GetBehaviour<T>()
  nameWithType: NetworkObject.GetBehaviour<T>()
  fullName: Netick.Unity.NetworkObject.GetBehaviour<T>()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: 'public T GetBehaviour<T>() where T : NetworkBehaviour'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetBehaviour(Of T As NetworkBehaviour)() As T
  overload: Netick.Unity.NetworkObject.GetBehaviour*
  nameWithType.vb: NetworkObject.GetBehaviour(Of T)()
  fullName.vb: Netick.Unity.NetworkObject.GetBehaviour(Of T)()
  name.vb: GetBehaviour(Of T)()
- uid: Netick.Unity.NetworkObject.GetBehaviourById``1(System.Int32)
  commentId: M:Netick.Unity.NetworkObject.GetBehaviourById``1(System.Int32)
  id: GetBehaviourById``1(System.Int32)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: GetBehaviourById<T>(int)
  nameWithType: NetworkObject.GetBehaviourById<T>(int)
  fullName: Netick.Unity.NetworkObject.GetBehaviourById<T>(int)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: 'public T GetBehaviourById<T>(int id) where T : NetworkBehaviour'
    parameters:
    - id: id
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetBehaviourById(Of T As NetworkBehaviour)(id As Integer) As T
  overload: Netick.Unity.NetworkObject.GetBehaviourById*
  nameWithType.vb: NetworkObject.GetBehaviourById(Of T)(Integer)
  fullName.vb: Netick.Unity.NetworkObject.GetBehaviourById(Of T)(Integer)
  name.vb: GetBehaviourById(Of T)(Integer)
- uid: Netick.Unity.NetworkObject.SetParent(Netick.Unity.NetworkObject)
  commentId: M:Netick.Unity.NetworkObject.SetParent(Netick.Unity.NetworkObject)
  id: SetParent(Netick.Unity.NetworkObject)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SetParent(NetworkObject)
  nameWithType: NetworkObject.SetParent(NetworkObject)
  fullName: Netick.Unity.NetworkObject.SetParent(Netick.Unity.NetworkObject)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: <i><b>[Owner/InputSource Only]</b></i> Changes the parent of this object.
  example: []
  syntax:
    content: public void SetParent(NetworkObject obj)
    parameters:
    - id: obj
      type: Netick.Unity.NetworkObject
      description: The object which will become the parent of this object.
    content.vb: Public Sub SetParent(obj As NetworkObject)
  overload: Netick.Unity.NetworkObject.SetParent*
- uid: Netick.Unity.NetworkObject.SetInitialProperties(System.Boolean,Netick.Relevancy,System.Boolean,Netick.BroadPhaseFilter,System.Boolean)
  commentId: M:Netick.Unity.NetworkObject.SetInitialProperties(System.Boolean,Netick.Relevancy,System.Boolean,Netick.BroadPhaseFilter,System.Boolean)
  id: SetInitialProperties(System.Boolean,Netick.Relevancy,System.Boolean,Netick.BroadPhaseFilter,System.Boolean)
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SetInitialProperties(bool, Relevancy, bool, BroadPhaseFilter, bool)
  nameWithType: NetworkObject.SetInitialProperties(bool, Relevancy, bool, BroadPhaseFilter, bool)
  fullName: Netick.Unity.NetworkObject.SetInitialProperties(bool, Netick.Relevancy, bool, Netick.BroadPhaseFilter, bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public void SetInitialProperties(bool isPersistent, Relevancy predictionMode, bool addToNetworkLoop, BroadPhaseFilter broadPhaseFilter, bool narrowPhaseFilter)
    parameters:
    - id: isPersistent
      type: System.Boolean
    - id: predictionMode
      type: Netick.Relevancy
    - id: addToNetworkLoop
      type: System.Boolean
    - id: broadPhaseFilter
      type: Netick.BroadPhaseFilter
    - id: narrowPhaseFilter
      type: System.Boolean
    content.vb: Public Sub SetInitialProperties(isPersistent As Boolean, predictionMode As Relevancy, addToNetworkLoop As Boolean, broadPhaseFilter As BroadPhaseFilter, narrowPhaseFilter As Boolean)
  overload: Netick.Unity.NetworkObject.SetInitialProperties*
  nameWithType.vb: NetworkObject.SetInitialProperties(Boolean, Relevancy, Boolean, BroadPhaseFilter, Boolean)
  fullName.vb: Netick.Unity.NetworkObject.SetInitialProperties(Boolean, Netick.Relevancy, Boolean, Netick.BroadPhaseFilter, Boolean)
  name.vb: SetInitialProperties(Boolean, Relevancy, Boolean, BroadPhaseFilter, Boolean)
- uid: Netick.Unity.NetworkObject.#ctor
  commentId: M:Netick.Unity.NetworkObject.#ctor
  id: '#ctor'
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: NetworkObject()
  nameWithType: NetworkObject.NetworkObject()
  fullName: Netick.Unity.NetworkObject.NetworkObject()
  type: Constructor
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public NetworkObject()
    content.vb: Public Sub New()
  overload: Netick.Unity.NetworkObject.#ctor*
  nameWithType.vb: NetworkObject.New()
  fullName.vb: Netick.Unity.NetworkObject.New()
  name.vb: New()
- uid: Netick.Unity.NetworkObject.Sandbox
  commentId: P:Netick.Unity.NetworkObject.Sandbox
  id: Sandbox
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: Sandbox
  nameWithType: NetworkObject.Sandbox
  fullName: Netick.Unity.NetworkObject.Sandbox
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public NetworkSandbox Sandbox { get; }
    parameters: []
    return:
      type: Netick.Unity.NetworkSandbox
    content.vb: Public ReadOnly Property Sandbox As NetworkSandbox
  overload: Netick.Unity.NetworkObject.Sandbox*
- uid: Netick.Unity.NetworkObject.Engine
  commentId: P:Netick.Unity.NetworkObject.Engine
  id: Engine
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: Engine
  nameWithType: NetworkObject.Engine
  fullName: Netick.Unity.NetworkObject.Engine
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public NetickEngine Engine { get; }
    parameters: []
    return:
      type: Netick.NetickEngine
    content.vb: Public ReadOnly Property Engine As NetickEngine
  overload: Netick.Unity.NetworkObject.Engine*
  implements:
  - Netick.INetickEntity.Engine
- uid: Netick.Unity.NetworkObject.Entity
  commentId: P:Netick.Unity.NetworkObject.Entity
  id: Entity
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: NetworkObject.Entity
  fullName: Netick.Unity.NetworkObject.Entity
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public Entity Entity { get; }
    parameters: []
    return:
      type: Netick.Entity
    content.vb: Public ReadOnly Property Entity As Entity
  overload: Netick.Unity.NetworkObject.Entity*
  implements:
  - Netick.INetickEntity.Entity
- uid: Netick.Unity.NetworkObject.Id
  commentId: P:Netick.Unity.NetworkObject.Id
  id: Id
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: NetworkObject.Id
  fullName: Netick.Unity.NetworkObject.Id
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Id As Integer
  overload: Netick.Unity.NetworkObject.Id*
- uid: Netick.Unity.NetworkObject.HasValidId
  commentId: P:Netick.Unity.NetworkObject.HasValidId
  id: HasValidId
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: HasValidId
  nameWithType: NetworkObject.HasValidId
  fullName: Netick.Unity.NetworkObject.HasValidId
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if this <xref href="Netick.Unity.NetworkObject" data-throw-if-not-resolved="false"></xref> has been added to the simulation by Netick, and thus has a valid id.
  example: []
  syntax:
    content: public bool HasValidId { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasValidId As Boolean
  overload: Netick.Unity.NetworkObject.HasValidId*
- uid: Netick.Unity.NetworkObject.AoILayer
  commentId: P:Netick.Unity.NetworkObject.AoILayer
  id: AoILayer
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: AoILayer
  nameWithType: NetworkObject.AoILayer
  fullName: Netick.Unity.NetworkObject.AoILayer
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public int AoILayer { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AoILayer As Integer
  overload: Netick.Unity.NetworkObject.AoILayer*
  implements:
  - Netick.INetickEntity.AoILayer
- uid: Netick.Unity.NetworkObject.BroadPhaseFilter
  commentId: P:Netick.Unity.NetworkObject.BroadPhaseFilter
  id: BroadPhaseFilter
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: BroadPhaseFilter
  nameWithType: NetworkObject.BroadPhaseFilter
  fullName: Netick.Unity.NetworkObject.BroadPhaseFilter
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public BroadPhaseFilter BroadPhaseFilter { get; }
    parameters: []
    return:
      type: Netick.BroadPhaseFilter
    content.vb: Public ReadOnly Property BroadPhaseFilter As BroadPhaseFilter
  overload: Netick.Unity.NetworkObject.BroadPhaseFilter*
- uid: Netick.Unity.NetworkObject.NarrowPhaseFilter
  commentId: P:Netick.Unity.NetworkObject.NarrowPhaseFilter
  id: NarrowPhaseFilter
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: NarrowPhaseFilter
  nameWithType: NetworkObject.NarrowPhaseFilter
  fullName: Netick.Unity.NetworkObject.NarrowPhaseFilter
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public bool NarrowPhaseFilter { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property NarrowPhaseFilter As Boolean
  overload: Netick.Unity.NetworkObject.NarrowPhaseFilter*
- uid: Netick.Unity.NetworkObject.PredictionMode
  commentId: P:Netick.Unity.NetworkObject.PredictionMode
  id: PredictionMode
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: PredictionMode
  nameWithType: NetworkObject.PredictionMode
  fullName: Netick.Unity.NetworkObject.PredictionMode
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public Relevancy PredictionMode { get; }
    parameters: []
    return:
      type: Netick.Relevancy
    content.vb: Public ReadOnly Property PredictionMode As Relevancy
  overload: Netick.Unity.NetworkObject.PredictionMode*
  implements:
  - Netick.INetickEntity.PredictionMode
- uid: Netick.Unity.NetworkObject.SpatialPrioritization
  commentId: P:Netick.Unity.NetworkObject.SpatialPrioritization
  id: SpatialPrioritization
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SpatialPrioritization
  nameWithType: NetworkObject.SpatialPrioritization
  fullName: Netick.Unity.NetworkObject.SpatialPrioritization
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public bool SpatialPrioritization { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SpatialPrioritization As Boolean
  overload: Netick.Unity.NetworkObject.SpatialPrioritization*
- uid: Netick.Unity.NetworkObject.IsPersistent
  commentId: P:Netick.Unity.NetworkObject.IsPersistent
  id: IsPersistent
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: IsPersistent
  nameWithType: NetworkObject.IsPersistent
  fullName: Netick.Unity.NetworkObject.IsPersistent
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public bool IsPersistent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPersistent As Boolean
  overload: Netick.Unity.NetworkObject.IsPersistent*
- uid: Netick.Unity.NetworkObject.SpawnTick
  commentId: P:Netick.Unity.NetworkObject.SpawnTick
  id: SpawnTick
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SpawnTick
  nameWithType: NetworkObject.SpawnTick
  fullName: Netick.Unity.NetworkObject.SpawnTick
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public Tick SpawnTick { get; }
    parameters: []
    return:
      type: Netick.Tick
    content.vb: Public ReadOnly Property SpawnTick As Tick
  overload: Netick.Unity.NetworkObject.SpawnTick*
- uid: Netick.Unity.NetworkObject.Parent
  commentId: P:Netick.Unity.NetworkObject.Parent
  id: Parent
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: NetworkObject.Parent
  fullName: Netick.Unity.NetworkObject.Parent
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: The <xref href="Netick.Unity.NetworkObject" data-throw-if-not-resolved="false"></xref> parent of this object.
  example: []
  syntax:
    content: public NetworkObject Parent { get; }
    parameters: []
    return:
      type: Netick.Unity.NetworkObject
    content.vb: Public ReadOnly Property Parent As NetworkObject
  overload: Netick.Unity.NetworkObject.Parent*
- uid: Netick.Unity.NetworkObject.IsSceneObject
  commentId: P:Netick.Unity.NetworkObject.IsSceneObject
  id: IsSceneObject
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: IsSceneObject
  nameWithType: NetworkObject.IsSceneObject
  fullName: Netick.Unity.NetworkObject.IsSceneObject
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public bool IsSceneObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSceneObject As Boolean
  overload: Netick.Unity.NetworkObject.IsSceneObject*
- uid: Netick.Unity.NetworkObject.IsPrefabObject
  commentId: P:Netick.Unity.NetworkObject.IsPrefabObject
  id: IsPrefabObject
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: IsPrefabObject
  nameWithType: NetworkObject.IsPrefabObject
  fullName: Netick.Unity.NetworkObject.IsPrefabObject
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public bool IsPrefabObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPrefabObject As Boolean
  overload: Netick.Unity.NetworkObject.IsPrefabObject*
- uid: Netick.Unity.NetworkObject.PrefabId
  commentId: P:Netick.Unity.NetworkObject.PrefabId
  id: PrefabId
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: PrefabId
  nameWithType: NetworkObject.PrefabId
  fullName: Netick.Unity.NetworkObject.PrefabId
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public int PrefabId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PrefabId As Integer
  overload: Netick.Unity.NetworkObject.PrefabId*
- uid: Netick.Unity.NetworkObject.SceneId
  commentId: P:Netick.Unity.NetworkObject.SceneId
  id: SceneId
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: SceneId
  nameWithType: NetworkObject.SceneId
  fullName: Netick.Unity.NetworkObject.SceneId
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public int SceneId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SceneId As Integer
  overload: Netick.Unity.NetworkObject.SceneId*
- uid: Netick.Unity.NetworkObject.RuntimeSceneId
  commentId: P:Netick.Unity.NetworkObject.RuntimeSceneId
  id: RuntimeSceneId
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: RuntimeSceneId
  nameWithType: NetworkObject.RuntimeSceneId
  fullName: Netick.Unity.NetworkObject.RuntimeSceneId
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public int RuntimeSceneId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property RuntimeSceneId As Integer
  overload: Netick.Unity.NetworkObject.RuntimeSceneId*
- uid: Netick.Unity.NetworkObject.NetworkedBehaviours
  commentId: P:Netick.Unity.NetworkObject.NetworkedBehaviours
  id: NetworkedBehaviours
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: NetworkedBehaviours
  nameWithType: NetworkObject.NetworkedBehaviours
  fullName: Netick.Unity.NetworkObject.NetworkedBehaviours
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public NetworkBehaviour[] NetworkedBehaviours { get; }
    parameters: []
    return:
      type: Netick.Unity.NetworkBehaviour[]
    content.vb: Public ReadOnly Property NetworkedBehaviours As NetworkBehaviour()
  overload: Netick.Unity.NetworkObject.NetworkedBehaviours*
- uid: Netick.Unity.NetworkObject.NetickBehaviours
  commentId: P:Netick.Unity.NetworkObject.NetickBehaviours
  id: NetickBehaviours
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: NetickBehaviours
  nameWithType: NetworkObject.NetickBehaviours
  fullName: Netick.Unity.NetworkObject.NetickBehaviours
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public NetickBehaviour[] NetickBehaviours { get; }
    parameters: []
    return:
      type: Netick.Unity.NetickBehaviour[]
    content.vb: Public ReadOnly Property NetickBehaviours As NetickBehaviour()
  overload: Netick.Unity.NetworkObject.NetickBehaviours*
- uid: Netick.Unity.NetworkObject.IsClient
  commentId: P:Netick.Unity.NetworkObject.IsClient
  id: IsClient
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: IsClient
  nameWithType: NetworkObject.IsClient
  fullName: Netick.Unity.NetworkObject.IsClient
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if this <xref href="Netick.Unity.NetworkSandbox" data-throw-if-not-resolved="false"></xref> is a client.
  example: []
  syntax:
    content: public bool IsClient { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClient As Boolean
  overload: Netick.Unity.NetworkObject.IsClient*
- uid: Netick.Unity.NetworkObject.IsServer
  commentId: P:Netick.Unity.NetworkObject.IsServer
  id: IsServer
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: IsServer
  nameWithType: NetworkObject.IsServer
  fullName: Netick.Unity.NetworkObject.IsServer
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if this <xref href="Netick.Unity.NetworkSandbox" data-throw-if-not-resolved="false"></xref> is the server.
  example: []
  syntax:
    content: public bool IsServer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsServer As Boolean
  overload: Netick.Unity.NetworkObject.IsServer*
- uid: Netick.Unity.NetworkObject.IsOwner
  commentId: P:Netick.Unity.NetworkObject.IsOwner
  id: IsOwner
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: IsOwner
  nameWithType: NetworkObject.IsOwner
  fullName: Netick.Unity.NetworkObject.IsOwner
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: 'Returns true if this <xref href="Netick.Unity.NetworkSandbox" data-throw-if-not-resolved="false"></xref> is the owner of this Object. In this version of Netick: Server=Owner.'
  example: []
  syntax:
    content: public bool IsOwner { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOwner As Boolean
  overload: Netick.Unity.NetworkObject.IsOwner*
- uid: Netick.Unity.NetworkObject.IsInputSource
  commentId: P:Netick.Unity.NetworkObject.IsInputSource
  id: IsInputSource
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: IsInputSource
  nameWithType: NetworkObject.IsInputSource
  fullName: Netick.Unity.NetworkObject.IsInputSource
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if this <xref href="Netick.Unity.NetworkSandbox.LocalPlayer" data-throw-if-not-resolved="false"></xref> is providing inputs for this <xref href="Netick.Unity.NetworkObject" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsInputSource { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInputSource As Boolean
  overload: Netick.Unity.NetworkObject.IsInputSource*
- uid: Netick.Unity.NetworkObject.IsProxy
  commentId: P:Netick.Unity.NetworkObject.IsProxy
  id: IsProxy
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: IsProxy
  nameWithType: NetworkObject.IsProxy
  fullName: Netick.Unity.NetworkObject.IsProxy
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if we neither provide inputs nor own this <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsProxy { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsProxy As Boolean
  overload: Netick.Unity.NetworkObject.IsProxy*
- uid: Netick.Unity.NetworkObject.IsResimulating
  commentId: P:Netick.Unity.NetworkObject.IsResimulating
  id: IsResimulating
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: IsResimulating
  nameWithType: NetworkObject.IsResimulating
  fullName: Netick.Unity.NetworkObject.IsResimulating
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if we are currently resimulating a previous input of the past. On the server, it always returns false since <b>only the clients resimulate</b>.
  example: []
  syntax:
    content: public bool IsResimulating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResimulating As Boolean
  overload: Netick.Unity.NetworkObject.IsResimulating*
- uid: Netick.Unity.NetworkObject.InputSource
  commentId: P:Netick.Unity.NetworkObject.InputSource
  id: InputSource
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: InputSource
  nameWithType: NetworkObject.InputSource
  fullName: Netick.Unity.NetworkObject.InputSource
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: >-
    Returns the source <xref href="Netick.NetworkPlayer" data-throw-if-not-resolved="false"></xref> (<xref href="Netick.NetworkPeer" data-throw-if-not-resolved="false"></xref>/<xref href="Netick.ServerConnection" data-throw-if-not-resolved="false"></xref>) of inputs for this <xref href="Netick.Unity.NetworkObject" data-throw-if-not-resolved="false"></xref>. If the source of inputs is remote (from a client) it returns that <xref href="Netick.ServerConnection" data-throw-if-not-resolved="false"></xref>, while on the

    input source itself it returns the local <xref href="Netick.NetworkPlayer" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public NetworkPlayer InputSource { get; set; }
    parameters: []
    return:
      type: Netick.NetworkPlayer
    content.vb: Public Property InputSource As NetworkPlayer
  overload: Netick.Unity.NetworkObject.InputSource*
- uid: Netick.Unity.NetworkObject.InputSourcePlayerId
  commentId: P:Netick.Unity.NetworkObject.InputSourcePlayerId
  id: InputSourcePlayerId
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: InputSourcePlayerId
  nameWithType: NetworkObject.InputSourcePlayerId
  fullName: Netick.Unity.NetworkObject.InputSourcePlayerId
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns the NetworkPlayerId of the input source of this object. This is synced for every client.
  example: []
  syntax:
    content: public NetworkPlayerId InputSourcePlayerId { get; }
    parameters: []
    return:
      type: Netick.NetworkPlayerId
    content.vb: Public ReadOnly Property InputSourcePlayerId As NetworkPlayerId
  overload: Netick.Unity.NetworkObject.InputSourcePlayerId*
- uid: Netick.Unity.NetworkObject.InterestGroup
  commentId: P:Netick.Unity.NetworkObject.InterestGroup
  id: InterestGroup
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: InterestGroup
  nameWithType: NetworkObject.InterestGroup
  fullName: Netick.Unity.NetworkObject.InterestGroup
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: The interest group of this object. This can only be changed if BroadPhaseFilter is set to Custom.
  example: []
  syntax:
    content: public InterestManagementGroup InterestGroup { get; set; }
    parameters: []
    return:
      type: Netick.InterestManagementGroup
    content.vb: Public Property InterestGroup As InterestManagementGroup
  overload: Netick.Unity.NetworkObject.InterestGroup*
- uid: Netick.Unity.NetworkObject.StateSize
  commentId: P:Netick.Unity.NetworkObject.StateSize
  id: StateSize
  parent: Netick.Unity.NetworkObject
  langs:
  - csharp
  - vb
  name: StateSize
  nameWithType: NetworkObject.StateSize
  fullName: Netick.Unity.NetworkObject.StateSize
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns the networked state size of this object in bytes.
  example: []
  syntax:
    content: public int StateSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property StateSize As Integer
  overload: Netick.Unity.NetworkObject.StateSize*
references:
- uid: Netick.Unity
  commentId: N:Netick.Unity
  isExternal: true
  href: Netick.html
  name: Netick.Unity
  nameWithType: Netick.Unity
  fullName: Netick.Unity
  spec.csharp:
  - uid: Netick
    name: Netick
    isExternal: true
    href: Netick.html
  - name: .
  - uid: Netick.Unity
    name: Unity
    isExternal: true
    href: Netick.Unity.html
  spec.vb:
  - uid: Netick
    name: Netick
    isExternal: true
    href: Netick.html
  - name: .
  - uid: Netick.Unity
    name: Unity
    isExternal: true
    href: Netick.Unity.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Netick.INetickEntity
  commentId: T:Netick.INetickEntity
  parent: Netick
  isExternal: true
  href: Netick.INetickEntity.html
  name: INetickEntity
  nameWithType: INetickEntity
  fullName: Netick.INetickEntity
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: Netick.Unity.NetworkObject.GetRef*
  commentId: Overload:Netick.Unity.NetworkObject.GetRef
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_GetRef
  name: GetRef
  nameWithType: NetworkObject.GetRef
  fullName: Netick.Unity.NetworkObject.GetRef
- uid: Netick.Unity.NetworkObjectRef
  commentId: T:Netick.Unity.NetworkObjectRef
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkObjectRef.html
  name: NetworkObjectRef
  nameWithType: NetworkObjectRef
  fullName: Netick.Unity.NetworkObjectRef
- uid: Netick.Unity.NetworkObject.GetSceneId*
  commentId: Overload:Netick.Unity.NetworkObject.GetSceneId
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_GetSceneId
  name: GetSceneId
  nameWithType: NetworkObject.GetSceneId
  fullName: Netick.Unity.NetworkObject.GetSceneId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Netick.Unity.NetworkObject.SetNarrowphaseInterest*
  commentId: Overload:Netick.Unity.NetworkObject.SetNarrowphaseInterest
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_SetNarrowphaseInterest_Netick_NetworkPlayer_System_Boolean_
  name: SetNarrowphaseInterest
  nameWithType: NetworkObject.SetNarrowphaseInterest
  fullName: Netick.Unity.NetworkObject.SetNarrowphaseInterest
- uid: Netick.NetworkPlayer
  commentId: T:Netick.NetworkPlayer
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayer.html
  name: NetworkPlayer
  nameWithType: NetworkPlayer
  fullName: Netick.NetworkPlayer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Netick.Unity.NetworkObject.GetStateRef*
  commentId: Overload:Netick.Unity.NetworkObject.GetStateRef
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_GetStateRef
  name: GetStateRef
  nameWithType: NetworkObject.GetStateRef
  fullName: Netick.Unity.NetworkObject.GetStateRef
- uid: Netick.EntityStateRef
  commentId: T:Netick.EntityStateRef
  parent: Netick
  isExternal: true
  href: Netick.EntityStateRef.html
  name: EntityStateRef
  nameWithType: EntityStateRef
  fullName: Netick.EntityStateRef
- uid: Netick.Unity.NetworkObject.ClearState*
  commentId: Overload:Netick.Unity.NetworkObject.ClearState
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_ClearState_System_Boolean_
  name: ClearState
  nameWithType: NetworkObject.ClearState
  fullName: Netick.Unity.NetworkObject.ClearState
- uid: Netick.Unity.NetworkObject.CopyStateTo*
  commentId: Overload:Netick.Unity.NetworkObject.CopyStateTo
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_CopyStateTo_System_Byte__
  name: CopyStateTo
  nameWithType: NetworkObject.CopyStateTo
  fullName: Netick.Unity.NetworkObject.CopyStateTo
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Netick.Unity.NetworkObject.SetStateFrom*
  commentId: Overload:Netick.Unity.NetworkObject.SetStateFrom
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_SetStateFrom_Netick_EntityStateRef_System_Byte___System_Boolean_
  name: SetStateFrom
  nameWithType: NetworkObject.SetStateFrom
  fullName: Netick.Unity.NetworkObject.SetStateFrom
- uid: Netick.Unity.NetworkObject.UpdateAoI*
  commentId: Overload:Netick.Unity.NetworkObject.UpdateAoI
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_UpdateAoI
  name: UpdateAoI
  nameWithType: NetworkObject.UpdateAoI
  fullName: Netick.Unity.NetworkObject.UpdateAoI
- uid: UnityEngine.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Netick.Unity.NetworkObject.GetBehaviour*
  commentId: Overload:Netick.Unity.NetworkObject.GetBehaviour
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_GetBehaviour__1
  name: GetBehaviour
  nameWithType: NetworkObject.GetBehaviour
  fullName: Netick.Unity.NetworkObject.GetBehaviour
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Netick.Unity.NetworkObject.GetBehaviourById*
  commentId: Overload:Netick.Unity.NetworkObject.GetBehaviourById
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_GetBehaviourById__1_System_Int32_
  name: GetBehaviourById
  nameWithType: NetworkObject.GetBehaviourById
  fullName: Netick.Unity.NetworkObject.GetBehaviourById
- uid: Netick.Unity.NetworkObject.SetParent*
  commentId: Overload:Netick.Unity.NetworkObject.SetParent
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_SetParent_Netick_Unity_NetworkObject_
  name: SetParent
  nameWithType: NetworkObject.SetParent
  fullName: Netick.Unity.NetworkObject.SetParent
- uid: Netick.Unity.NetworkObject
  commentId: T:Netick.Unity.NetworkObject
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkObject.html
  name: NetworkObject
  nameWithType: NetworkObject
  fullName: Netick.Unity.NetworkObject
- uid: Netick.Unity.NetworkObject.SetInitialProperties*
  commentId: Overload:Netick.Unity.NetworkObject.SetInitialProperties
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_SetInitialProperties_System_Boolean_Netick_Relevancy_System_Boolean_Netick_BroadPhaseFilter_System_Boolean_
  name: SetInitialProperties
  nameWithType: NetworkObject.SetInitialProperties
  fullName: Netick.Unity.NetworkObject.SetInitialProperties
- uid: Netick.Relevancy
  commentId: T:Netick.Relevancy
  parent: Netick
  isExternal: true
  href: Netick.Relevancy.html
  name: Relevancy
  nameWithType: Relevancy
  fullName: Netick.Relevancy
- uid: Netick.BroadPhaseFilter
  commentId: T:Netick.BroadPhaseFilter
  parent: Netick
  isExternal: true
  href: Netick.BroadPhaseFilter.html
  name: BroadPhaseFilter
  nameWithType: BroadPhaseFilter
  fullName: Netick.BroadPhaseFilter
- uid: Netick.Unity.NetworkObject.#ctor*
  commentId: Overload:Netick.Unity.NetworkObject.#ctor
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject__ctor
  name: NetworkObject
  nameWithType: NetworkObject.NetworkObject
  fullName: Netick.Unity.NetworkObject.NetworkObject
  nameWithType.vb: NetworkObject.New
  fullName.vb: Netick.Unity.NetworkObject.New
  name.vb: New
- uid: Netick.Unity.NetworkObject.Sandbox*
  commentId: Overload:Netick.Unity.NetworkObject.Sandbox
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_Sandbox
  name: Sandbox
  nameWithType: NetworkObject.Sandbox
  fullName: Netick.Unity.NetworkObject.Sandbox
- uid: Netick.Unity.NetworkSandbox
  commentId: T:Netick.Unity.NetworkSandbox
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkSandbox.html
  name: NetworkSandbox
  nameWithType: NetworkSandbox
  fullName: Netick.Unity.NetworkSandbox
- uid: Netick.Unity.NetworkObject.Engine*
  commentId: Overload:Netick.Unity.NetworkObject.Engine
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_Engine
  name: Engine
  nameWithType: NetworkObject.Engine
  fullName: Netick.Unity.NetworkObject.Engine
- uid: Netick.INetickEntity.Engine
  commentId: P:Netick.INetickEntity.Engine
  parent: Netick.INetickEntity
  isExternal: true
  name: Engine
  nameWithType: INetickEntity.Engine
  fullName: Netick.INetickEntity.Engine
- uid: Netick.NetickEngine
  commentId: T:Netick.NetickEngine
  parent: Netick
  isExternal: true
  href: Netick.NetickEngine.html
  name: NetickEngine
  nameWithType: NetickEngine
  fullName: Netick.NetickEngine
- uid: Netick.Unity.NetworkObject.Entity*
  commentId: Overload:Netick.Unity.NetworkObject.Entity
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_Entity
  name: Entity
  nameWithType: NetworkObject.Entity
  fullName: Netick.Unity.NetworkObject.Entity
- uid: Netick.INetickEntity.Entity
  commentId: P:Netick.INetickEntity.Entity
  parent: Netick.INetickEntity
  isExternal: true
  name: Entity
  nameWithType: INetickEntity.Entity
  fullName: Netick.INetickEntity.Entity
- uid: Netick.Entity
  commentId: T:Netick.Entity
  parent: Netick
  isExternal: true
  href: Netick.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: Netick.Entity
- uid: Netick.Unity.NetworkObject.Id*
  commentId: Overload:Netick.Unity.NetworkObject.Id
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_Id
  name: Id
  nameWithType: NetworkObject.Id
  fullName: Netick.Unity.NetworkObject.Id
- uid: Netick.Unity.NetworkObject.HasValidId*
  commentId: Overload:Netick.Unity.NetworkObject.HasValidId
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_HasValidId
  name: HasValidId
  nameWithType: NetworkObject.HasValidId
  fullName: Netick.Unity.NetworkObject.HasValidId
- uid: Netick.Unity.NetworkObject.AoILayer*
  commentId: Overload:Netick.Unity.NetworkObject.AoILayer
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_AoILayer
  name: AoILayer
  nameWithType: NetworkObject.AoILayer
  fullName: Netick.Unity.NetworkObject.AoILayer
- uid: Netick.INetickEntity.AoILayer
  commentId: P:Netick.INetickEntity.AoILayer
  parent: Netick.INetickEntity
  isExternal: true
  name: AoILayer
  nameWithType: INetickEntity.AoILayer
  fullName: Netick.INetickEntity.AoILayer
- uid: Netick.Unity.NetworkObject.BroadPhaseFilter*
  commentId: Overload:Netick.Unity.NetworkObject.BroadPhaseFilter
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_BroadPhaseFilter
  name: BroadPhaseFilter
  nameWithType: NetworkObject.BroadPhaseFilter
  fullName: Netick.Unity.NetworkObject.BroadPhaseFilter
- uid: Netick.Unity.NetworkObject.NarrowPhaseFilter*
  commentId: Overload:Netick.Unity.NetworkObject.NarrowPhaseFilter
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_NarrowPhaseFilter
  name: NarrowPhaseFilter
  nameWithType: NetworkObject.NarrowPhaseFilter
  fullName: Netick.Unity.NetworkObject.NarrowPhaseFilter
- uid: Netick.Unity.NetworkObject.PredictionMode*
  commentId: Overload:Netick.Unity.NetworkObject.PredictionMode
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_PredictionMode
  name: PredictionMode
  nameWithType: NetworkObject.PredictionMode
  fullName: Netick.Unity.NetworkObject.PredictionMode
- uid: Netick.INetickEntity.PredictionMode
  commentId: P:Netick.INetickEntity.PredictionMode
  parent: Netick.INetickEntity
  isExternal: true
  name: PredictionMode
  nameWithType: INetickEntity.PredictionMode
  fullName: Netick.INetickEntity.PredictionMode
- uid: Netick.Unity.NetworkObject.SpatialPrioritization*
  commentId: Overload:Netick.Unity.NetworkObject.SpatialPrioritization
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_SpatialPrioritization
  name: SpatialPrioritization
  nameWithType: NetworkObject.SpatialPrioritization
  fullName: Netick.Unity.NetworkObject.SpatialPrioritization
- uid: Netick.Unity.NetworkObject.IsPersistent*
  commentId: Overload:Netick.Unity.NetworkObject.IsPersistent
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_IsPersistent
  name: IsPersistent
  nameWithType: NetworkObject.IsPersistent
  fullName: Netick.Unity.NetworkObject.IsPersistent
- uid: Netick.Unity.NetworkObject.SpawnTick*
  commentId: Overload:Netick.Unity.NetworkObject.SpawnTick
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_SpawnTick
  name: SpawnTick
  nameWithType: NetworkObject.SpawnTick
  fullName: Netick.Unity.NetworkObject.SpawnTick
- uid: Netick.Tick
  commentId: T:Netick.Tick
  parent: Netick
  isExternal: true
  href: Netick.Tick.html
  name: Tick
  nameWithType: Tick
  fullName: Netick.Tick
- uid: Netick.Unity.NetworkObject.Parent*
  commentId: Overload:Netick.Unity.NetworkObject.Parent
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_Parent
  name: Parent
  nameWithType: NetworkObject.Parent
  fullName: Netick.Unity.NetworkObject.Parent
- uid: Netick.Unity.NetworkObject.IsSceneObject*
  commentId: Overload:Netick.Unity.NetworkObject.IsSceneObject
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_IsSceneObject
  name: IsSceneObject
  nameWithType: NetworkObject.IsSceneObject
  fullName: Netick.Unity.NetworkObject.IsSceneObject
- uid: Netick.Unity.NetworkObject.IsPrefabObject*
  commentId: Overload:Netick.Unity.NetworkObject.IsPrefabObject
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_IsPrefabObject
  name: IsPrefabObject
  nameWithType: NetworkObject.IsPrefabObject
  fullName: Netick.Unity.NetworkObject.IsPrefabObject
- uid: Netick.Unity.NetworkObject.PrefabId*
  commentId: Overload:Netick.Unity.NetworkObject.PrefabId
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_PrefabId
  name: PrefabId
  nameWithType: NetworkObject.PrefabId
  fullName: Netick.Unity.NetworkObject.PrefabId
- uid: Netick.Unity.NetworkObject.SceneId*
  commentId: Overload:Netick.Unity.NetworkObject.SceneId
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_SceneId
  name: SceneId
  nameWithType: NetworkObject.SceneId
  fullName: Netick.Unity.NetworkObject.SceneId
- uid: Netick.Unity.NetworkObject.RuntimeSceneId*
  commentId: Overload:Netick.Unity.NetworkObject.RuntimeSceneId
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_RuntimeSceneId
  name: RuntimeSceneId
  nameWithType: NetworkObject.RuntimeSceneId
  fullName: Netick.Unity.NetworkObject.RuntimeSceneId
- uid: Netick.Unity.NetworkObject.NetworkedBehaviours*
  commentId: Overload:Netick.Unity.NetworkObject.NetworkedBehaviours
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_NetworkedBehaviours
  name: NetworkedBehaviours
  nameWithType: NetworkObject.NetworkedBehaviours
  fullName: Netick.Unity.NetworkObject.NetworkedBehaviours
- uid: Netick.Unity.NetworkBehaviour[]
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html
  name: NetworkBehaviour[]
  nameWithType: NetworkBehaviour[]
  fullName: Netick.Unity.NetworkBehaviour[]
  nameWithType.vb: NetworkBehaviour()
  fullName.vb: Netick.Unity.NetworkBehaviour()
  name.vb: NetworkBehaviour()
  spec.csharp:
  - uid: Netick.Unity.NetworkBehaviour
    name: NetworkBehaviour
    isExternal: true
    href: Netick.Unity.NetworkBehaviour.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Netick.Unity.NetworkBehaviour
    name: NetworkBehaviour
    isExternal: true
    href: Netick.Unity.NetworkBehaviour.html
  - name: (
  - name: )
- uid: Netick.Unity.NetworkObject.NetickBehaviours*
  commentId: Overload:Netick.Unity.NetworkObject.NetickBehaviours
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_NetickBehaviours
  name: NetickBehaviours
  nameWithType: NetworkObject.NetickBehaviours
  fullName: Netick.Unity.NetworkObject.NetickBehaviours
- uid: Netick.Unity.NetickBehaviour[]
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html
  name: NetickBehaviour[]
  nameWithType: NetickBehaviour[]
  fullName: Netick.Unity.NetickBehaviour[]
  nameWithType.vb: NetickBehaviour()
  fullName.vb: Netick.Unity.NetickBehaviour()
  name.vb: NetickBehaviour()
  spec.csharp:
  - uid: Netick.Unity.NetickBehaviour
    name: NetickBehaviour
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Netick.Unity.NetickBehaviour
    name: NetickBehaviour
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html
  - name: (
  - name: )
- uid: Netick.Unity.NetworkObject.IsClient*
  commentId: Overload:Netick.Unity.NetworkObject.IsClient
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_IsClient
  name: IsClient
  nameWithType: NetworkObject.IsClient
  fullName: Netick.Unity.NetworkObject.IsClient
- uid: Netick.Unity.NetworkObject.IsServer*
  commentId: Overload:Netick.Unity.NetworkObject.IsServer
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_IsServer
  name: IsServer
  nameWithType: NetworkObject.IsServer
  fullName: Netick.Unity.NetworkObject.IsServer
- uid: Netick.Unity.NetworkObject.IsOwner*
  commentId: Overload:Netick.Unity.NetworkObject.IsOwner
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_IsOwner
  name: IsOwner
  nameWithType: NetworkObject.IsOwner
  fullName: Netick.Unity.NetworkObject.IsOwner
- uid: Netick.Unity.NetworkSandbox.LocalPlayer
  commentId: P:Netick.Unity.NetworkSandbox.LocalPlayer
  isExternal: true
  href: Netick.Unity.NetworkSandbox.html#Netick_Unity_NetworkSandbox_LocalPlayer
  name: LocalPlayer
  nameWithType: NetworkSandbox.LocalPlayer
  fullName: Netick.Unity.NetworkSandbox.LocalPlayer
- uid: Netick.Unity.NetworkObject.IsInputSource*
  commentId: Overload:Netick.Unity.NetworkObject.IsInputSource
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_IsInputSource
  name: IsInputSource
  nameWithType: NetworkObject.IsInputSource
  fullName: Netick.Unity.NetworkObject.IsInputSource
- uid: Netick.Unity.NetworkObject.IsProxy*
  commentId: Overload:Netick.Unity.NetworkObject.IsProxy
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_IsProxy
  name: IsProxy
  nameWithType: NetworkObject.IsProxy
  fullName: Netick.Unity.NetworkObject.IsProxy
- uid: Netick.Unity.NetworkObject.IsResimulating*
  commentId: Overload:Netick.Unity.NetworkObject.IsResimulating
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_IsResimulating
  name: IsResimulating
  nameWithType: NetworkObject.IsResimulating
  fullName: Netick.Unity.NetworkObject.IsResimulating
- uid: Netick.NetworkPeer
  commentId: T:Netick.NetworkPeer
  parent: Netick
  isExternal: true
  href: Netick.NetworkPeer.html
  name: NetworkPeer
  nameWithType: NetworkPeer
  fullName: Netick.NetworkPeer
- uid: Netick.ServerConnection
  commentId: T:Netick.ServerConnection
  parent: Netick
  isExternal: true
  href: Netick.ServerConnection.html
  name: ServerConnection
  nameWithType: ServerConnection
  fullName: Netick.ServerConnection
- uid: Netick.Unity.NetworkObject.InputSource*
  commentId: Overload:Netick.Unity.NetworkObject.InputSource
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_InputSource
  name: InputSource
  nameWithType: NetworkObject.InputSource
  fullName: Netick.Unity.NetworkObject.InputSource
- uid: Netick.Unity.NetworkObject.InputSourcePlayerId*
  commentId: Overload:Netick.Unity.NetworkObject.InputSourcePlayerId
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_InputSourcePlayerId
  name: InputSourcePlayerId
  nameWithType: NetworkObject.InputSourcePlayerId
  fullName: Netick.Unity.NetworkObject.InputSourcePlayerId
- uid: Netick.NetworkPlayerId
  commentId: T:Netick.NetworkPlayerId
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayerId.html
  name: NetworkPlayerId
  nameWithType: NetworkPlayerId
  fullName: Netick.NetworkPlayerId
- uid: Netick.Unity.NetworkObject.InterestGroup*
  commentId: Overload:Netick.Unity.NetworkObject.InterestGroup
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_InterestGroup
  name: InterestGroup
  nameWithType: NetworkObject.InterestGroup
  fullName: Netick.Unity.NetworkObject.InterestGroup
- uid: Netick.InterestManagementGroup
  commentId: T:Netick.InterestManagementGroup
  parent: Netick
  isExternal: true
  href: Netick.InterestManagementGroup.html
  name: InterestManagementGroup
  nameWithType: InterestManagementGroup
  fullName: Netick.InterestManagementGroup
- uid: Netick.Unity.NetworkObject.StateSize*
  commentId: Overload:Netick.Unity.NetworkObject.StateSize
  isExternal: true
  href: Netick.Unity.NetworkObject.html#Netick_Unity_NetworkObject_StateSize
  name: StateSize
  nameWithType: NetworkObject.StateSize
  fullName: Netick.Unity.NetworkObject.StateSize

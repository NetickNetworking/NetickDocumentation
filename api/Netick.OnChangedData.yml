### YamlMime:ManagedReference
items:
- uid: Netick.OnChangedData
  commentId: T:Netick.OnChangedData
  id: OnChangedData
  parent: Netick
  children:
  - Netick.OnChangedData.Equals(Netick.OnChangedData)
  - Netick.OnChangedData.Equals(System.Object)
  - Netick.OnChangedData.GetArrayChangedElementIndex
  - Netick.OnChangedData.GetArrayPreviousElementValue``1
  - Netick.OnChangedData.GetArrayPreviousElementValue``1(System.Int32)
  - Netick.OnChangedData.GetHashCode
  - Netick.OnChangedData.GetPreviousNetworkDictionary``2(Netick.NetworkDictionary{``0,``1})
  - Netick.OnChangedData.GetPreviousNetworkHashSet``1(Netick.NetworkHashSet{``0})
  - Netick.OnChangedData.GetPreviousNetworkLinkedList``1(Netick.NetworkLinkedList{``0})
  - Netick.OnChangedData.GetPreviousNetworkQueue``1(Netick.NetworkQueue{``0})
  - Netick.OnChangedData.GetPreviousNetworkStack``1(Netick.NetworkStack{``0})
  - Netick.OnChangedData.GetPreviousNetworkUnorderedList``1(Netick.NetworkUnorderedList{``0})
  - Netick.OnChangedData.GetPreviousValueAsPointer
  - Netick.OnChangedData.GetPreviousValue``1
  - Netick.OnChangedData.InvokedForMisprediction
  langs:
  - csharp
  - vb
  name: OnChangedData
  nameWithType: OnChangedData
  fullName: Netick.OnChangedData
  type: Struct
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public struct OnChangedData : IEquatable<OnChangedData>'
    content.vb: Public Structure OnChangedData Implements IEquatable(Of OnChangedData)
  implements:
  - System.IEquatable{Netick.OnChangedData}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.GetType
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Netick.OnChangedData.GetPreviousNetworkDictionary``2(Netick.NetworkDictionary{``0,``1})
  commentId: M:Netick.OnChangedData.GetPreviousNetworkDictionary``2(Netick.NetworkDictionary{``0,``1})
  id: GetPreviousNetworkDictionary``2(Netick.NetworkDictionary{``0,``1})
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetPreviousNetworkDictionary<TKey, TValue>(NetworkDictionary<TKey, TValue>)
  nameWithType: OnChangedData.GetPreviousNetworkDictionary<TKey, TValue>(NetworkDictionary<TKey, TValue>)
  fullName: Netick.OnChangedData.GetPreviousNetworkDictionary<TKey, TValue>(Netick.NetworkDictionary<TKey, TValue>)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public NetworkDictionarySnapshot<TKey, TValue> GetPreviousNetworkDictionary<TKey, TValue>(NetworkDictionary<TKey, TValue> collection) where TKey : unmanaged where TValue : unmanaged'
    parameters:
    - id: collection
      type: Netick.NetworkDictionary{{TKey},{TValue}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: Netick.NetworkDictionarySnapshot{{TKey},{TValue}}
    content.vb: Public Function GetPreviousNetworkDictionary(Of TKey As Structure, TValue As Structure)(collection As NetworkDictionary(Of TKey, TValue)) As NetworkDictionarySnapshot(Of TKey, TValue)
  overload: Netick.OnChangedData.GetPreviousNetworkDictionary*
  nameWithType.vb: OnChangedData.GetPreviousNetworkDictionary(Of TKey, TValue)(NetworkDictionary(Of TKey, TValue))
  fullName.vb: Netick.OnChangedData.GetPreviousNetworkDictionary(Of TKey, TValue)(Netick.NetworkDictionary(Of TKey, TValue))
  name.vb: GetPreviousNetworkDictionary(Of TKey, TValue)(NetworkDictionary(Of TKey, TValue))
- uid: Netick.OnChangedData.GetPreviousNetworkHashSet``1(Netick.NetworkHashSet{``0})
  commentId: M:Netick.OnChangedData.GetPreviousNetworkHashSet``1(Netick.NetworkHashSet{``0})
  id: GetPreviousNetworkHashSet``1(Netick.NetworkHashSet{``0})
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetPreviousNetworkHashSet<T>(NetworkHashSet<T>)
  nameWithType: OnChangedData.GetPreviousNetworkHashSet<T>(NetworkHashSet<T>)
  fullName: Netick.OnChangedData.GetPreviousNetworkHashSet<T>(Netick.NetworkHashSet<T>)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public NetworkHashSetSnapshot<T> GetPreviousNetworkHashSet<T>(NetworkHashSet<T> collection) where T : unmanaged'
    parameters:
    - id: collection
      type: Netick.NetworkHashSet{{T}}
    typeParameters:
    - id: T
    return:
      type: Netick.NetworkHashSetSnapshot{{T}}
    content.vb: Public Function GetPreviousNetworkHashSet(Of T As Structure)(collection As NetworkHashSet(Of T)) As NetworkHashSetSnapshot(Of T)
  overload: Netick.OnChangedData.GetPreviousNetworkHashSet*
  nameWithType.vb: OnChangedData.GetPreviousNetworkHashSet(Of T)(NetworkHashSet(Of T))
  fullName.vb: Netick.OnChangedData.GetPreviousNetworkHashSet(Of T)(Netick.NetworkHashSet(Of T))
  name.vb: GetPreviousNetworkHashSet(Of T)(NetworkHashSet(Of T))
- uid: Netick.OnChangedData.GetPreviousNetworkLinkedList``1(Netick.NetworkLinkedList{``0})
  commentId: M:Netick.OnChangedData.GetPreviousNetworkLinkedList``1(Netick.NetworkLinkedList{``0})
  id: GetPreviousNetworkLinkedList``1(Netick.NetworkLinkedList{``0})
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetPreviousNetworkLinkedList<T>(NetworkLinkedList<T>)
  nameWithType: OnChangedData.GetPreviousNetworkLinkedList<T>(NetworkLinkedList<T>)
  fullName: Netick.OnChangedData.GetPreviousNetworkLinkedList<T>(Netick.NetworkLinkedList<T>)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public NetworkLinkedListSnapshot<T> GetPreviousNetworkLinkedList<T>(NetworkLinkedList<T> collection) where T : unmanaged'
    parameters:
    - id: collection
      type: Netick.NetworkLinkedList{{T}}
    typeParameters:
    - id: T
    return:
      type: Netick.NetworkLinkedListSnapshot{{T}}
    content.vb: Public Function GetPreviousNetworkLinkedList(Of T As Structure)(collection As NetworkLinkedList(Of T)) As NetworkLinkedListSnapshot(Of T)
  overload: Netick.OnChangedData.GetPreviousNetworkLinkedList*
  nameWithType.vb: OnChangedData.GetPreviousNetworkLinkedList(Of T)(NetworkLinkedList(Of T))
  fullName.vb: Netick.OnChangedData.GetPreviousNetworkLinkedList(Of T)(Netick.NetworkLinkedList(Of T))
  name.vb: GetPreviousNetworkLinkedList(Of T)(NetworkLinkedList(Of T))
- uid: Netick.OnChangedData.GetPreviousNetworkUnorderedList``1(Netick.NetworkUnorderedList{``0})
  commentId: M:Netick.OnChangedData.GetPreviousNetworkUnorderedList``1(Netick.NetworkUnorderedList{``0})
  id: GetPreviousNetworkUnorderedList``1(Netick.NetworkUnorderedList{``0})
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetPreviousNetworkUnorderedList<T>(NetworkUnorderedList<T>)
  nameWithType: OnChangedData.GetPreviousNetworkUnorderedList<T>(NetworkUnorderedList<T>)
  fullName: Netick.OnChangedData.GetPreviousNetworkUnorderedList<T>(Netick.NetworkUnorderedList<T>)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public NetworkUnorderedListSnapshot<T> GetPreviousNetworkUnorderedList<T>(NetworkUnorderedList<T> collection) where T : unmanaged'
    parameters:
    - id: collection
      type: Netick.NetworkUnorderedList{{T}}
    typeParameters:
    - id: T
    return:
      type: Netick.NetworkUnorderedListSnapshot{{T}}
    content.vb: Public Function GetPreviousNetworkUnorderedList(Of T As Structure)(collection As NetworkUnorderedList(Of T)) As NetworkUnorderedListSnapshot(Of T)
  overload: Netick.OnChangedData.GetPreviousNetworkUnorderedList*
  nameWithType.vb: OnChangedData.GetPreviousNetworkUnorderedList(Of T)(NetworkUnorderedList(Of T))
  fullName.vb: Netick.OnChangedData.GetPreviousNetworkUnorderedList(Of T)(Netick.NetworkUnorderedList(Of T))
  name.vb: GetPreviousNetworkUnorderedList(Of T)(NetworkUnorderedList(Of T))
- uid: Netick.OnChangedData.GetPreviousNetworkQueue``1(Netick.NetworkQueue{``0})
  commentId: M:Netick.OnChangedData.GetPreviousNetworkQueue``1(Netick.NetworkQueue{``0})
  id: GetPreviousNetworkQueue``1(Netick.NetworkQueue{``0})
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetPreviousNetworkQueue<T>(NetworkQueue<T>)
  nameWithType: OnChangedData.GetPreviousNetworkQueue<T>(NetworkQueue<T>)
  fullName: Netick.OnChangedData.GetPreviousNetworkQueue<T>(Netick.NetworkQueue<T>)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public NetworkQueueSnapshot<T> GetPreviousNetworkQueue<T>(NetworkQueue<T> collection) where T : unmanaged'
    parameters:
    - id: collection
      type: Netick.NetworkQueue{{T}}
    typeParameters:
    - id: T
    return:
      type: Netick.NetworkQueueSnapshot{{T}}
    content.vb: Public Function GetPreviousNetworkQueue(Of T As Structure)(collection As NetworkQueue(Of T)) As NetworkQueueSnapshot(Of T)
  overload: Netick.OnChangedData.GetPreviousNetworkQueue*
  nameWithType.vb: OnChangedData.GetPreviousNetworkQueue(Of T)(NetworkQueue(Of T))
  fullName.vb: Netick.OnChangedData.GetPreviousNetworkQueue(Of T)(Netick.NetworkQueue(Of T))
  name.vb: GetPreviousNetworkQueue(Of T)(NetworkQueue(Of T))
- uid: Netick.OnChangedData.GetPreviousNetworkStack``1(Netick.NetworkStack{``0})
  commentId: M:Netick.OnChangedData.GetPreviousNetworkStack``1(Netick.NetworkStack{``0})
  id: GetPreviousNetworkStack``1(Netick.NetworkStack{``0})
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetPreviousNetworkStack<T>(NetworkStack<T>)
  nameWithType: OnChangedData.GetPreviousNetworkStack<T>(NetworkStack<T>)
  fullName: Netick.OnChangedData.GetPreviousNetworkStack<T>(Netick.NetworkStack<T>)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public NetworkStackSnapshot<T> GetPreviousNetworkStack<T>(NetworkStack<T> collection) where T : unmanaged'
    parameters:
    - id: collection
      type: Netick.NetworkStack{{T}}
    typeParameters:
    - id: T
    return:
      type: Netick.NetworkStackSnapshot{{T}}
    content.vb: Public Function GetPreviousNetworkStack(Of T As Structure)(collection As NetworkStack(Of T)) As NetworkStackSnapshot(Of T)
  overload: Netick.OnChangedData.GetPreviousNetworkStack*
  nameWithType.vb: OnChangedData.GetPreviousNetworkStack(Of T)(NetworkStack(Of T))
  fullName.vb: Netick.OnChangedData.GetPreviousNetworkStack(Of T)(Netick.NetworkStack(Of T))
  name.vb: GetPreviousNetworkStack(Of T)(NetworkStack(Of T))
- uid: Netick.OnChangedData.GetPreviousValue``1
  commentId: M:Netick.OnChangedData.GetPreviousValue``1
  id: GetPreviousValue``1
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetPreviousValue<T>()
  nameWithType: OnChangedData.GetPreviousValue<T>()
  fullName: Netick.OnChangedData.GetPreviousValue<T>()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public T GetPreviousValue<T>() where T : unmanaged'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetPreviousValue(Of T As Structure)() As T
  overload: Netick.OnChangedData.GetPreviousValue*
  nameWithType.vb: OnChangedData.GetPreviousValue(Of T)()
  fullName.vb: Netick.OnChangedData.GetPreviousValue(Of T)()
  name.vb: GetPreviousValue(Of T)()
- uid: Netick.OnChangedData.GetPreviousValueAsPointer
  commentId: M:Netick.OnChangedData.GetPreviousValueAsPointer
  id: GetPreviousValueAsPointer
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetPreviousValueAsPointer()
  nameWithType: OnChangedData.GetPreviousValueAsPointer()
  fullName: Netick.OnChangedData.GetPreviousValueAsPointer()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int* GetPreviousValueAsPointer()
    return:
      type: System.Int32*
    content.vb: Public Function GetPreviousValueAsPointer() As Integer*
  overload: Netick.OnChangedData.GetPreviousValueAsPointer*
- uid: Netick.OnChangedData.GetArrayChangedElementIndex
  commentId: M:Netick.OnChangedData.GetArrayChangedElementIndex
  id: GetArrayChangedElementIndex
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetArrayChangedElementIndex()
  nameWithType: OnChangedData.GetArrayChangedElementIndex()
  fullName: Netick.OnChangedData.GetArrayChangedElementIndex()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int GetArrayChangedElementIndex()
    return:
      type: System.Int32
    content.vb: Public Function GetArrayChangedElementIndex() As Integer
  overload: Netick.OnChangedData.GetArrayChangedElementIndex*
- uid: Netick.OnChangedData.GetArrayPreviousElementValue``1(System.Int32)
  commentId: M:Netick.OnChangedData.GetArrayPreviousElementValue``1(System.Int32)
  id: GetArrayPreviousElementValue``1(System.Int32)
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetArrayPreviousElementValue<T>(int)
  nameWithType: OnChangedData.GetArrayPreviousElementValue<T>(int)
  fullName: Netick.OnChangedData.GetArrayPreviousElementValue<T>(int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public T GetArrayPreviousElementValue<T>(int index) where T : unmanaged'
    parameters:
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetArrayPreviousElementValue(Of T As Structure)(index As Integer) As T
  overload: Netick.OnChangedData.GetArrayPreviousElementValue*
  nameWithType.vb: OnChangedData.GetArrayPreviousElementValue(Of T)(Integer)
  fullName.vb: Netick.OnChangedData.GetArrayPreviousElementValue(Of T)(Integer)
  name.vb: GetArrayPreviousElementValue(Of T)(Integer)
- uid: Netick.OnChangedData.GetArrayPreviousElementValue``1
  commentId: M:Netick.OnChangedData.GetArrayPreviousElementValue``1
  id: GetArrayPreviousElementValue``1
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetArrayPreviousElementValue<T>()
  nameWithType: OnChangedData.GetArrayPreviousElementValue<T>()
  fullName: Netick.OnChangedData.GetArrayPreviousElementValue<T>()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public T GetArrayPreviousElementValue<T>() where T : unmanaged'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetArrayPreviousElementValue(Of T As Structure)() As T
  overload: Netick.OnChangedData.GetArrayPreviousElementValue*
  nameWithType.vb: OnChangedData.GetArrayPreviousElementValue(Of T)()
  fullName.vb: Netick.OnChangedData.GetArrayPreviousElementValue(Of T)()
  name.vb: GetArrayPreviousElementValue(Of T)()
- uid: Netick.OnChangedData.Equals(System.Object)
  commentId: M:Netick.OnChangedData.Equals(System.Object)
  id: Equals(System.Object)
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: OnChangedData.Equals(object)
  fullName: Netick.OnChangedData.Equals(object)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Netick.OnChangedData.Equals*
  nameWithType.vb: OnChangedData.Equals(Object)
  fullName.vb: Netick.OnChangedData.Equals(Object)
  name.vb: Equals(Object)
- uid: Netick.OnChangedData.Equals(Netick.OnChangedData)
  commentId: M:Netick.OnChangedData.Equals(Netick.OnChangedData)
  id: Equals(Netick.OnChangedData)
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: Equals(OnChangedData)
  nameWithType: OnChangedData.Equals(OnChangedData)
  fullName: Netick.OnChangedData.Equals(Netick.OnChangedData)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public bool Equals(OnChangedData other)
    parameters:
    - id: other
      type: Netick.OnChangedData
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As OnChangedData) As Boolean
  overload: Netick.OnChangedData.Equals*
  implements:
  - System.IEquatable{Netick.OnChangedData}.Equals(Netick.OnChangedData)
- uid: Netick.OnChangedData.GetHashCode
  commentId: M:Netick.OnChangedData.GetHashCode
  id: GetHashCode
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: OnChangedData.GetHashCode()
  fullName: Netick.OnChangedData.GetHashCode()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Netick.OnChangedData.GetHashCode*
- uid: Netick.OnChangedData.InvokedForMisprediction
  commentId: P:Netick.OnChangedData.InvokedForMisprediction
  id: InvokedForMisprediction
  parent: Netick.OnChangedData
  langs:
  - csharp
  - vb
  name: InvokedForMisprediction
  nameWithType: OnChangedData.InvokedForMisprediction
  fullName: Netick.OnChangedData.InvokedForMisprediction
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool InvokedForMisprediction { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property InvokedForMisprediction As Boolean
  overload: Netick.OnChangedData.InvokedForMisprediction*
references:
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: System.IEquatable{Netick.OnChangedData}
  commentId: T:System.IEquatable{Netick.OnChangedData}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<OnChangedData>
  nameWithType: IEquatable<OnChangedData>
  fullName: System.IEquatable<Netick.OnChangedData>
  nameWithType.vb: IEquatable(Of OnChangedData)
  fullName.vb: System.IEquatable(Of Netick.OnChangedData)
  name.vb: IEquatable(Of OnChangedData)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Netick.OnChangedData
    name: OnChangedData
    isExternal: true
    href: Netick.OnChangedData.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Netick.OnChangedData
    name: OnChangedData
    isExternal: true
    href: Netick.OnChangedData.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Netick.OnChangedData.GetPreviousNetworkDictionary*
  commentId: Overload:Netick.OnChangedData.GetPreviousNetworkDictionary
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetPreviousNetworkDictionary__2_Netick_NetworkDictionary___0___1__
  name: GetPreviousNetworkDictionary
  nameWithType: OnChangedData.GetPreviousNetworkDictionary
  fullName: Netick.OnChangedData.GetPreviousNetworkDictionary
- uid: Netick.NetworkDictionary{{TKey},{TValue}}
  commentId: T:Netick.NetworkDictionary{``0,``1}
  parent: Netick
  definition: Netick.NetworkDictionary`2
  href: Netick.NetworkDictionary-2.html
  name: NetworkDictionary<TKey, TValue>
  nameWithType: NetworkDictionary<TKey, TValue>
  fullName: Netick.NetworkDictionary<TKey, TValue>
  nameWithType.vb: NetworkDictionary(Of TKey, TValue)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue)
  name.vb: NetworkDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: Netick.NetworkDictionary`2
    name: NetworkDictionary
    isExternal: true
    href: Netick.NetworkDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkDictionary`2
    name: NetworkDictionary
    isExternal: true
    href: Netick.NetworkDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Netick.NetworkDictionarySnapshot{{TKey},{TValue}}
  commentId: T:Netick.NetworkDictionarySnapshot{``0,``1}
  parent: Netick
  definition: Netick.NetworkDictionarySnapshot`2
  href: Netick.NetworkDictionarySnapshot-2.html
  name: NetworkDictionarySnapshot<TKey, TValue>
  nameWithType: NetworkDictionarySnapshot<TKey, TValue>
  fullName: Netick.NetworkDictionarySnapshot<TKey, TValue>
  nameWithType.vb: NetworkDictionarySnapshot(Of TKey, TValue)
  fullName.vb: Netick.NetworkDictionarySnapshot(Of TKey, TValue)
  name.vb: NetworkDictionarySnapshot(Of TKey, TValue)
  spec.csharp:
  - uid: Netick.NetworkDictionarySnapshot`2
    name: NetworkDictionarySnapshot
    isExternal: true
    href: Netick.NetworkDictionarySnapshot-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkDictionarySnapshot`2
    name: NetworkDictionarySnapshot
    isExternal: true
    href: Netick.NetworkDictionarySnapshot-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Netick.NetworkDictionary`2
  commentId: T:Netick.NetworkDictionary`2
  isExternal: true
  href: Netick.NetworkDictionary-2.html
  name: NetworkDictionary<TKey, TValue>
  nameWithType: NetworkDictionary<TKey, TValue>
  fullName: Netick.NetworkDictionary<TKey, TValue>
  nameWithType.vb: NetworkDictionary(Of TKey, TValue)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue)
  name.vb: NetworkDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: Netick.NetworkDictionary`2
    name: NetworkDictionary
    isExternal: true
    href: Netick.NetworkDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkDictionary`2
    name: NetworkDictionary
    isExternal: true
    href: Netick.NetworkDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Netick.NetworkDictionarySnapshot`2
  commentId: T:Netick.NetworkDictionarySnapshot`2
  isExternal: true
  href: Netick.NetworkDictionarySnapshot-2.html
  name: NetworkDictionarySnapshot<TKey, TValue>
  nameWithType: NetworkDictionarySnapshot<TKey, TValue>
  fullName: Netick.NetworkDictionarySnapshot<TKey, TValue>
  nameWithType.vb: NetworkDictionarySnapshot(Of TKey, TValue)
  fullName.vb: Netick.NetworkDictionarySnapshot(Of TKey, TValue)
  name.vb: NetworkDictionarySnapshot(Of TKey, TValue)
  spec.csharp:
  - uid: Netick.NetworkDictionarySnapshot`2
    name: NetworkDictionarySnapshot
    isExternal: true
    href: Netick.NetworkDictionarySnapshot-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkDictionarySnapshot`2
    name: NetworkDictionarySnapshot
    isExternal: true
    href: Netick.NetworkDictionarySnapshot-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Netick.OnChangedData.GetPreviousNetworkHashSet*
  commentId: Overload:Netick.OnChangedData.GetPreviousNetworkHashSet
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetPreviousNetworkHashSet__1_Netick_NetworkHashSet___0__
  name: GetPreviousNetworkHashSet
  nameWithType: OnChangedData.GetPreviousNetworkHashSet
  fullName: Netick.OnChangedData.GetPreviousNetworkHashSet
- uid: Netick.NetworkHashSet{{T}}
  commentId: T:Netick.NetworkHashSet{``0}
  parent: Netick
  definition: Netick.NetworkHashSet`1
  href: Netick.NetworkHashSet-1.html
  name: NetworkHashSet<T>
  nameWithType: NetworkHashSet<T>
  fullName: Netick.NetworkHashSet<T>
  nameWithType.vb: NetworkHashSet(Of T)
  fullName.vb: Netick.NetworkHashSet(Of T)
  name.vb: NetworkHashSet(Of T)
  spec.csharp:
  - uid: Netick.NetworkHashSet`1
    name: NetworkHashSet
    isExternal: true
    href: Netick.NetworkHashSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkHashSet`1
    name: NetworkHashSet
    isExternal: true
    href: Netick.NetworkHashSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkHashSetSnapshot{{T}}
  commentId: T:Netick.NetworkHashSetSnapshot{``0}
  parent: Netick
  definition: Netick.NetworkHashSetSnapshot`1
  href: Netick.NetworkHashSetSnapshot-1.html
  name: NetworkHashSetSnapshot<T>
  nameWithType: NetworkHashSetSnapshot<T>
  fullName: Netick.NetworkHashSetSnapshot<T>
  nameWithType.vb: NetworkHashSetSnapshot(Of T)
  fullName.vb: Netick.NetworkHashSetSnapshot(Of T)
  name.vb: NetworkHashSetSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkHashSetSnapshot`1
    name: NetworkHashSetSnapshot
    isExternal: true
    href: Netick.NetworkHashSetSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkHashSetSnapshot`1
    name: NetworkHashSetSnapshot
    isExternal: true
    href: Netick.NetworkHashSetSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkHashSet`1
  commentId: T:Netick.NetworkHashSet`1
  isExternal: true
  href: Netick.NetworkHashSet-1.html
  name: NetworkHashSet<T>
  nameWithType: NetworkHashSet<T>
  fullName: Netick.NetworkHashSet<T>
  nameWithType.vb: NetworkHashSet(Of T)
  fullName.vb: Netick.NetworkHashSet(Of T)
  name.vb: NetworkHashSet(Of T)
  spec.csharp:
  - uid: Netick.NetworkHashSet`1
    name: NetworkHashSet
    isExternal: true
    href: Netick.NetworkHashSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkHashSet`1
    name: NetworkHashSet
    isExternal: true
    href: Netick.NetworkHashSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkHashSetSnapshot`1
  commentId: T:Netick.NetworkHashSetSnapshot`1
  isExternal: true
  href: Netick.NetworkHashSetSnapshot-1.html
  name: NetworkHashSetSnapshot<T>
  nameWithType: NetworkHashSetSnapshot<T>
  fullName: Netick.NetworkHashSetSnapshot<T>
  nameWithType.vb: NetworkHashSetSnapshot(Of T)
  fullName.vb: Netick.NetworkHashSetSnapshot(Of T)
  name.vb: NetworkHashSetSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkHashSetSnapshot`1
    name: NetworkHashSetSnapshot
    isExternal: true
    href: Netick.NetworkHashSetSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkHashSetSnapshot`1
    name: NetworkHashSetSnapshot
    isExternal: true
    href: Netick.NetworkHashSetSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.OnChangedData.GetPreviousNetworkLinkedList*
  commentId: Overload:Netick.OnChangedData.GetPreviousNetworkLinkedList
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetPreviousNetworkLinkedList__1_Netick_NetworkLinkedList___0__
  name: GetPreviousNetworkLinkedList
  nameWithType: OnChangedData.GetPreviousNetworkLinkedList
  fullName: Netick.OnChangedData.GetPreviousNetworkLinkedList
- uid: Netick.NetworkLinkedList{{T}}
  commentId: T:Netick.NetworkLinkedList{``0}
  parent: Netick
  definition: Netick.NetworkLinkedList`1
  href: Netick.NetworkLinkedList-1.html
  name: NetworkLinkedList<T>
  nameWithType: NetworkLinkedList<T>
  fullName: Netick.NetworkLinkedList<T>
  nameWithType.vb: NetworkLinkedList(Of T)
  fullName.vb: Netick.NetworkLinkedList(Of T)
  name.vb: NetworkLinkedList(Of T)
  spec.csharp:
  - uid: Netick.NetworkLinkedList`1
    name: NetworkLinkedList
    isExternal: true
    href: Netick.NetworkLinkedList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkLinkedList`1
    name: NetworkLinkedList
    isExternal: true
    href: Netick.NetworkLinkedList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkLinkedListSnapshot{{T}}
  commentId: T:Netick.NetworkLinkedListSnapshot{``0}
  parent: Netick
  definition: Netick.NetworkLinkedListSnapshot`1
  href: Netick.NetworkLinkedListSnapshot-1.html
  name: NetworkLinkedListSnapshot<T>
  nameWithType: NetworkLinkedListSnapshot<T>
  fullName: Netick.NetworkLinkedListSnapshot<T>
  nameWithType.vb: NetworkLinkedListSnapshot(Of T)
  fullName.vb: Netick.NetworkLinkedListSnapshot(Of T)
  name.vb: NetworkLinkedListSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkLinkedListSnapshot`1
    name: NetworkLinkedListSnapshot
    isExternal: true
    href: Netick.NetworkLinkedListSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkLinkedListSnapshot`1
    name: NetworkLinkedListSnapshot
    isExternal: true
    href: Netick.NetworkLinkedListSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkLinkedList`1
  commentId: T:Netick.NetworkLinkedList`1
  isExternal: true
  href: Netick.NetworkLinkedList-1.html
  name: NetworkLinkedList<T>
  nameWithType: NetworkLinkedList<T>
  fullName: Netick.NetworkLinkedList<T>
  nameWithType.vb: NetworkLinkedList(Of T)
  fullName.vb: Netick.NetworkLinkedList(Of T)
  name.vb: NetworkLinkedList(Of T)
  spec.csharp:
  - uid: Netick.NetworkLinkedList`1
    name: NetworkLinkedList
    isExternal: true
    href: Netick.NetworkLinkedList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkLinkedList`1
    name: NetworkLinkedList
    isExternal: true
    href: Netick.NetworkLinkedList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkLinkedListSnapshot`1
  commentId: T:Netick.NetworkLinkedListSnapshot`1
  isExternal: true
  href: Netick.NetworkLinkedListSnapshot-1.html
  name: NetworkLinkedListSnapshot<T>
  nameWithType: NetworkLinkedListSnapshot<T>
  fullName: Netick.NetworkLinkedListSnapshot<T>
  nameWithType.vb: NetworkLinkedListSnapshot(Of T)
  fullName.vb: Netick.NetworkLinkedListSnapshot(Of T)
  name.vb: NetworkLinkedListSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkLinkedListSnapshot`1
    name: NetworkLinkedListSnapshot
    isExternal: true
    href: Netick.NetworkLinkedListSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkLinkedListSnapshot`1
    name: NetworkLinkedListSnapshot
    isExternal: true
    href: Netick.NetworkLinkedListSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.OnChangedData.GetPreviousNetworkUnorderedList*
  commentId: Overload:Netick.OnChangedData.GetPreviousNetworkUnorderedList
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetPreviousNetworkUnorderedList__1_Netick_NetworkUnorderedList___0__
  name: GetPreviousNetworkUnorderedList
  nameWithType: OnChangedData.GetPreviousNetworkUnorderedList
  fullName: Netick.OnChangedData.GetPreviousNetworkUnorderedList
- uid: Netick.NetworkUnorderedList{{T}}
  commentId: T:Netick.NetworkUnorderedList{``0}
  parent: Netick
  definition: Netick.NetworkUnorderedList`1
  href: Netick.NetworkUnorderedList-1.html
  name: NetworkUnorderedList<T>
  nameWithType: NetworkUnorderedList<T>
  fullName: Netick.NetworkUnorderedList<T>
  nameWithType.vb: NetworkUnorderedList(Of T)
  fullName.vb: Netick.NetworkUnorderedList(Of T)
  name.vb: NetworkUnorderedList(Of T)
  spec.csharp:
  - uid: Netick.NetworkUnorderedList`1
    name: NetworkUnorderedList
    isExternal: true
    href: Netick.NetworkUnorderedList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkUnorderedList`1
    name: NetworkUnorderedList
    isExternal: true
    href: Netick.NetworkUnorderedList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkUnorderedListSnapshot{{T}}
  commentId: T:Netick.NetworkUnorderedListSnapshot{``0}
  parent: Netick
  definition: Netick.NetworkUnorderedListSnapshot`1
  href: Netick.NetworkUnorderedListSnapshot-1.html
  name: NetworkUnorderedListSnapshot<T>
  nameWithType: NetworkUnorderedListSnapshot<T>
  fullName: Netick.NetworkUnorderedListSnapshot<T>
  nameWithType.vb: NetworkUnorderedListSnapshot(Of T)
  fullName.vb: Netick.NetworkUnorderedListSnapshot(Of T)
  name.vb: NetworkUnorderedListSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkUnorderedListSnapshot`1
    name: NetworkUnorderedListSnapshot
    isExternal: true
    href: Netick.NetworkUnorderedListSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkUnorderedListSnapshot`1
    name: NetworkUnorderedListSnapshot
    isExternal: true
    href: Netick.NetworkUnorderedListSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkUnorderedList`1
  commentId: T:Netick.NetworkUnorderedList`1
  isExternal: true
  href: Netick.NetworkUnorderedList-1.html
  name: NetworkUnorderedList<T>
  nameWithType: NetworkUnorderedList<T>
  fullName: Netick.NetworkUnorderedList<T>
  nameWithType.vb: NetworkUnorderedList(Of T)
  fullName.vb: Netick.NetworkUnorderedList(Of T)
  name.vb: NetworkUnorderedList(Of T)
  spec.csharp:
  - uid: Netick.NetworkUnorderedList`1
    name: NetworkUnorderedList
    isExternal: true
    href: Netick.NetworkUnorderedList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkUnorderedList`1
    name: NetworkUnorderedList
    isExternal: true
    href: Netick.NetworkUnorderedList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkUnorderedListSnapshot`1
  commentId: T:Netick.NetworkUnorderedListSnapshot`1
  isExternal: true
  href: Netick.NetworkUnorderedListSnapshot-1.html
  name: NetworkUnorderedListSnapshot<T>
  nameWithType: NetworkUnorderedListSnapshot<T>
  fullName: Netick.NetworkUnorderedListSnapshot<T>
  nameWithType.vb: NetworkUnorderedListSnapshot(Of T)
  fullName.vb: Netick.NetworkUnorderedListSnapshot(Of T)
  name.vb: NetworkUnorderedListSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkUnorderedListSnapshot`1
    name: NetworkUnorderedListSnapshot
    isExternal: true
    href: Netick.NetworkUnorderedListSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkUnorderedListSnapshot`1
    name: NetworkUnorderedListSnapshot
    isExternal: true
    href: Netick.NetworkUnorderedListSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.OnChangedData.GetPreviousNetworkQueue*
  commentId: Overload:Netick.OnChangedData.GetPreviousNetworkQueue
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetPreviousNetworkQueue__1_Netick_NetworkQueue___0__
  name: GetPreviousNetworkQueue
  nameWithType: OnChangedData.GetPreviousNetworkQueue
  fullName: Netick.OnChangedData.GetPreviousNetworkQueue
- uid: Netick.NetworkQueue{{T}}
  commentId: T:Netick.NetworkQueue{``0}
  parent: Netick
  definition: Netick.NetworkQueue`1
  href: Netick.NetworkQueue-1.html
  name: NetworkQueue<T>
  nameWithType: NetworkQueue<T>
  fullName: Netick.NetworkQueue<T>
  nameWithType.vb: NetworkQueue(Of T)
  fullName.vb: Netick.NetworkQueue(Of T)
  name.vb: NetworkQueue(Of T)
  spec.csharp:
  - uid: Netick.NetworkQueue`1
    name: NetworkQueue
    isExternal: true
    href: Netick.NetworkQueue-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkQueue`1
    name: NetworkQueue
    isExternal: true
    href: Netick.NetworkQueue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkQueueSnapshot{{T}}
  commentId: T:Netick.NetworkQueueSnapshot{``0}
  parent: Netick
  definition: Netick.NetworkQueueSnapshot`1
  href: Netick.NetworkQueueSnapshot-1.html
  name: NetworkQueueSnapshot<T>
  nameWithType: NetworkQueueSnapshot<T>
  fullName: Netick.NetworkQueueSnapshot<T>
  nameWithType.vb: NetworkQueueSnapshot(Of T)
  fullName.vb: Netick.NetworkQueueSnapshot(Of T)
  name.vb: NetworkQueueSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkQueueSnapshot`1
    name: NetworkQueueSnapshot
    isExternal: true
    href: Netick.NetworkQueueSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkQueueSnapshot`1
    name: NetworkQueueSnapshot
    isExternal: true
    href: Netick.NetworkQueueSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkQueue`1
  commentId: T:Netick.NetworkQueue`1
  isExternal: true
  href: Netick.NetworkQueue-1.html
  name: NetworkQueue<T>
  nameWithType: NetworkQueue<T>
  fullName: Netick.NetworkQueue<T>
  nameWithType.vb: NetworkQueue(Of T)
  fullName.vb: Netick.NetworkQueue(Of T)
  name.vb: NetworkQueue(Of T)
  spec.csharp:
  - uid: Netick.NetworkQueue`1
    name: NetworkQueue
    isExternal: true
    href: Netick.NetworkQueue-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkQueue`1
    name: NetworkQueue
    isExternal: true
    href: Netick.NetworkQueue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkQueueSnapshot`1
  commentId: T:Netick.NetworkQueueSnapshot`1
  isExternal: true
  href: Netick.NetworkQueueSnapshot-1.html
  name: NetworkQueueSnapshot<T>
  nameWithType: NetworkQueueSnapshot<T>
  fullName: Netick.NetworkQueueSnapshot<T>
  nameWithType.vb: NetworkQueueSnapshot(Of T)
  fullName.vb: Netick.NetworkQueueSnapshot(Of T)
  name.vb: NetworkQueueSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkQueueSnapshot`1
    name: NetworkQueueSnapshot
    isExternal: true
    href: Netick.NetworkQueueSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkQueueSnapshot`1
    name: NetworkQueueSnapshot
    isExternal: true
    href: Netick.NetworkQueueSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.OnChangedData.GetPreviousNetworkStack*
  commentId: Overload:Netick.OnChangedData.GetPreviousNetworkStack
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetPreviousNetworkStack__1_Netick_NetworkStack___0__
  name: GetPreviousNetworkStack
  nameWithType: OnChangedData.GetPreviousNetworkStack
  fullName: Netick.OnChangedData.GetPreviousNetworkStack
- uid: Netick.NetworkStack{{T}}
  commentId: T:Netick.NetworkStack{``0}
  parent: Netick
  definition: Netick.NetworkStack`1
  href: Netick.NetworkStack-1.html
  name: NetworkStack<T>
  nameWithType: NetworkStack<T>
  fullName: Netick.NetworkStack<T>
  nameWithType.vb: NetworkStack(Of T)
  fullName.vb: Netick.NetworkStack(Of T)
  name.vb: NetworkStack(Of T)
  spec.csharp:
  - uid: Netick.NetworkStack`1
    name: NetworkStack
    isExternal: true
    href: Netick.NetworkStack-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkStack`1
    name: NetworkStack
    isExternal: true
    href: Netick.NetworkStack-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkStackSnapshot{{T}}
  commentId: T:Netick.NetworkStackSnapshot{``0}
  parent: Netick
  definition: Netick.NetworkStackSnapshot`1
  href: Netick.NetworkStackSnapshot-1.html
  name: NetworkStackSnapshot<T>
  nameWithType: NetworkStackSnapshot<T>
  fullName: Netick.NetworkStackSnapshot<T>
  nameWithType.vb: NetworkStackSnapshot(Of T)
  fullName.vb: Netick.NetworkStackSnapshot(Of T)
  name.vb: NetworkStackSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkStackSnapshot`1
    name: NetworkStackSnapshot
    isExternal: true
    href: Netick.NetworkStackSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkStackSnapshot`1
    name: NetworkStackSnapshot
    isExternal: true
    href: Netick.NetworkStackSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkStack`1
  commentId: T:Netick.NetworkStack`1
  isExternal: true
  href: Netick.NetworkStack-1.html
  name: NetworkStack<T>
  nameWithType: NetworkStack<T>
  fullName: Netick.NetworkStack<T>
  nameWithType.vb: NetworkStack(Of T)
  fullName.vb: Netick.NetworkStack(Of T)
  name.vb: NetworkStack(Of T)
  spec.csharp:
  - uid: Netick.NetworkStack`1
    name: NetworkStack
    isExternal: true
    href: Netick.NetworkStack-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkStack`1
    name: NetworkStack
    isExternal: true
    href: Netick.NetworkStack-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.NetworkStackSnapshot`1
  commentId: T:Netick.NetworkStackSnapshot`1
  isExternal: true
  href: Netick.NetworkStackSnapshot-1.html
  name: NetworkStackSnapshot<T>
  nameWithType: NetworkStackSnapshot<T>
  fullName: Netick.NetworkStackSnapshot<T>
  nameWithType.vb: NetworkStackSnapshot(Of T)
  fullName.vb: Netick.NetworkStackSnapshot(Of T)
  name.vb: NetworkStackSnapshot(Of T)
  spec.csharp:
  - uid: Netick.NetworkStackSnapshot`1
    name: NetworkStackSnapshot
    isExternal: true
    href: Netick.NetworkStackSnapshot-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.NetworkStackSnapshot`1
    name: NetworkStackSnapshot
    isExternal: true
    href: Netick.NetworkStackSnapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.OnChangedData.GetPreviousValue*
  commentId: Overload:Netick.OnChangedData.GetPreviousValue
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetPreviousValue__1
  name: GetPreviousValue
  nameWithType: OnChangedData.GetPreviousValue
  fullName: Netick.OnChangedData.GetPreviousValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Netick.OnChangedData.GetPreviousValueAsPointer*
  commentId: Overload:Netick.OnChangedData.GetPreviousValueAsPointer
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetPreviousValueAsPointer
  name: GetPreviousValueAsPointer
  nameWithType: OnChangedData.GetPreviousValueAsPointer
  fullName: Netick.OnChangedData.GetPreviousValueAsPointer
- uid: System.Int32*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int*
  nameWithType: int*
  fullName: int*
  nameWithType.vb: Integer*
  fullName.vb: Integer*
  name.vb: Integer*
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
- uid: Netick.OnChangedData.GetArrayChangedElementIndex*
  commentId: Overload:Netick.OnChangedData.GetArrayChangedElementIndex
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetArrayChangedElementIndex
  name: GetArrayChangedElementIndex
  nameWithType: OnChangedData.GetArrayChangedElementIndex
  fullName: Netick.OnChangedData.GetArrayChangedElementIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Netick.OnChangedData.GetArrayPreviousElementValue*
  commentId: Overload:Netick.OnChangedData.GetArrayPreviousElementValue
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetArrayPreviousElementValue__1_System_Int32_
  name: GetArrayPreviousElementValue
  nameWithType: OnChangedData.GetArrayPreviousElementValue
  fullName: Netick.OnChangedData.GetArrayPreviousElementValue
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Netick.OnChangedData.Equals*
  commentId: Overload:Netick.OnChangedData.Equals
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_Equals_System_Object_
  name: Equals
  nameWithType: OnChangedData.Equals
  fullName: Netick.OnChangedData.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{Netick.OnChangedData}.Equals(Netick.OnChangedData)
  commentId: M:System.IEquatable{Netick.OnChangedData}.Equals(Netick.OnChangedData)
  parent: System.IEquatable{Netick.OnChangedData}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(OnChangedData)
  nameWithType: IEquatable<OnChangedData>.Equals(OnChangedData)
  fullName: System.IEquatable<Netick.OnChangedData>.Equals(Netick.OnChangedData)
  nameWithType.vb: IEquatable(Of OnChangedData).Equals(OnChangedData)
  fullName.vb: System.IEquatable(Of Netick.OnChangedData).Equals(Netick.OnChangedData)
  spec.csharp:
  - uid: System.IEquatable{Netick.OnChangedData}.Equals(Netick.OnChangedData)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Netick.OnChangedData
    name: OnChangedData
    isExternal: true
    href: Netick.OnChangedData.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Netick.OnChangedData}.Equals(Netick.OnChangedData)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Netick.OnChangedData
    name: OnChangedData
    isExternal: true
    href: Netick.OnChangedData.html
  - name: )
- uid: Netick.OnChangedData
  commentId: T:Netick.OnChangedData
  parent: Netick
  isExternal: true
  href: Netick.OnChangedData.html
  name: OnChangedData
  nameWithType: OnChangedData
  fullName: Netick.OnChangedData
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Netick.OnChangedData.GetHashCode*
  commentId: Overload:Netick.OnChangedData.GetHashCode
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_GetHashCode
  name: GetHashCode
  nameWithType: OnChangedData.GetHashCode
  fullName: Netick.OnChangedData.GetHashCode
- uid: Netick.OnChangedData.InvokedForMisprediction*
  commentId: Overload:Netick.OnChangedData.InvokedForMisprediction
  isExternal: true
  href: Netick.OnChangedData.html#Netick_OnChangedData_InvokedForMisprediction
  name: InvokedForMisprediction
  nameWithType: OnChangedData.InvokedForMisprediction
  fullName: Netick.OnChangedData.InvokedForMisprediction

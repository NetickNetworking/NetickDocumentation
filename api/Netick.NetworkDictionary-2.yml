### YamlMime:ManagedReference
items:
- uid: Netick.NetworkDictionary`2
  commentId: T:Netick.NetworkDictionary`2
  id: NetworkDictionary`2
  parent: Netick
  children:
  - Netick.NetworkDictionary`2.#ctor(System.Int32)
  - Netick.NetworkDictionary`2.Add(`0,`1)
  - Netick.NetworkDictionary`2.Clear
  - Netick.NetworkDictionary`2.ContainsKey(`0)
  - Netick.NetworkDictionary`2.ContainsValue(`1)
  - Netick.NetworkDictionary`2.Count
  - Netick.NetworkDictionary`2.GetEnumerator
  - Netick.NetworkDictionary`2.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  - Netick.NetworkDictionary`2.InternalReset
  - Netick.NetworkDictionary`2.Item(`0)
  - Netick.NetworkDictionary`2.Remove(`0)
  - Netick.NetworkDictionary`2.SetKeyValue(`0,`1)
  - Netick.NetworkDictionary`2.TryGetValue(`0,`1@)
  langs:
  - csharp
  - vb
  name: NetworkDictionary<TKey, TValue>
  nameWithType: NetworkDictionary<TKey, TValue>
  fullName: Netick.NetworkDictionary<TKey, TValue>
  type: Class
  assemblies:
  - Netick
  namespace: Netick
  summary: A networked <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: 'public sealed class NetworkDictionary<TKey, TValue> : NetworkDictionary, INetworkCollection, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable where TKey : unmanaged where TValue : unmanaged'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public NotInheritable Class NetworkDictionary(Of TKey As Structure, TValue As Structure) Inherits NetworkDictionary Implements INetworkCollection, IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable
  inheritance:
  - System.Object
  - Netick.NetworkDictionary
  implements:
  - Netick.INetworkCollection
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - Netick.NetworkDictionary.OffsetToElements
  - Netick.NetworkDictionary.HeaderMetaSizeWords
  - System.Object.GetType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  nameWithType.vb: NetworkDictionary(Of TKey, TValue)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue)
  name.vb: NetworkDictionary(Of TKey, TValue)
- uid: Netick.NetworkDictionary`2.#ctor(System.Int32)
  commentId: M:Netick.NetworkDictionary`2.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: NetworkDictionary(int)
  nameWithType: NetworkDictionary<TKey, TValue>.NetworkDictionary(int)
  fullName: Netick.NetworkDictionary<TKey, TValue>.NetworkDictionary(int)
  type: Constructor
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetworkDictionary(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer)
  overload: Netick.NetworkDictionary`2.#ctor*
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).New(Integer)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).New(Integer)
  name.vb: New(Integer)
- uid: Netick.NetworkDictionary`2.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  commentId: M:Netick.NetworkDictionary`2.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  id: InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: InternalInit(INetickNetworkScript, int*, int, int)
  nameWithType: NetworkDictionary<TKey, TValue>.InternalInit(INetickNetworkScript, int*, int, int)
  fullName: Netick.NetworkDictionary<TKey, TValue>.InternalInit(Netick.INetickNetworkScript, int*, int, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public override void InternalInit(INetickNetworkScript beh, int* state, int elementSizeWords, int flags)
    parameters:
    - id: beh
      type: Netick.INetickNetworkScript
    - id: state
      type: System.Int32*
    - id: elementSizeWords
      type: System.Int32
    - id: flags
      type: System.Int32
    content.vb: Public Overrides Sub InternalInit(beh As INetickNetworkScript, state As Integer*, elementSizeWords As Integer, flags As Integer)
  overridden: Netick.NetworkDictionary.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  overload: Netick.NetworkDictionary`2.InternalInit*
  implements:
  - Netick.INetworkCollection.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).InternalInit(INetickNetworkScript, Integer*, Integer, Integer)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).InternalInit(Netick.INetickNetworkScript, Integer*, Integer, Integer)
  name.vb: InternalInit(INetickNetworkScript, Integer*, Integer, Integer)
- uid: Netick.NetworkDictionary`2.InternalReset
  commentId: M:Netick.NetworkDictionary`2.InternalReset
  id: InternalReset
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: InternalReset()
  nameWithType: NetworkDictionary<TKey, TValue>.InternalReset()
  fullName: Netick.NetworkDictionary<TKey, TValue>.InternalReset()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public override void InternalReset()
    content.vb: Public Overrides Sub InternalReset()
  overridden: Netick.NetworkDictionary.InternalReset
  overload: Netick.NetworkDictionary`2.InternalReset*
  implements:
  - Netick.INetworkCollection.InternalReset
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).InternalReset()
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).InternalReset()
- uid: Netick.NetworkDictionary`2.Clear
  commentId: M:Netick.NetworkDictionary`2.Clear
  id: Clear
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: NetworkDictionary<TKey, TValue>.Clear()
  fullName: Netick.NetworkDictionary<TKey, TValue>.Clear()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  summary: Removes all keys and values from the dictionary.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Netick.NetworkDictionary`2.Clear*
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).Clear()
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).Clear()
- uid: Netick.NetworkDictionary`2.Add(`0,`1)
  commentId: M:Netick.NetworkDictionary`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: Add(TKey, TValue)
  nameWithType: NetworkDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: Netick.NetworkDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  summary: Adds the specified key and value to the dictionary.
  example: []
  syntax:
    content: public bool Add(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to add.
    - id: value
      type: '{TValue}'
      description: The value of the element to add.
    return:
      type: System.Boolean
      description: true if the key/value pair was added; false if the key already exists or the dictionary is full.
    content.vb: Public Function Add(key As TKey, value As TValue) As Boolean
  overload: Netick.NetworkDictionary`2.Add*
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).Add(TKey, TValue)
- uid: Netick.NetworkDictionary`2.Remove(`0)
  commentId: M:Netick.NetworkDictionary`2.Remove(`0)
  id: Remove(`0)
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: Remove(TKey)
  nameWithType: NetworkDictionary<TKey, TValue>.Remove(TKey)
  fullName: Netick.NetworkDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  summary: Removes the value with the specified key from the dictionary.
  example: []
  syntax:
    content: public bool Remove(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to remove.
    return:
      type: System.Boolean
      description: true if the element is successfully removed; otherwise, false.
    content.vb: Public Function Remove(key As TKey) As Boolean
  overload: Netick.NetworkDictionary`2.Remove*
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).Remove(TKey)
- uid: Netick.NetworkDictionary`2.TryGetValue(`0,`1@)
  commentId: M:Netick.NetworkDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: NetworkDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: Netick.NetworkDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  summary: Tries to get the value associated with the specified key.
  example: []
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key whose value to get.
    - id: value
      type: '{TValue}'
      description: When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.
    return:
      type: System.Boolean
      description: true if the key was found; otherwise, false.
    content.vb: Public Function TryGetValue(key As TKey, value As TValue) As Boolean
  overload: Netick.NetworkDictionary`2.TryGetValue*
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
- uid: Netick.NetworkDictionary`2.SetKeyValue(`0,`1)
  commentId: M:Netick.NetworkDictionary`2.SetKeyValue(`0,`1)
  id: SetKeyValue(`0,`1)
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: SetKeyValue(TKey, TValue)
  nameWithType: NetworkDictionary<TKey, TValue>.SetKeyValue(TKey, TValue)
  fullName: Netick.NetworkDictionary<TKey, TValue>.SetKeyValue(TKey, TValue)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  summary: >-
    Sets the value associated with the specified key if it exists in the dictionary.

    If the key is found, updates its value.
  example: []
  syntax:
    content: public bool SetKeyValue(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
      description: true if the key was found and updated; otherwise, false
    content.vb: Public Function SetKeyValue(key As TKey, value As TValue) As Boolean
  overload: Netick.NetworkDictionary`2.SetKeyValue*
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).SetKeyValue(TKey, TValue)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).SetKeyValue(TKey, TValue)
- uid: Netick.NetworkDictionary`2.ContainsKey(`0)
  commentId: M:Netick.NetworkDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: NetworkDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: Netick.NetworkDictionary<TKey, TValue>.ContainsKey(TKey)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  summary: Determines whether the dictionary contains the specified key.
  example: []
  syntax:
    content: public bool ContainsKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to locate in the dictionary.
    return:
      type: System.Boolean
      description: true if the dictionary contains an element with the specified key; otherwise, false.
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
  overload: Netick.NetworkDictionary`2.ContainsKey*
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: Netick.NetworkDictionary`2.ContainsValue(`1)
  commentId: M:Netick.NetworkDictionary`2.ContainsValue(`1)
  id: ContainsValue(`1)
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: ContainsValue(TValue)
  nameWithType: NetworkDictionary<TKey, TValue>.ContainsValue(TValue)
  fullName: Netick.NetworkDictionary<TKey, TValue>.ContainsValue(TValue)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  summary: Determines whether the dictionary contains a specific value.
  example: []
  syntax:
    content: public bool ContainsValue(TValue value)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to locate in the dictionary.
    return:
      type: System.Boolean
      description: true if the value is found; otherwise, false.
    content.vb: Public Function ContainsValue(value As TValue) As Boolean
  overload: Netick.NetworkDictionary`2.ContainsValue*
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).ContainsValue(TValue)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).ContainsValue(TValue)
- uid: Netick.NetworkDictionary`2.GetEnumerator
  commentId: M:Netick.NetworkDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: NetworkDictionary<TKey, TValue>.GetEnumerator()
  fullName: Netick.NetworkDictionary<TKey, TValue>.GetEnumerator()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of KeyValuePair(Of TKey, TValue))
  overload: Netick.NetworkDictionary`2.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).GetEnumerator()
- uid: Netick.NetworkDictionary`2.Item(`0)
  commentId: P:Netick.NetworkDictionary`2.Item(`0)
  id: Item(`0)
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: this[TKey]
  nameWithType: NetworkDictionary<TKey, TValue>.this[TKey]
  fullName: Netick.NetworkDictionary<TKey, TValue>.this[TKey]
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  summary: Gets or sets the value associated with the specified key.
  example: []
  syntax:
    content: public TValue this[TKey key] { get; set; }
    parameters:
    - id: key
      type: '{TKey}'
      description: The key whose value to get or set.
    return:
      type: '{TValue}'
      description: The value associated with the specified key.
    content.vb: Public Default Property this[](key As TKey) As TValue
  overload: Netick.NetworkDictionary`2.Item*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: Thrown when the key does not exist in the dictionary.
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
- uid: Netick.NetworkDictionary`2.Count
  commentId: P:Netick.NetworkDictionary`2.Count
  id: Count
  parent: Netick.NetworkDictionary`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: NetworkDictionary<TKey, TValue>.Count
  fullName: Netick.NetworkDictionary<TKey, TValue>.Count
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  summary: Gets the number of elements contained in the dictionary.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Netick.NetworkDictionary`2.Count*
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).Count
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).Count
references:
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Netick.NetworkDictionary
  commentId: T:Netick.NetworkDictionary
  parent: Netick
  isExternal: true
  href: Netick.NetworkDictionary.html
  name: NetworkDictionary
  nameWithType: NetworkDictionary
  fullName: Netick.NetworkDictionary
- uid: Netick.INetworkCollection
  commentId: T:Netick.INetworkCollection
  parent: Netick
  isExternal: true
  href: Netick.INetworkCollection.html
  name: INetworkCollection
  nameWithType: INetworkCollection
  fullName: Netick.INetworkCollection
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Netick.NetworkDictionary.OffsetToElements
  commentId: F:Netick.NetworkDictionary.OffsetToElements
  parent: Netick.NetworkDictionary
  isExternal: true
  href: Netick.NetworkDictionary.html#Netick_NetworkDictionary_OffsetToElements
  name: OffsetToElements
  nameWithType: NetworkDictionary.OffsetToElements
  fullName: Netick.NetworkDictionary.OffsetToElements
- uid: Netick.NetworkDictionary.HeaderMetaSizeWords
  commentId: F:Netick.NetworkDictionary.HeaderMetaSizeWords
  parent: Netick.NetworkDictionary
  isExternal: true
  href: Netick.NetworkDictionary.html#Netick_NetworkDictionary_HeaderMetaSizeWords
  name: HeaderMetaSizeWords
  nameWithType: NetworkDictionary.HeaderMetaSizeWords
  fullName: Netick.NetworkDictionary.HeaderMetaSizeWords
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Netick.NetworkDictionary`2.#ctor*
  commentId: Overload:Netick.NetworkDictionary`2.#ctor
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2__ctor_System_Int32_
  name: NetworkDictionary
  nameWithType: NetworkDictionary<TKey, TValue>.NetworkDictionary
  fullName: Netick.NetworkDictionary<TKey, TValue>.NetworkDictionary
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).New
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Netick.NetworkDictionary.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  commentId: M:Netick.NetworkDictionary.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  parent: Netick.NetworkDictionary
  isExternal: true
  href: Netick.NetworkDictionary.html#Netick_NetworkDictionary_InternalInit_Netick_INetickNetworkScript_System_Int32__System_Int32_System_Int32_
  name: InternalInit(INetickNetworkScript, int*, int, int)
  nameWithType: NetworkDictionary.InternalInit(INetickNetworkScript, int*, int, int)
  fullName: Netick.NetworkDictionary.InternalInit(Netick.INetickNetworkScript, int*, int, int)
  nameWithType.vb: NetworkDictionary.InternalInit(INetickNetworkScript, Integer*, Integer, Integer)
  fullName.vb: Netick.NetworkDictionary.InternalInit(Netick.INetickNetworkScript, Integer*, Integer, Integer)
  name.vb: InternalInit(INetickNetworkScript, Integer*, Integer, Integer)
  spec.csharp:
  - uid: Netick.NetworkDictionary.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
    name: InternalInit
    isExternal: true
    href: Netick.NetworkDictionary.html#Netick_NetworkDictionary_InternalInit_Netick_INetickNetworkScript_System_Int32__System_Int32_System_Int32_
  - name: (
  - uid: Netick.INetickNetworkScript
    name: INetickNetworkScript
    isExternal: true
    href: Netick.INetickNetworkScript.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Netick.NetworkDictionary.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
    name: InternalInit
    isExternal: true
    href: Netick.NetworkDictionary.html#Netick_NetworkDictionary_InternalInit_Netick_INetickNetworkScript_System_Int32__System_Int32_System_Int32_
  - name: (
  - uid: Netick.INetickNetworkScript
    name: INetickNetworkScript
    isExternal: true
    href: Netick.INetickNetworkScript.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Netick.NetworkDictionary`2.InternalInit*
  commentId: Overload:Netick.NetworkDictionary`2.InternalInit
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_InternalInit_Netick_INetickNetworkScript_System_Int32__System_Int32_System_Int32_
  name: InternalInit
  nameWithType: NetworkDictionary<TKey, TValue>.InternalInit
  fullName: Netick.NetworkDictionary<TKey, TValue>.InternalInit
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).InternalInit
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).InternalInit
- uid: Netick.INetworkCollection.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  commentId: M:Netick.INetworkCollection.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
  parent: Netick.INetworkCollection
  isExternal: true
  href: Netick.INetworkCollection.html#Netick_INetworkCollection_InternalInit_Netick_INetickNetworkScript_System_Int32__System_Int32_System_Int32_
  name: InternalInit(INetickNetworkScript, int*, int, int)
  nameWithType: INetworkCollection.InternalInit(INetickNetworkScript, int*, int, int)
  fullName: Netick.INetworkCollection.InternalInit(Netick.INetickNetworkScript, int*, int, int)
  nameWithType.vb: INetworkCollection.InternalInit(INetickNetworkScript, Integer*, Integer, Integer)
  fullName.vb: Netick.INetworkCollection.InternalInit(Netick.INetickNetworkScript, Integer*, Integer, Integer)
  name.vb: InternalInit(INetickNetworkScript, Integer*, Integer, Integer)
  spec.csharp:
  - uid: Netick.INetworkCollection.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
    name: InternalInit
    isExternal: true
    href: Netick.INetworkCollection.html#Netick_INetworkCollection_InternalInit_Netick_INetickNetworkScript_System_Int32__System_Int32_System_Int32_
  - name: (
  - uid: Netick.INetickNetworkScript
    name: INetickNetworkScript
    isExternal: true
    href: Netick.INetickNetworkScript.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Netick.INetworkCollection.InternalInit(Netick.INetickNetworkScript,System.Int32*,System.Int32,System.Int32)
    name: InternalInit
    isExternal: true
    href: Netick.INetworkCollection.html#Netick_INetworkCollection_InternalInit_Netick_INetickNetworkScript_System_Int32__System_Int32_System_Int32_
  - name: (
  - uid: Netick.INetickNetworkScript
    name: INetickNetworkScript
    isExternal: true
    href: Netick.INetickNetworkScript.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Netick.INetickNetworkScript
  commentId: T:Netick.INetickNetworkScript
  parent: Netick
  isExternal: true
  href: Netick.INetickNetworkScript.html
  name: INetickNetworkScript
  nameWithType: INetickNetworkScript
  fullName: Netick.INetickNetworkScript
- uid: System.Int32*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int*
  nameWithType: int*
  fullName: int*
  nameWithType.vb: Integer*
  fullName.vb: Integer*
  name.vb: Integer*
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
- uid: Netick.NetworkDictionary.InternalReset
  commentId: M:Netick.NetworkDictionary.InternalReset
  parent: Netick.NetworkDictionary
  isExternal: true
  href: Netick.NetworkDictionary.html#Netick_NetworkDictionary_InternalReset
  name: InternalReset()
  nameWithType: NetworkDictionary.InternalReset()
  fullName: Netick.NetworkDictionary.InternalReset()
  spec.csharp:
  - uid: Netick.NetworkDictionary.InternalReset
    name: InternalReset
    isExternal: true
    href: Netick.NetworkDictionary.html#Netick_NetworkDictionary_InternalReset
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.NetworkDictionary.InternalReset
    name: InternalReset
    isExternal: true
    href: Netick.NetworkDictionary.html#Netick_NetworkDictionary_InternalReset
  - name: (
  - name: )
- uid: Netick.NetworkDictionary`2.InternalReset*
  commentId: Overload:Netick.NetworkDictionary`2.InternalReset
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_InternalReset
  name: InternalReset
  nameWithType: NetworkDictionary<TKey, TValue>.InternalReset
  fullName: Netick.NetworkDictionary<TKey, TValue>.InternalReset
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).InternalReset
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).InternalReset
- uid: Netick.INetworkCollection.InternalReset
  commentId: M:Netick.INetworkCollection.InternalReset
  parent: Netick.INetworkCollection
  isExternal: true
  href: Netick.INetworkCollection.html#Netick_INetworkCollection_InternalReset
  name: InternalReset()
  nameWithType: INetworkCollection.InternalReset()
  fullName: Netick.INetworkCollection.InternalReset()
  spec.csharp:
  - uid: Netick.INetworkCollection.InternalReset
    name: InternalReset
    isExternal: true
    href: Netick.INetworkCollection.html#Netick_INetworkCollection_InternalReset
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.INetworkCollection.InternalReset
    name: InternalReset
    isExternal: true
    href: Netick.INetworkCollection.html#Netick_INetworkCollection_InternalReset
  - name: (
  - name: )
- uid: Netick.NetworkDictionary`2.Clear*
  commentId: Overload:Netick.NetworkDictionary`2.Clear
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_Clear
  name: Clear
  nameWithType: NetworkDictionary<TKey, TValue>.Clear
  fullName: Netick.NetworkDictionary<TKey, TValue>.Clear
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).Clear
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).Clear
- uid: Netick.NetworkDictionary`2.Add*
  commentId: Overload:Netick.NetworkDictionary`2.Add
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_Add__0__1_
  name: Add
  nameWithType: NetworkDictionary<TKey, TValue>.Add
  fullName: Netick.NetworkDictionary<TKey, TValue>.Add
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).Add
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).Add
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Netick.NetworkDictionary`2.Remove*
  commentId: Overload:Netick.NetworkDictionary`2.Remove
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_Remove__0_
  name: Remove
  nameWithType: NetworkDictionary<TKey, TValue>.Remove
  fullName: Netick.NetworkDictionary<TKey, TValue>.Remove
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).Remove
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).Remove
- uid: Netick.NetworkDictionary`2.TryGetValue*
  commentId: Overload:Netick.NetworkDictionary`2.TryGetValue
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_TryGetValue__0__1__
  name: TryGetValue
  nameWithType: NetworkDictionary<TKey, TValue>.TryGetValue
  fullName: Netick.NetworkDictionary<TKey, TValue>.TryGetValue
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).TryGetValue
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).TryGetValue
- uid: Netick.NetworkDictionary`2.SetKeyValue*
  commentId: Overload:Netick.NetworkDictionary`2.SetKeyValue
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_SetKeyValue__0__1_
  name: SetKeyValue
  nameWithType: NetworkDictionary<TKey, TValue>.SetKeyValue
  fullName: Netick.NetworkDictionary<TKey, TValue>.SetKeyValue
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).SetKeyValue
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).SetKeyValue
- uid: Netick.NetworkDictionary`2.ContainsKey*
  commentId: Overload:Netick.NetworkDictionary`2.ContainsKey
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_ContainsKey__0_
  name: ContainsKey
  nameWithType: NetworkDictionary<TKey, TValue>.ContainsKey
  fullName: Netick.NetworkDictionary<TKey, TValue>.ContainsKey
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).ContainsKey
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).ContainsKey
- uid: Netick.NetworkDictionary`2.ContainsValue*
  commentId: Overload:Netick.NetworkDictionary`2.ContainsValue
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_ContainsValue__1_
  name: ContainsValue
  nameWithType: NetworkDictionary<TKey, TValue>.ContainsValue
  fullName: Netick.NetworkDictionary<TKey, TValue>.ContainsValue
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).ContainsValue
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).ContainsValue
- uid: Netick.NetworkDictionary`2.GetEnumerator*
  commentId: Overload:Netick.NetworkDictionary`2.GetEnumerator
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_GetEnumerator
  name: GetEnumerator
  nameWithType: NetworkDictionary<TKey, TValue>.GetEnumerator
  fullName: Netick.NetworkDictionary<TKey, TValue>.GetEnumerator
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).GetEnumerator
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: Netick.NetworkDictionary`2.Item*
  commentId: Overload:Netick.NetworkDictionary`2.Item
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_Item__0_
  name: this
  nameWithType: NetworkDictionary<TKey, TValue>.this
  fullName: Netick.NetworkDictionary<TKey, TValue>.this
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).this[]
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).this[]
  name.vb: this[]
- uid: Netick.NetworkDictionary`2.Count*
  commentId: Overload:Netick.NetworkDictionary`2.Count
  isExternal: true
  href: Netick.NetworkDictionary-2.html#Netick_NetworkDictionary_2_Count
  name: Count
  nameWithType: NetworkDictionary<TKey, TValue>.Count
  fullName: Netick.NetworkDictionary<TKey, TValue>.Count
  nameWithType.vb: NetworkDictionary(Of TKey, TValue).Count
  fullName.vb: Netick.NetworkDictionary(Of TKey, TValue).Count

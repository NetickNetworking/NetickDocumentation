### YamlMime:ManagedReference
items:
- uid: Netick.Unity.NetworkBehaviour
  commentId: T:Netick.Unity.NetworkBehaviour
  id: NetworkBehaviour
  parent: Netick.Unity
  children:
  - Netick.Unity.NetworkBehaviour.#ctor
  - Netick.Unity.NetworkBehaviour.BehaviourId
  - Netick.Unity.NetworkBehaviour.ClearState(System.Boolean)
  - Netick.Unity.NetworkBehaviour.CopyStateTo(System.Byte*)
  - Netick.Unity.NetworkBehaviour.CopyStateTo(System.Byte[])
  - Netick.Unity.NetworkBehaviour.FetchInput``1(``0@,System.Boolean@,System.Int32)
  - Netick.Unity.NetworkBehaviour.FetchInput``1(``0@,System.Int32)
  - Netick.Unity.NetworkBehaviour.FindInterpolator(System.String)
  - Netick.Unity.NetworkBehaviour.GetRef``1
  - Netick.Unity.NetworkBehaviour.GetStateRef
  - Netick.Unity.NetworkBehaviour.Id
  - Netick.Unity.NetworkBehaviour.InputSource
  - Netick.Unity.NetworkBehaviour.InputSourcePlayerId
  - Netick.Unity.NetworkBehaviour.InternalGetStateSizeWords
  - Netick.Unity.NetworkBehaviour.InternalInit
  - Netick.Unity.NetworkBehaviour.InternalReset
  - Netick.Unity.NetworkBehaviour.IsClient
  - Netick.Unity.NetworkBehaviour.IsInputSource
  - Netick.Unity.NetworkBehaviour.IsOwner
  - Netick.Unity.NetworkBehaviour.IsPredicted
  - Netick.Unity.NetworkBehaviour.IsProxy
  - Netick.Unity.NetworkBehaviour.IsResimulating
  - Netick.Unity.NetworkBehaviour.IsServer
  - Netick.Unity.NetworkBehaviour.NetworkAwake
  - Netick.Unity.NetworkBehaviour.NetworkReset
  - Netick.Unity.NetworkBehaviour.OnBecameInterested
  - Netick.Unity.NetworkBehaviour.OnBecameUninterested
  - Netick.Unity.NetworkBehaviour.OnInputSourceChanged(Netick.NetworkPlayer)
  - Netick.Unity.NetworkBehaviour.OnInputSourceLeft
  - Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef,System.Byte*,System.Boolean)
  - Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef,System.Byte[],System.Boolean)
  - Netick.Unity.NetworkBehaviour.SetStateFrom(System.Byte*,System.Boolean)
  - Netick.Unity.NetworkBehaviour.SetStateFrom(System.Byte[],System.Boolean)
  - Netick.Unity.NetworkBehaviour.StatePtr
  - Netick.Unity.NetworkBehaviour.StateSize
  langs:
  - csharp
  - vb
  name: NetworkBehaviour
  nameWithType: NetworkBehaviour
  fullName: Netick.Unity.NetworkBehaviour
  type: Class
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: 'public abstract class NetworkBehaviour : NetickBehaviour, INetickNetworkScript, INetickScript'
    content.vb: Public MustInherit Class NetworkBehaviour Inherits NetickBehaviour Implements INetickNetworkScript, INetickScript
  inheritance:
  - System.Object
  - Netick.Unity.NetickBaseBehaviour
  - Netick.Unity.NetickBehaviour
  derivedClasses:
  - Netick.Unity.NetickCoreComponent
  - Netick.Unity.NetworkAnimator
  - Netick.Unity.NetworkTransform
  implements:
  - Netick.INetickNetworkScript
  - Netick.INetickScript
  inheritedMembers:
  - Netick.Unity.NetickBehaviour.NetworkStart
  - Netick.Unity.NetickBehaviour.NetworkDestroy
  - Netick.Unity.NetickBehaviour.NetworkUpdate
  - Netick.Unity.NetickBehaviour.NetworkFixedUpdate
  - Netick.Unity.NetickBehaviour.NetworkRender
  - Netick.Unity.NetickBehaviour.GameEngineIntoNetcode
  - Netick.Unity.NetickBehaviour.NetcodeIntoGameEngine
  - Netick.Unity.NetickBehaviour.Sandbox
  - Netick.Unity.NetickBehaviour.Object
  - Netick.Unity.NetickBehaviour.Entity
  - Netick.Unity.NetickBehaviour.Engine
- uid: Netick.Unity.NetworkBehaviour.StatePtr
  commentId: F:Netick.Unity.NetworkBehaviour.StatePtr
  id: StatePtr
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: StatePtr
  nameWithType: NetworkBehaviour.StatePtr
  fullName: Netick.Unity.NetworkBehaviour.StatePtr
  type: Field
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public int* StatePtr
    return:
      type: System.Int32*
    content.vb: Public StatePtr As Integer*
- uid: Netick.Unity.NetworkBehaviour.GetRef``1
  commentId: M:Netick.Unity.NetworkBehaviour.GetRef``1
  id: GetRef``1
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: GetRef<T>()
  nameWithType: NetworkBehaviour.GetRef<T>()
  fullName: Netick.Unity.NetworkBehaviour.GetRef<T>()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: 'public NetworkBehaviourRef<T> GetRef<T>() where T : NetworkBehaviour'
    typeParameters:
    - id: T
    return:
      type: Netick.Unity.NetworkBehaviourRef{{T}}
    content.vb: Public Function GetRef(Of T As NetworkBehaviour)() As NetworkBehaviourRef(Of T)
  overload: Netick.Unity.NetworkBehaviour.GetRef*
  nameWithType.vb: NetworkBehaviour.GetRef(Of T)()
  fullName.vb: Netick.Unity.NetworkBehaviour.GetRef(Of T)()
  name.vb: GetRef(Of T)()
- uid: Netick.Unity.NetworkBehaviour.GetStateRef
  commentId: M:Netick.Unity.NetworkBehaviour.GetStateRef
  id: GetStateRef
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: GetStateRef()
  nameWithType: NetworkBehaviour.GetStateRef()
  fullName: Netick.Unity.NetworkBehaviour.GetStateRef()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public BehaviourStateRef GetStateRef()
    return:
      type: Netick.Unity.BehaviourStateRef
    content.vb: Public Function GetStateRef() As BehaviourStateRef
  overload: Netick.Unity.NetworkBehaviour.GetStateRef*
- uid: Netick.Unity.NetworkBehaviour.CopyStateTo(System.Byte*)
  commentId: M:Netick.Unity.NetworkBehaviour.CopyStateTo(System.Byte*)
  id: CopyStateTo(System.Byte*)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: CopyStateTo(byte*)
  nameWithType: NetworkBehaviour.CopyStateTo(byte*)
  fullName: Netick.Unity.NetworkBehaviour.CopyStateTo(byte*)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Copies the state of this behavior into target.
  example: []
  syntax:
    content: public virtual void CopyStateTo(byte* target)
    parameters:
    - id: target
      type: System.Byte*
    content.vb: Public Overridable Sub CopyStateTo(target As Byte*)
  overload: Netick.Unity.NetworkBehaviour.CopyStateTo*
  nameWithType.vb: NetworkBehaviour.CopyStateTo(Byte*)
  fullName.vb: Netick.Unity.NetworkBehaviour.CopyStateTo(Byte*)
  name.vb: CopyStateTo(Byte*)
- uid: Netick.Unity.NetworkBehaviour.CopyStateTo(System.Byte[])
  commentId: M:Netick.Unity.NetworkBehaviour.CopyStateTo(System.Byte[])
  id: CopyStateTo(System.Byte[])
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: CopyStateTo(byte[])
  nameWithType: NetworkBehaviour.CopyStateTo(byte[])
  fullName: Netick.Unity.NetworkBehaviour.CopyStateTo(byte[])
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Copies the state of this behavior into target.
  example: []
  syntax:
    content: public virtual void CopyStateTo(byte[] target)
    parameters:
    - id: target
      type: System.Byte[]
    content.vb: Public Overridable Sub CopyStateTo(target As Byte())
  overload: Netick.Unity.NetworkBehaviour.CopyStateTo*
  nameWithType.vb: NetworkBehaviour.CopyStateTo(Byte())
  fullName.vb: Netick.Unity.NetworkBehaviour.CopyStateTo(Byte())
  name.vb: CopyStateTo(Byte())
- uid: Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef,System.Byte[],System.Boolean)
  commentId: M:Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef,System.Byte[],System.Boolean)
  id: SetStateFrom(Netick.Unity.BehaviourStateRef,System.Byte[],System.Boolean)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: SetStateFrom(BehaviourStateRef, byte[], bool)
  nameWithType: NetworkBehaviour.SetStateFrom(BehaviourStateRef, byte[], bool)
  fullName: Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef, byte[], bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public virtual void SetStateFrom(BehaviourStateRef stateRef, byte[] worldSnapshot, bool invokeOnChanged = true)
    parameters:
    - id: stateRef
      type: Netick.Unity.BehaviourStateRef
    - id: worldSnapshot
      type: System.Byte[]
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Overridable Sub SetStateFrom(stateRef As BehaviourStateRef, worldSnapshot As Byte(), invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkBehaviour.SetStateFrom*
  nameWithType.vb: NetworkBehaviour.SetStateFrom(BehaviourStateRef, Byte(), Boolean)
  fullName.vb: Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef, Byte(), Boolean)
  name.vb: SetStateFrom(BehaviourStateRef, Byte(), Boolean)
- uid: Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef,System.Byte*,System.Boolean)
  commentId: M:Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef,System.Byte*,System.Boolean)
  id: SetStateFrom(Netick.Unity.BehaviourStateRef,System.Byte*,System.Boolean)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: SetStateFrom(BehaviourStateRef, byte*, bool)
  nameWithType: NetworkBehaviour.SetStateFrom(BehaviourStateRef, byte*, bool)
  fullName: Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef, byte*, bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public virtual void SetStateFrom(BehaviourStateRef stateRef, byte* worldSnapshot, bool invokeOnChanged = true)
    parameters:
    - id: stateRef
      type: Netick.Unity.BehaviourStateRef
    - id: worldSnapshot
      type: System.Byte*
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Overridable Sub SetStateFrom(stateRef As BehaviourStateRef, worldSnapshot As Byte*, invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkBehaviour.SetStateFrom*
  nameWithType.vb: NetworkBehaviour.SetStateFrom(BehaviourStateRef, Byte*, Boolean)
  fullName.vb: Netick.Unity.NetworkBehaviour.SetStateFrom(Netick.Unity.BehaviourStateRef, Byte*, Boolean)
  name.vb: SetStateFrom(BehaviourStateRef, Byte*, Boolean)
- uid: Netick.Unity.NetworkBehaviour.SetStateFrom(System.Byte*,System.Boolean)
  commentId: M:Netick.Unity.NetworkBehaviour.SetStateFrom(System.Byte*,System.Boolean)
  id: SetStateFrom(System.Byte*,System.Boolean)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: SetStateFrom(byte*, bool)
  nameWithType: NetworkBehaviour.SetStateFrom(byte*, bool)
  fullName: Netick.Unity.NetworkBehaviour.SetStateFrom(byte*, bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Sets the state of this behavior. Ignores InputSource Relevancy.
  example: []
  syntax:
    content: public virtual void SetStateFrom(byte* source, bool invokeOnChanged = true)
    parameters:
    - id: source
      type: System.Byte*
      description: ''
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Overridable Sub SetStateFrom(source As Byte*, invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkBehaviour.SetStateFrom*
  nameWithType.vb: NetworkBehaviour.SetStateFrom(Byte*, Boolean)
  fullName.vb: Netick.Unity.NetworkBehaviour.SetStateFrom(Byte*, Boolean)
  name.vb: SetStateFrom(Byte*, Boolean)
- uid: Netick.Unity.NetworkBehaviour.SetStateFrom(System.Byte[],System.Boolean)
  commentId: M:Netick.Unity.NetworkBehaviour.SetStateFrom(System.Byte[],System.Boolean)
  id: SetStateFrom(System.Byte[],System.Boolean)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: SetStateFrom(byte[], bool)
  nameWithType: NetworkBehaviour.SetStateFrom(byte[], bool)
  fullName: Netick.Unity.NetworkBehaviour.SetStateFrom(byte[], bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Sets the state of this behavior. Ignores InputSource Relevancy.
  example: []
  syntax:
    content: public virtual void SetStateFrom(byte[] source, bool invokeOnChanged = true)
    parameters:
    - id: source
      type: System.Byte[]
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Overridable Sub SetStateFrom(source As Byte(), invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkBehaviour.SetStateFrom*
  nameWithType.vb: NetworkBehaviour.SetStateFrom(Byte(), Boolean)
  fullName.vb: Netick.Unity.NetworkBehaviour.SetStateFrom(Byte(), Boolean)
  name.vb: SetStateFrom(Byte(), Boolean)
- uid: Netick.Unity.NetworkBehaviour.ClearState(System.Boolean)
  commentId: M:Netick.Unity.NetworkBehaviour.ClearState(System.Boolean)
  id: ClearState(System.Boolean)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: ClearState(bool)
  nameWithType: NetworkBehaviour.ClearState(bool)
  fullName: Netick.Unity.NetworkBehaviour.ClearState(bool)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Zeros out the networked state memory of this behavior. Ignores InputSource Relevancy.
  example: []
  syntax:
    content: public virtual void ClearState(bool invokeOnChanged = true)
    parameters:
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Overridable Sub ClearState(invokeOnChanged As Boolean = True)
  overload: Netick.Unity.NetworkBehaviour.ClearState*
  nameWithType.vb: NetworkBehaviour.ClearState(Boolean)
  fullName.vb: Netick.Unity.NetworkBehaviour.ClearState(Boolean)
  name.vb: ClearState(Boolean)
- uid: Netick.Unity.NetworkBehaviour.FetchInput``1(``0@,System.Int32)
  commentId: M:Netick.Unity.NetworkBehaviour.FetchInput``1(``0@,System.Int32)
  id: FetchInput``1(``0@,System.Int32)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: FetchInput<T>(out T, int)
  nameWithType: NetworkBehaviour.FetchInput<T>(out T, int)
  fullName: Netick.Unity.NetworkBehaviour.FetchInput<T>(out T, int)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Fetches a network input for this tick. Returns false if no input source is currently providing inputs to this Object, or when input loss occurs (in case of a remote input source).
  example: []
  syntax:
    content: 'public bool FetchInput<T>(out T input, int index = 0) where T : unmanaged'
    parameters:
    - id: input
      type: '{T}'
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function FetchInput(Of T As Structure)(input As T, index As Integer = 0) As Boolean
  overload: Netick.Unity.NetworkBehaviour.FetchInput*
  nameWithType.vb: NetworkBehaviour.FetchInput(Of T)(T, Integer)
  fullName.vb: Netick.Unity.NetworkBehaviour.FetchInput(Of T)(T, Integer)
  name.vb: FetchInput(Of T)(T, Integer)
- uid: Netick.Unity.NetworkBehaviour.FetchInput``1(``0@,System.Boolean@,System.Int32)
  commentId: M:Netick.Unity.NetworkBehaviour.FetchInput``1(``0@,System.Boolean@,System.Int32)
  id: FetchInput``1(``0@,System.Boolean@,System.Int32)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: FetchInput<T>(out T, out bool, int)
  nameWithType: NetworkBehaviour.FetchInput<T>(out T, out bool, int)
  fullName: Netick.Unity.NetworkBehaviour.FetchInput<T>(out T, out bool, int)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Fetches a network input for this tick. Returns false if no input source is currently providing inputs to this Object, or when input loss occurs (in case of a remote input source).
  example: []
  syntax:
    content: 'public bool FetchInput<T>(out T input, out bool isDuplicated, int index = 0) where T : unmanaged'
    parameters:
    - id: input
      type: '{T}'
    - id: isDuplicated
      type: System.Boolean
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function FetchInput(Of T As Structure)(input As T, isDuplicated As Boolean, index As Integer = 0) As Boolean
  overload: Netick.Unity.NetworkBehaviour.FetchInput*
  nameWithType.vb: NetworkBehaviour.FetchInput(Of T)(T, Boolean, Integer)
  fullName.vb: Netick.Unity.NetworkBehaviour.FetchInput(Of T)(T, Boolean, Integer)
  name.vb: FetchInput(Of T)(T, Boolean, Integer)
- uid: Netick.Unity.NetworkBehaviour.FindInterpolator(System.String)
  commentId: M:Netick.Unity.NetworkBehaviour.FindInterpolator(System.String)
  id: FindInterpolator(System.String)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: FindInterpolator(string)
  nameWithType: NetworkBehaviour.FindInterpolator(string)
  fullName: Netick.Unity.NetworkBehaviour.FindInterpolator(string)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: public Interpolator FindInterpolator(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
    return:
      type: Netick.Interpolator
    content.vb: Public Function FindInterpolator(propertyName As String) As Interpolator
  overload: Netick.Unity.NetworkBehaviour.FindInterpolator*
  nameWithType.vb: NetworkBehaviour.FindInterpolator(String)
  fullName.vb: Netick.Unity.NetworkBehaviour.FindInterpolator(String)
  name.vb: FindInterpolator(String)
- uid: Netick.Unity.NetworkBehaviour.OnBecameInterested
  commentId: M:Netick.Unity.NetworkBehaviour.OnBecameInterested
  id: OnBecameInterested
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: OnBecameInterested()
  nameWithType: NetworkBehaviour.OnBecameInterested()
  fullName: Netick.Unity.NetworkBehaviour.OnBecameInterested()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public virtual void OnBecameInterested()
    content.vb: Public Overridable Sub OnBecameInterested()
  overload: Netick.Unity.NetworkBehaviour.OnBecameInterested*
  implements:
  - Netick.INetickNetworkScript.OnBecameInterested
- uid: Netick.Unity.NetworkBehaviour.OnBecameUninterested
  commentId: M:Netick.Unity.NetworkBehaviour.OnBecameUninterested
  id: OnBecameUninterested
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: OnBecameUninterested()
  nameWithType: NetworkBehaviour.OnBecameUninterested()
  fullName: Netick.Unity.NetworkBehaviour.OnBecameUninterested()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public virtual void OnBecameUninterested()
    content.vb: Public Overridable Sub OnBecameUninterested()
  overload: Netick.Unity.NetworkBehaviour.OnBecameUninterested*
  implements:
  - Netick.INetickNetworkScript.OnBecameUninterested
- uid: Netick.Unity.NetworkBehaviour.OnInputSourceChanged(Netick.NetworkPlayer)
  commentId: M:Netick.Unity.NetworkBehaviour.OnInputSourceChanged(Netick.NetworkPlayer)
  id: OnInputSourceChanged(Netick.NetworkPlayer)
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: OnInputSourceChanged(NetworkPlayer)
  nameWithType: NetworkBehaviour.OnInputSourceChanged(NetworkPlayer)
  fullName: Netick.Unity.NetworkBehaviour.OnInputSourceChanged(Netick.NetworkPlayer)
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public virtual void OnInputSourceChanged(NetworkPlayer previous)
    parameters:
    - id: previous
      type: Netick.NetworkPlayer
    content.vb: Public Overridable Sub OnInputSourceChanged(previous As NetworkPlayer)
  overload: Netick.Unity.NetworkBehaviour.OnInputSourceChanged*
  implements:
  - Netick.INetickNetworkScript.OnInputSourceChanged(Netick.NetworkPlayer)
- uid: Netick.Unity.NetworkBehaviour.OnInputSourceLeft
  commentId: M:Netick.Unity.NetworkBehaviour.OnInputSourceLeft
  id: OnInputSourceLeft
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: OnInputSourceLeft()
  nameWithType: NetworkBehaviour.OnInputSourceLeft()
  fullName: Netick.Unity.NetworkBehaviour.OnInputSourceLeft()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Called on the server when the input source of this Object has disconnected.
  example: []
  syntax:
    content: public virtual void OnInputSourceLeft()
    content.vb: Public Overridable Sub OnInputSourceLeft()
  overload: Netick.Unity.NetworkBehaviour.OnInputSourceLeft*
  implements:
  - Netick.INetickNetworkScript.OnInputSourceLeft
- uid: Netick.Unity.NetworkBehaviour.NetworkAwake
  commentId: M:Netick.Unity.NetworkBehaviour.NetworkAwake
  id: NetworkAwake
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: NetworkAwake()
  nameWithType: NetworkBehaviour.NetworkAwake()
  fullName: Netick.Unity.NetworkBehaviour.NetworkAwake()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public virtual void NetworkAwake()
    content.vb: Public Overridable Sub NetworkAwake()
  overload: Netick.Unity.NetworkBehaviour.NetworkAwake*
  implements:
  - Netick.INetickNetworkScript.NetworkAwake
- uid: Netick.Unity.NetworkBehaviour.NetworkReset
  commentId: M:Netick.Unity.NetworkBehaviour.NetworkReset
  id: NetworkReset
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: NetworkReset()
  nameWithType: NetworkBehaviour.NetworkReset()
  fullName: Netick.Unity.NetworkBehaviour.NetworkReset()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public virtual void NetworkReset()
    content.vb: Public Overridable Sub NetworkReset()
  overload: Netick.Unity.NetworkBehaviour.NetworkReset*
  implements:
  - Netick.INetickNetworkScript.NetworkReset
- uid: Netick.Unity.NetworkBehaviour.InternalInit
  commentId: M:Netick.Unity.NetworkBehaviour.InternalInit
  id: InternalInit
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: InternalInit()
  nameWithType: NetworkBehaviour.InternalInit()
  fullName: Netick.Unity.NetworkBehaviour.InternalInit()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public virtual void InternalInit()
    content.vb: Public Overridable Sub InternalInit()
  overload: Netick.Unity.NetworkBehaviour.InternalInit*
  implements:
  - Netick.INetickNetworkScript.InternalInit
- uid: Netick.Unity.NetworkBehaviour.InternalReset
  commentId: M:Netick.Unity.NetworkBehaviour.InternalReset
  id: InternalReset
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: InternalReset()
  nameWithType: NetworkBehaviour.InternalReset()
  fullName: Netick.Unity.NetworkBehaviour.InternalReset()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public virtual void InternalReset()
    content.vb: Public Overridable Sub InternalReset()
  overload: Netick.Unity.NetworkBehaviour.InternalReset*
  implements:
  - Netick.INetickNetworkScript.InternalReset
- uid: Netick.Unity.NetworkBehaviour.InternalGetStateSizeWords
  commentId: M:Netick.Unity.NetworkBehaviour.InternalGetStateSizeWords
  id: InternalGetStateSizeWords
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: InternalGetStateSizeWords()
  nameWithType: NetworkBehaviour.InternalGetStateSizeWords()
  fullName: Netick.Unity.NetworkBehaviour.InternalGetStateSizeWords()
  type: Method
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  example: []
  syntax:
    content: public virtual int InternalGetStateSizeWords()
    return:
      type: System.Int32
    content.vb: Public Overridable Function InternalGetStateSizeWords() As Integer
  overload: Netick.Unity.NetworkBehaviour.InternalGetStateSizeWords*
  implements:
  - Netick.INetickNetworkScript.InternalGetStateSizeWords
- uid: Netick.Unity.NetworkBehaviour.#ctor
  commentId: M:Netick.Unity.NetworkBehaviour.#ctor
  id: '#ctor'
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: NetworkBehaviour()
  nameWithType: NetworkBehaviour.NetworkBehaviour()
  fullName: Netick.Unity.NetworkBehaviour.NetworkBehaviour()
  type: Constructor
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  syntax:
    content: protected NetworkBehaviour()
    content.vb: Protected Sub New()
  overload: Netick.Unity.NetworkBehaviour.#ctor*
  nameWithType.vb: NetworkBehaviour.New()
  fullName.vb: Netick.Unity.NetworkBehaviour.New()
  name.vb: New()
- uid: Netick.Unity.NetworkBehaviour.BehaviourId
  commentId: P:Netick.Unity.NetworkBehaviour.BehaviourId
  id: BehaviourId
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: BehaviourId
  nameWithType: NetworkBehaviour.BehaviourId
  fullName: Netick.Unity.NetworkBehaviour.BehaviourId
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: The network id of this <xref href="Netick.Unity.NetworkBehaviour" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int BehaviourId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BehaviourId As Integer
  overload: Netick.Unity.NetworkBehaviour.BehaviourId*
- uid: Netick.Unity.NetworkBehaviour.Id
  commentId: P:Netick.Unity.NetworkBehaviour.Id
  id: Id
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: NetworkBehaviour.Id
  fullName: Netick.Unity.NetworkBehaviour.Id
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: The network id of this <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Id As Integer
  overload: Netick.Unity.NetworkBehaviour.Id*
- uid: Netick.Unity.NetworkBehaviour.IsClient
  commentId: P:Netick.Unity.NetworkBehaviour.IsClient
  id: IsClient
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: IsClient
  nameWithType: NetworkBehaviour.IsClient
  fullName: Netick.Unity.NetworkBehaviour.IsClient
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if this <xref href="Netick.Unity.NetworkSandbox" data-throw-if-not-resolved="false"></xref> is a client.
  example: []
  syntax:
    content: public bool IsClient { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClient As Boolean
  overload: Netick.Unity.NetworkBehaviour.IsClient*
- uid: Netick.Unity.NetworkBehaviour.IsServer
  commentId: P:Netick.Unity.NetworkBehaviour.IsServer
  id: IsServer
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: IsServer
  nameWithType: NetworkBehaviour.IsServer
  fullName: Netick.Unity.NetworkBehaviour.IsServer
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if this <xref href="Netick.Unity.NetworkSandbox" data-throw-if-not-resolved="false"></xref> is the server.
  example: []
  syntax:
    content: public bool IsServer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsServer As Boolean
  overload: Netick.Unity.NetworkBehaviour.IsServer*
- uid: Netick.Unity.NetworkBehaviour.IsOwner
  commentId: P:Netick.Unity.NetworkBehaviour.IsOwner
  id: IsOwner
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: IsOwner
  nameWithType: NetworkBehaviour.IsOwner
  fullName: Netick.Unity.NetworkBehaviour.IsOwner
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: 'Returns true if this <xref href="Netick.Unity.NetworkSandbox" data-throw-if-not-resolved="false"></xref> is the owner of this Object. In this version of Netick: Server=Owner.'
  example: []
  syntax:
    content: public bool IsOwner { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOwner As Boolean
  overload: Netick.Unity.NetworkBehaviour.IsOwner*
- uid: Netick.Unity.NetworkBehaviour.IsInputSource
  commentId: P:Netick.Unity.NetworkBehaviour.IsInputSource
  id: IsInputSource
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: IsInputSource
  nameWithType: NetworkBehaviour.IsInputSource
  fullName: Netick.Unity.NetworkBehaviour.IsInputSource
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if this <xref href="Netick.Unity.NetworkSandbox.LocalPlayer" data-throw-if-not-resolved="false"></xref> is providing inputs to this Object.
  example: []
  syntax:
    content: public bool IsInputSource { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInputSource As Boolean
  overload: Netick.Unity.NetworkBehaviour.IsInputSource*
- uid: Netick.Unity.NetworkBehaviour.IsProxy
  commentId: P:Netick.Unity.NetworkBehaviour.IsProxy
  id: IsProxy
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: IsProxy
  nameWithType: NetworkBehaviour.IsProxy
  fullName: Netick.Unity.NetworkBehaviour.IsProxy
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if we neither provide inputs nor own this <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsProxy { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsProxy As Boolean
  overload: Netick.Unity.NetworkBehaviour.IsProxy*
- uid: Netick.Unity.NetworkBehaviour.IsResimulating
  commentId: P:Netick.Unity.NetworkBehaviour.IsResimulating
  id: IsResimulating
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: IsResimulating
  nameWithType: NetworkBehaviour.IsResimulating
  fullName: Netick.Unity.NetworkBehaviour.IsResimulating
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns true if we are currently resimulating a previous input of the past. On the server, it always returns false since <b>only the clients resimulate</b>.
  example: []
  syntax:
    content: public bool IsResimulating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResimulating As Boolean
  overload: Netick.Unity.NetworkBehaviour.IsResimulating*
- uid: Netick.Unity.NetworkBehaviour.IsPredicted
  commentId: P:Netick.Unity.NetworkBehaviour.IsPredicted
  id: IsPredicted
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: IsPredicted
  nameWithType: NetworkBehaviour.IsPredicted
  fullName: Netick.Unity.NetworkBehaviour.IsPredicted
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: On the client, it returns true only if the client is predicting this object. On the server, it always returns true.
  example: []
  syntax:
    content: public bool IsPredicted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPredicted As Boolean
  overload: Netick.Unity.NetworkBehaviour.IsPredicted*
- uid: Netick.Unity.NetworkBehaviour.InputSource
  commentId: P:Netick.Unity.NetworkBehaviour.InputSource
  id: InputSource
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: InputSource
  nameWithType: NetworkBehaviour.InputSource
  fullName: Netick.Unity.NetworkBehaviour.InputSource
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: >-
    Returns the source <xref href="Netick.NetworkPlayer" data-throw-if-not-resolved="false"></xref> (<xref href="Netick.NetworkPeer" data-throw-if-not-resolved="false"></xref>/<xref href="Netick.ServerConnection" data-throw-if-not-resolved="false"></xref>) of inputs for this <xref href="Netick.Unity.NetworkObject" data-throw-if-not-resolved="false"></xref>. If the source of inputs is remote (from a client) it returns that <xref href="Netick.ServerConnection" data-throw-if-not-resolved="false"></xref>, while on the

    input source itself it returns the local <xref href="Netick.NetworkPlayer" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public NetworkPlayer InputSource { get; set; }
    parameters: []
    return:
      type: Netick.NetworkPlayer
    content.vb: Public Property InputSource As NetworkPlayer
  overload: Netick.Unity.NetworkBehaviour.InputSource*
- uid: Netick.Unity.NetworkBehaviour.InputSourcePlayerId
  commentId: P:Netick.Unity.NetworkBehaviour.InputSourcePlayerId
  id: InputSourcePlayerId
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: InputSourcePlayerId
  nameWithType: NetworkBehaviour.InputSourcePlayerId
  fullName: Netick.Unity.NetworkBehaviour.InputSourcePlayerId
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns the NetworkPlayerId of the input source of this object. This is synced for every client.
  example: []
  syntax:
    content: public NetworkPlayerId InputSourcePlayerId { get; }
    parameters: []
    return:
      type: Netick.NetworkPlayerId
    content.vb: Public ReadOnly Property InputSourcePlayerId As NetworkPlayerId
  overload: Netick.Unity.NetworkBehaviour.InputSourcePlayerId*
- uid: Netick.Unity.NetworkBehaviour.StateSize
  commentId: P:Netick.Unity.NetworkBehaviour.StateSize
  id: StateSize
  parent: Netick.Unity.NetworkBehaviour
  langs:
  - csharp
  - vb
  name: StateSize
  nameWithType: NetworkBehaviour.StateSize
  fullName: Netick.Unity.NetworkBehaviour.StateSize
  type: Property
  assemblies:
  - Netick.Unity
  namespace: Netick.Unity
  summary: Returns the networked state size of this behavior in bytes.
  example: []
  syntax:
    content: public virtual int StateSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property StateSize As Integer
  overload: Netick.Unity.NetworkBehaviour.StateSize*
references:
- uid: Netick.Unity
  commentId: N:Netick.Unity
  isExternal: true
  href: Netick.html
  name: Netick.Unity
  nameWithType: Netick.Unity
  fullName: Netick.Unity
  spec.csharp:
  - uid: Netick
    name: Netick
    isExternal: true
    href: Netick.html
  - name: .
  - uid: Netick.Unity
    name: Unity
    isExternal: true
    href: Netick.Unity.html
  spec.vb:
  - uid: Netick
    name: Netick
    isExternal: true
    href: Netick.html
  - name: .
  - uid: Netick.Unity
    name: Unity
    isExternal: true
    href: Netick.Unity.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Netick.Unity.NetickBaseBehaviour
  commentId: T:Netick.Unity.NetickBaseBehaviour
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetickBaseBehaviour.html
  name: NetickBaseBehaviour
  nameWithType: NetickBaseBehaviour
  fullName: Netick.Unity.NetickBaseBehaviour
- uid: Netick.Unity.NetickBehaviour
  commentId: T:Netick.Unity.NetickBehaviour
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html
  name: NetickBehaviour
  nameWithType: NetickBehaviour
  fullName: Netick.Unity.NetickBehaviour
- uid: Netick.INetickNetworkScript
  commentId: T:Netick.INetickNetworkScript
  parent: Netick
  isExternal: true
  href: Netick.INetickNetworkScript.html
  name: INetickNetworkScript
  nameWithType: INetickNetworkScript
  fullName: Netick.INetickNetworkScript
- uid: Netick.INetickScript
  commentId: T:Netick.INetickScript
  parent: Netick
  isExternal: true
  href: Netick.INetickScript.html
  name: INetickScript
  nameWithType: INetickScript
  fullName: Netick.INetickScript
- uid: Netick.Unity.NetickBehaviour.NetworkStart
  commentId: M:Netick.Unity.NetickBehaviour.NetworkStart
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkStart
  name: NetworkStart()
  nameWithType: NetickBehaviour.NetworkStart()
  fullName: Netick.Unity.NetickBehaviour.NetworkStart()
  spec.csharp:
  - uid: Netick.Unity.NetickBehaviour.NetworkStart
    name: NetworkStart
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkStart
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.Unity.NetickBehaviour.NetworkStart
    name: NetworkStart
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkStart
  - name: (
  - name: )
- uid: Netick.Unity.NetickBehaviour.NetworkDestroy
  commentId: M:Netick.Unity.NetickBehaviour.NetworkDestroy
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkDestroy
  name: NetworkDestroy()
  nameWithType: NetickBehaviour.NetworkDestroy()
  fullName: Netick.Unity.NetickBehaviour.NetworkDestroy()
  spec.csharp:
  - uid: Netick.Unity.NetickBehaviour.NetworkDestroy
    name: NetworkDestroy
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkDestroy
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.Unity.NetickBehaviour.NetworkDestroy
    name: NetworkDestroy
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkDestroy
  - name: (
  - name: )
- uid: Netick.Unity.NetickBehaviour.NetworkUpdate
  commentId: M:Netick.Unity.NetickBehaviour.NetworkUpdate
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkUpdate
  name: NetworkUpdate()
  nameWithType: NetickBehaviour.NetworkUpdate()
  fullName: Netick.Unity.NetickBehaviour.NetworkUpdate()
  spec.csharp:
  - uid: Netick.Unity.NetickBehaviour.NetworkUpdate
    name: NetworkUpdate
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.Unity.NetickBehaviour.NetworkUpdate
    name: NetworkUpdate
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkUpdate
  - name: (
  - name: )
- uid: Netick.Unity.NetickBehaviour.NetworkFixedUpdate
  commentId: M:Netick.Unity.NetickBehaviour.NetworkFixedUpdate
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkFixedUpdate
  name: NetworkFixedUpdate()
  nameWithType: NetickBehaviour.NetworkFixedUpdate()
  fullName: Netick.Unity.NetickBehaviour.NetworkFixedUpdate()
  spec.csharp:
  - uid: Netick.Unity.NetickBehaviour.NetworkFixedUpdate
    name: NetworkFixedUpdate
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkFixedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.Unity.NetickBehaviour.NetworkFixedUpdate
    name: NetworkFixedUpdate
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkFixedUpdate
  - name: (
  - name: )
- uid: Netick.Unity.NetickBehaviour.NetworkRender
  commentId: M:Netick.Unity.NetickBehaviour.NetworkRender
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkRender
  name: NetworkRender()
  nameWithType: NetickBehaviour.NetworkRender()
  fullName: Netick.Unity.NetickBehaviour.NetworkRender()
  spec.csharp:
  - uid: Netick.Unity.NetickBehaviour.NetworkRender
    name: NetworkRender
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkRender
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.Unity.NetickBehaviour.NetworkRender
    name: NetworkRender
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetworkRender
  - name: (
  - name: )
- uid: Netick.Unity.NetickBehaviour.GameEngineIntoNetcode
  commentId: M:Netick.Unity.NetickBehaviour.GameEngineIntoNetcode
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_GameEngineIntoNetcode
  name: GameEngineIntoNetcode()
  nameWithType: NetickBehaviour.GameEngineIntoNetcode()
  fullName: Netick.Unity.NetickBehaviour.GameEngineIntoNetcode()
  spec.csharp:
  - uid: Netick.Unity.NetickBehaviour.GameEngineIntoNetcode
    name: GameEngineIntoNetcode
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_GameEngineIntoNetcode
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.Unity.NetickBehaviour.GameEngineIntoNetcode
    name: GameEngineIntoNetcode
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_GameEngineIntoNetcode
  - name: (
  - name: )
- uid: Netick.Unity.NetickBehaviour.NetcodeIntoGameEngine
  commentId: M:Netick.Unity.NetickBehaviour.NetcodeIntoGameEngine
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetcodeIntoGameEngine
  name: NetcodeIntoGameEngine()
  nameWithType: NetickBehaviour.NetcodeIntoGameEngine()
  fullName: Netick.Unity.NetickBehaviour.NetcodeIntoGameEngine()
  spec.csharp:
  - uid: Netick.Unity.NetickBehaviour.NetcodeIntoGameEngine
    name: NetcodeIntoGameEngine
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetcodeIntoGameEngine
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.Unity.NetickBehaviour.NetcodeIntoGameEngine
    name: NetcodeIntoGameEngine
    isExternal: true
    href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_NetcodeIntoGameEngine
  - name: (
  - name: )
- uid: Netick.Unity.NetickBehaviour.Sandbox
  commentId: P:Netick.Unity.NetickBehaviour.Sandbox
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_Sandbox
  name: Sandbox
  nameWithType: NetickBehaviour.Sandbox
  fullName: Netick.Unity.NetickBehaviour.Sandbox
- uid: Netick.Unity.NetickBehaviour.Object
  commentId: P:Netick.Unity.NetickBehaviour.Object
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_Object
  name: Object
  nameWithType: NetickBehaviour.Object
  fullName: Netick.Unity.NetickBehaviour.Object
- uid: Netick.Unity.NetickBehaviour.Entity
  commentId: P:Netick.Unity.NetickBehaviour.Entity
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_Entity
  name: Entity
  nameWithType: NetickBehaviour.Entity
  fullName: Netick.Unity.NetickBehaviour.Entity
- uid: Netick.Unity.NetickBehaviour.Engine
  commentId: P:Netick.Unity.NetickBehaviour.Engine
  parent: Netick.Unity.NetickBehaviour
  isExternal: true
  href: Netick.Unity.NetickBehaviour.html#Netick_Unity_NetickBehaviour_Engine
  name: Engine
  nameWithType: NetickBehaviour.Engine
  fullName: Netick.Unity.NetickBehaviour.Engine
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: System.Int32*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int*
  nameWithType: int*
  fullName: int*
  nameWithType.vb: Integer*
  fullName.vb: Integer*
  name.vb: Integer*
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
- uid: Netick.Unity.NetworkBehaviour.GetRef*
  commentId: Overload:Netick.Unity.NetworkBehaviour.GetRef
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_GetRef__1
  name: GetRef
  nameWithType: NetworkBehaviour.GetRef
  fullName: Netick.Unity.NetworkBehaviour.GetRef
- uid: Netick.Unity.NetworkBehaviourRef{{T}}
  commentId: T:Netick.Unity.NetworkBehaviourRef{``0}
  parent: Netick.Unity
  definition: Netick.Unity.NetworkBehaviourRef`1
  href: Netick.Unity.NetworkBehaviourRef-1.html
  name: NetworkBehaviourRef<T>
  nameWithType: NetworkBehaviourRef<T>
  fullName: Netick.Unity.NetworkBehaviourRef<T>
  nameWithType.vb: NetworkBehaviourRef(Of T)
  fullName.vb: Netick.Unity.NetworkBehaviourRef(Of T)
  name.vb: NetworkBehaviourRef(Of T)
  spec.csharp:
  - uid: Netick.Unity.NetworkBehaviourRef`1
    name: NetworkBehaviourRef
    isExternal: true
    href: Netick.Unity.NetworkBehaviourRef-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.Unity.NetworkBehaviourRef`1
    name: NetworkBehaviourRef
    isExternal: true
    href: Netick.Unity.NetworkBehaviourRef-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.Unity.NetworkBehaviourRef`1
  commentId: T:Netick.Unity.NetworkBehaviourRef`1
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkBehaviourRef-1.html
  name: NetworkBehaviourRef<T>
  nameWithType: NetworkBehaviourRef<T>
  fullName: Netick.Unity.NetworkBehaviourRef<T>
  nameWithType.vb: NetworkBehaviourRef(Of T)
  fullName.vb: Netick.Unity.NetworkBehaviourRef(Of T)
  name.vb: NetworkBehaviourRef(Of T)
  spec.csharp:
  - uid: Netick.Unity.NetworkBehaviourRef`1
    name: NetworkBehaviourRef
    isExternal: true
    href: Netick.Unity.NetworkBehaviourRef-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.Unity.NetworkBehaviourRef`1
    name: NetworkBehaviourRef
    isExternal: true
    href: Netick.Unity.NetworkBehaviourRef-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.Unity.NetworkBehaviour.GetStateRef*
  commentId: Overload:Netick.Unity.NetworkBehaviour.GetStateRef
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_GetStateRef
  name: GetStateRef
  nameWithType: NetworkBehaviour.GetStateRef
  fullName: Netick.Unity.NetworkBehaviour.GetStateRef
- uid: Netick.Unity.BehaviourStateRef
  commentId: T:Netick.Unity.BehaviourStateRef
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.BehaviourStateRef.html
  name: BehaviourStateRef
  nameWithType: BehaviourStateRef
  fullName: Netick.Unity.BehaviourStateRef
- uid: Netick.Unity.NetworkBehaviour.CopyStateTo*
  commentId: Overload:Netick.Unity.NetworkBehaviour.CopyStateTo
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_CopyStateTo_System_Byte__
  name: CopyStateTo
  nameWithType: NetworkBehaviour.CopyStateTo
  fullName: Netick.Unity.NetworkBehaviour.CopyStateTo
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Netick.Unity.NetworkBehaviour.SetStateFrom*
  commentId: Overload:Netick.Unity.NetworkBehaviour.SetStateFrom
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_SetStateFrom_Netick_Unity_BehaviourStateRef_System_Byte___System_Boolean_
  name: SetStateFrom
  nameWithType: NetworkBehaviour.SetStateFrom
  fullName: Netick.Unity.NetworkBehaviour.SetStateFrom
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Netick.Unity.NetworkBehaviour.ClearState*
  commentId: Overload:Netick.Unity.NetworkBehaviour.ClearState
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_ClearState_System_Boolean_
  name: ClearState
  nameWithType: NetworkBehaviour.ClearState
  fullName: Netick.Unity.NetworkBehaviour.ClearState
- uid: Netick.Unity.NetworkBehaviour.FetchInput*
  commentId: Overload:Netick.Unity.NetworkBehaviour.FetchInput
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_FetchInput__1___0__System_Int32_
  name: FetchInput
  nameWithType: NetworkBehaviour.FetchInput
  fullName: Netick.Unity.NetworkBehaviour.FetchInput
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Netick.Unity.NetworkBehaviour.FindInterpolator*
  commentId: Overload:Netick.Unity.NetworkBehaviour.FindInterpolator
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_FindInterpolator_System_String_
  name: FindInterpolator
  nameWithType: NetworkBehaviour.FindInterpolator
  fullName: Netick.Unity.NetworkBehaviour.FindInterpolator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Netick.Interpolator
  commentId: T:Netick.Interpolator
  parent: Netick
  isExternal: true
  href: Netick.Interpolator.html
  name: Interpolator
  nameWithType: Interpolator
  fullName: Netick.Interpolator
- uid: Netick.Unity.NetworkBehaviour.OnBecameInterested*
  commentId: Overload:Netick.Unity.NetworkBehaviour.OnBecameInterested
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_OnBecameInterested
  name: OnBecameInterested
  nameWithType: NetworkBehaviour.OnBecameInterested
  fullName: Netick.Unity.NetworkBehaviour.OnBecameInterested
- uid: Netick.INetickNetworkScript.OnBecameInterested
  commentId: M:Netick.INetickNetworkScript.OnBecameInterested
  parent: Netick.INetickNetworkScript
  isExternal: true
  name: OnBecameInterested()
  nameWithType: INetickNetworkScript.OnBecameInterested()
  fullName: Netick.INetickNetworkScript.OnBecameInterested()
  spec.csharp:
  - uid: Netick.INetickNetworkScript.OnBecameInterested
    name: OnBecameInterested
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.INetickNetworkScript.OnBecameInterested
    name: OnBecameInterested
    isExternal: true
  - name: (
  - name: )
- uid: Netick.Unity.NetworkBehaviour.OnBecameUninterested*
  commentId: Overload:Netick.Unity.NetworkBehaviour.OnBecameUninterested
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_OnBecameUninterested
  name: OnBecameUninterested
  nameWithType: NetworkBehaviour.OnBecameUninterested
  fullName: Netick.Unity.NetworkBehaviour.OnBecameUninterested
- uid: Netick.INetickNetworkScript.OnBecameUninterested
  commentId: M:Netick.INetickNetworkScript.OnBecameUninterested
  parent: Netick.INetickNetworkScript
  isExternal: true
  name: OnBecameUninterested()
  nameWithType: INetickNetworkScript.OnBecameUninterested()
  fullName: Netick.INetickNetworkScript.OnBecameUninterested()
  spec.csharp:
  - uid: Netick.INetickNetworkScript.OnBecameUninterested
    name: OnBecameUninterested
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.INetickNetworkScript.OnBecameUninterested
    name: OnBecameUninterested
    isExternal: true
  - name: (
  - name: )
- uid: Netick.Unity.NetworkBehaviour.OnInputSourceChanged*
  commentId: Overload:Netick.Unity.NetworkBehaviour.OnInputSourceChanged
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_OnInputSourceChanged_Netick_NetworkPlayer_
  name: OnInputSourceChanged
  nameWithType: NetworkBehaviour.OnInputSourceChanged
  fullName: Netick.Unity.NetworkBehaviour.OnInputSourceChanged
- uid: Netick.INetickNetworkScript.OnInputSourceChanged(Netick.NetworkPlayer)
  commentId: M:Netick.INetickNetworkScript.OnInputSourceChanged(Netick.NetworkPlayer)
  parent: Netick.INetickNetworkScript
  isExternal: true
  name: OnInputSourceChanged(NetworkPlayer)
  nameWithType: INetickNetworkScript.OnInputSourceChanged(NetworkPlayer)
  fullName: Netick.INetickNetworkScript.OnInputSourceChanged(Netick.NetworkPlayer)
  spec.csharp:
  - uid: Netick.INetickNetworkScript.OnInputSourceChanged(Netick.NetworkPlayer)
    name: OnInputSourceChanged
    isExternal: true
  - name: (
  - uid: Netick.NetworkPlayer
    name: NetworkPlayer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Netick.INetickNetworkScript.OnInputSourceChanged(Netick.NetworkPlayer)
    name: OnInputSourceChanged
    isExternal: true
  - name: (
  - uid: Netick.NetworkPlayer
    name: NetworkPlayer
    isExternal: true
  - name: )
- uid: Netick.NetworkPlayer
  commentId: T:Netick.NetworkPlayer
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayer.html
  name: NetworkPlayer
  nameWithType: NetworkPlayer
  fullName: Netick.NetworkPlayer
- uid: Netick.Unity.NetworkBehaviour.OnInputSourceLeft*
  commentId: Overload:Netick.Unity.NetworkBehaviour.OnInputSourceLeft
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_OnInputSourceLeft
  name: OnInputSourceLeft
  nameWithType: NetworkBehaviour.OnInputSourceLeft
  fullName: Netick.Unity.NetworkBehaviour.OnInputSourceLeft
- uid: Netick.INetickNetworkScript.OnInputSourceLeft
  commentId: M:Netick.INetickNetworkScript.OnInputSourceLeft
  parent: Netick.INetickNetworkScript
  isExternal: true
  name: OnInputSourceLeft()
  nameWithType: INetickNetworkScript.OnInputSourceLeft()
  fullName: Netick.INetickNetworkScript.OnInputSourceLeft()
  spec.csharp:
  - uid: Netick.INetickNetworkScript.OnInputSourceLeft
    name: OnInputSourceLeft
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.INetickNetworkScript.OnInputSourceLeft
    name: OnInputSourceLeft
    isExternal: true
  - name: (
  - name: )
- uid: Netick.Unity.NetworkBehaviour.NetworkAwake*
  commentId: Overload:Netick.Unity.NetworkBehaviour.NetworkAwake
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_NetworkAwake
  name: NetworkAwake
  nameWithType: NetworkBehaviour.NetworkAwake
  fullName: Netick.Unity.NetworkBehaviour.NetworkAwake
- uid: Netick.INetickNetworkScript.NetworkAwake
  commentId: M:Netick.INetickNetworkScript.NetworkAwake
  parent: Netick.INetickNetworkScript
  isExternal: true
  name: NetworkAwake()
  nameWithType: INetickNetworkScript.NetworkAwake()
  fullName: Netick.INetickNetworkScript.NetworkAwake()
  spec.csharp:
  - uid: Netick.INetickNetworkScript.NetworkAwake
    name: NetworkAwake
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.INetickNetworkScript.NetworkAwake
    name: NetworkAwake
    isExternal: true
  - name: (
  - name: )
- uid: Netick.Unity.NetworkBehaviour.NetworkReset*
  commentId: Overload:Netick.Unity.NetworkBehaviour.NetworkReset
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_NetworkReset
  name: NetworkReset
  nameWithType: NetworkBehaviour.NetworkReset
  fullName: Netick.Unity.NetworkBehaviour.NetworkReset
- uid: Netick.INetickNetworkScript.NetworkReset
  commentId: M:Netick.INetickNetworkScript.NetworkReset
  parent: Netick.INetickNetworkScript
  isExternal: true
  name: NetworkReset()
  nameWithType: INetickNetworkScript.NetworkReset()
  fullName: Netick.INetickNetworkScript.NetworkReset()
  spec.csharp:
  - uid: Netick.INetickNetworkScript.NetworkReset
    name: NetworkReset
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.INetickNetworkScript.NetworkReset
    name: NetworkReset
    isExternal: true
  - name: (
  - name: )
- uid: Netick.Unity.NetworkBehaviour.InternalInit*
  commentId: Overload:Netick.Unity.NetworkBehaviour.InternalInit
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_InternalInit
  name: InternalInit
  nameWithType: NetworkBehaviour.InternalInit
  fullName: Netick.Unity.NetworkBehaviour.InternalInit
- uid: Netick.INetickNetworkScript.InternalInit
  commentId: M:Netick.INetickNetworkScript.InternalInit
  parent: Netick.INetickNetworkScript
  isExternal: true
  name: InternalInit()
  nameWithType: INetickNetworkScript.InternalInit()
  fullName: Netick.INetickNetworkScript.InternalInit()
  spec.csharp:
  - uid: Netick.INetickNetworkScript.InternalInit
    name: InternalInit
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.INetickNetworkScript.InternalInit
    name: InternalInit
    isExternal: true
  - name: (
  - name: )
- uid: Netick.Unity.NetworkBehaviour.InternalReset*
  commentId: Overload:Netick.Unity.NetworkBehaviour.InternalReset
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_InternalReset
  name: InternalReset
  nameWithType: NetworkBehaviour.InternalReset
  fullName: Netick.Unity.NetworkBehaviour.InternalReset
- uid: Netick.INetickNetworkScript.InternalReset
  commentId: M:Netick.INetickNetworkScript.InternalReset
  parent: Netick.INetickNetworkScript
  isExternal: true
  name: InternalReset()
  nameWithType: INetickNetworkScript.InternalReset()
  fullName: Netick.INetickNetworkScript.InternalReset()
  spec.csharp:
  - uid: Netick.INetickNetworkScript.InternalReset
    name: InternalReset
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.INetickNetworkScript.InternalReset
    name: InternalReset
    isExternal: true
  - name: (
  - name: )
- uid: Netick.Unity.NetworkBehaviour.InternalGetStateSizeWords*
  commentId: Overload:Netick.Unity.NetworkBehaviour.InternalGetStateSizeWords
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_InternalGetStateSizeWords
  name: InternalGetStateSizeWords
  nameWithType: NetworkBehaviour.InternalGetStateSizeWords
  fullName: Netick.Unity.NetworkBehaviour.InternalGetStateSizeWords
- uid: Netick.INetickNetworkScript.InternalGetStateSizeWords
  commentId: M:Netick.INetickNetworkScript.InternalGetStateSizeWords
  parent: Netick.INetickNetworkScript
  isExternal: true
  name: InternalGetStateSizeWords()
  nameWithType: INetickNetworkScript.InternalGetStateSizeWords()
  fullName: Netick.INetickNetworkScript.InternalGetStateSizeWords()
  spec.csharp:
  - uid: Netick.INetickNetworkScript.InternalGetStateSizeWords
    name: InternalGetStateSizeWords
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Netick.INetickNetworkScript.InternalGetStateSizeWords
    name: InternalGetStateSizeWords
    isExternal: true
  - name: (
  - name: )
- uid: Netick.Unity.NetworkBehaviour.#ctor*
  commentId: Overload:Netick.Unity.NetworkBehaviour.#ctor
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour__ctor
  name: NetworkBehaviour
  nameWithType: NetworkBehaviour.NetworkBehaviour
  fullName: Netick.Unity.NetworkBehaviour.NetworkBehaviour
  nameWithType.vb: NetworkBehaviour.New
  fullName.vb: Netick.Unity.NetworkBehaviour.New
  name.vb: New
- uid: Netick.Unity.NetworkBehaviour
  commentId: T:Netick.Unity.NetworkBehaviour
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html
  name: NetworkBehaviour
  nameWithType: NetworkBehaviour
  fullName: Netick.Unity.NetworkBehaviour
- uid: Netick.Unity.NetworkBehaviour.BehaviourId*
  commentId: Overload:Netick.Unity.NetworkBehaviour.BehaviourId
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_BehaviourId
  name: BehaviourId
  nameWithType: NetworkBehaviour.BehaviourId
  fullName: Netick.Unity.NetworkBehaviour.BehaviourId
- uid: Netick.Unity.NetworkBehaviour.Id*
  commentId: Overload:Netick.Unity.NetworkBehaviour.Id
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_Id
  name: Id
  nameWithType: NetworkBehaviour.Id
  fullName: Netick.Unity.NetworkBehaviour.Id
- uid: Netick.Unity.NetworkSandbox
  commentId: T:Netick.Unity.NetworkSandbox
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkSandbox.html
  name: NetworkSandbox
  nameWithType: NetworkSandbox
  fullName: Netick.Unity.NetworkSandbox
- uid: Netick.Unity.NetworkBehaviour.IsClient*
  commentId: Overload:Netick.Unity.NetworkBehaviour.IsClient
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_IsClient
  name: IsClient
  nameWithType: NetworkBehaviour.IsClient
  fullName: Netick.Unity.NetworkBehaviour.IsClient
- uid: Netick.Unity.NetworkBehaviour.IsServer*
  commentId: Overload:Netick.Unity.NetworkBehaviour.IsServer
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_IsServer
  name: IsServer
  nameWithType: NetworkBehaviour.IsServer
  fullName: Netick.Unity.NetworkBehaviour.IsServer
- uid: Netick.Unity.NetworkBehaviour.IsOwner*
  commentId: Overload:Netick.Unity.NetworkBehaviour.IsOwner
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_IsOwner
  name: IsOwner
  nameWithType: NetworkBehaviour.IsOwner
  fullName: Netick.Unity.NetworkBehaviour.IsOwner
- uid: Netick.Unity.NetworkSandbox.LocalPlayer
  commentId: P:Netick.Unity.NetworkSandbox.LocalPlayer
  isExternal: true
  href: Netick.Unity.NetworkSandbox.html#Netick_Unity_NetworkSandbox_LocalPlayer
  name: LocalPlayer
  nameWithType: NetworkSandbox.LocalPlayer
  fullName: Netick.Unity.NetworkSandbox.LocalPlayer
- uid: Netick.Unity.NetworkBehaviour.IsInputSource*
  commentId: Overload:Netick.Unity.NetworkBehaviour.IsInputSource
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_IsInputSource
  name: IsInputSource
  nameWithType: NetworkBehaviour.IsInputSource
  fullName: Netick.Unity.NetworkBehaviour.IsInputSource
- uid: Netick.Unity.NetworkBehaviour.IsProxy*
  commentId: Overload:Netick.Unity.NetworkBehaviour.IsProxy
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_IsProxy
  name: IsProxy
  nameWithType: NetworkBehaviour.IsProxy
  fullName: Netick.Unity.NetworkBehaviour.IsProxy
- uid: Netick.Unity.NetworkBehaviour.IsResimulating*
  commentId: Overload:Netick.Unity.NetworkBehaviour.IsResimulating
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_IsResimulating
  name: IsResimulating
  nameWithType: NetworkBehaviour.IsResimulating
  fullName: Netick.Unity.NetworkBehaviour.IsResimulating
- uid: Netick.Unity.NetworkBehaviour.IsPredicted*
  commentId: Overload:Netick.Unity.NetworkBehaviour.IsPredicted
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_IsPredicted
  name: IsPredicted
  nameWithType: NetworkBehaviour.IsPredicted
  fullName: Netick.Unity.NetworkBehaviour.IsPredicted
- uid: Netick.NetworkPeer
  commentId: T:Netick.NetworkPeer
  parent: Netick
  isExternal: true
  href: Netick.NetworkPeer.html
  name: NetworkPeer
  nameWithType: NetworkPeer
  fullName: Netick.NetworkPeer
- uid: Netick.ServerConnection
  commentId: T:Netick.ServerConnection
  parent: Netick
  isExternal: true
  href: Netick.ServerConnection.html
  name: ServerConnection
  nameWithType: ServerConnection
  fullName: Netick.ServerConnection
- uid: Netick.Unity.NetworkObject
  commentId: T:Netick.Unity.NetworkObject
  parent: Netick.Unity
  isExternal: true
  href: Netick.Unity.NetworkObject.html
  name: NetworkObject
  nameWithType: NetworkObject
  fullName: Netick.Unity.NetworkObject
- uid: Netick.Unity.NetworkBehaviour.InputSource*
  commentId: Overload:Netick.Unity.NetworkBehaviour.InputSource
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_InputSource
  name: InputSource
  nameWithType: NetworkBehaviour.InputSource
  fullName: Netick.Unity.NetworkBehaviour.InputSource
- uid: Netick.Unity.NetworkBehaviour.InputSourcePlayerId*
  commentId: Overload:Netick.Unity.NetworkBehaviour.InputSourcePlayerId
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_InputSourcePlayerId
  name: InputSourcePlayerId
  nameWithType: NetworkBehaviour.InputSourcePlayerId
  fullName: Netick.Unity.NetworkBehaviour.InputSourcePlayerId
- uid: Netick.NetworkPlayerId
  commentId: T:Netick.NetworkPlayerId
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayerId.html
  name: NetworkPlayerId
  nameWithType: NetworkPlayerId
  fullName: Netick.NetworkPlayerId
- uid: Netick.Unity.NetworkBehaviour.StateSize*
  commentId: Overload:Netick.Unity.NetworkBehaviour.StateSize
  isExternal: true
  href: Netick.Unity.NetworkBehaviour.html#Netick_Unity_NetworkBehaviour_StateSize
  name: StateSize
  nameWithType: NetworkBehaviour.StateSize
  fullName: Netick.Unity.NetworkBehaviour.StateSize

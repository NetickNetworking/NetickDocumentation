### YamlMime:ManagedReference
items:
- uid: Netick.Simulation
  commentId: T:Netick.Simulation
  id: Simulation
  parent: Netick
  children:
  - Netick.Simulation.ClientAddUnlinkedEntity(Netick.Entity,System.Int32,System.Int32)
  - Netick.Simulation.CreateAndLinkEntityLocal(Netick.INetickEntity)
  - Netick.Simulation.CreateEntity(System.Int32)
  - Netick.Simulation.CurrentInput
  - Netick.Simulation.FetchInputLocal``1(``0@,System.Boolean@,System.Int32)
  - Netick.Simulation.FetchInput``1(``0@,System.Boolean@,Netick.Entity,System.Int32)
  - Netick.Simulation.GetEntityByWorldIndex(System.Int32)
  - Netick.Simulation.GetInput``1(System.Int32)
  - Netick.Simulation.InvokePostResimulation
  - Netick.Simulation.InvokePreRollback
  - Netick.Simulation.InvokeRPCs
  - Netick.Simulation.LinkEntity(Netick.INetickEntity,Netick.Entity)
  - Netick.Simulation.RemoveFromNetworkLoop(Netick.Entity)
  - Netick.Simulation.SetInput``1(``0,System.Int32)
  - Netick.Simulation.SimulatedObjects
  - Netick.Simulation.UnlinkedEntities
  langs:
  - csharp
  - vb
  name: Simulation
  nameWithType: Simulation
  fullName: Netick.Simulation
  type: Class
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public abstract class Simulation
    content.vb: Public MustInherit Class Simulation
  inheritance:
  - System.Object
  derivedClasses:
  - Netick.ClientSimulation
  - Netick.ServerSimulation
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Netick.Simulation.SimulatedObjects
  commentId: F:Netick.Simulation.SimulatedObjects
  id: SimulatedObjects
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: SimulatedObjects
  nameWithType: Simulation.SimulatedObjects
  fullName: Netick.Simulation.SimulatedObjects
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public readonly ExecutionListLL SimulatedObjects
    return:
      type: Netick.ExecutionListLL
    content.vb: Public ReadOnly SimulatedObjects As ExecutionListLL
- uid: Netick.Simulation.UnlinkedEntities
  commentId: F:Netick.Simulation.UnlinkedEntities
  id: UnlinkedEntities
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: UnlinkedEntities
  nameWithType: Simulation.UnlinkedEntities
  fullName: Netick.Simulation.UnlinkedEntities
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Dictionary<int, Entity> UnlinkedEntities
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Netick.Entity}
    content.vb: Public UnlinkedEntities As Dictionary(Of Integer, Entity)
- uid: Netick.Simulation.InvokeRPCs
  commentId: M:Netick.Simulation.InvokeRPCs
  id: InvokeRPCs
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: InvokeRPCs()
  nameWithType: Simulation.InvokeRPCs()
  fullName: Netick.Simulation.InvokeRPCs()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: protected void InvokeRPCs()
    content.vb: Protected Sub InvokeRPCs()
  overload: Netick.Simulation.InvokeRPCs*
- uid: Netick.Simulation.InvokePreRollback
  commentId: M:Netick.Simulation.InvokePreRollback
  id: InvokePreRollback
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: InvokePreRollback()
  nameWithType: Simulation.InvokePreRollback()
  fullName: Netick.Simulation.InvokePreRollback()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: protected void InvokePreRollback()
    content.vb: Protected Sub InvokePreRollback()
  overload: Netick.Simulation.InvokePreRollback*
- uid: Netick.Simulation.InvokePostResimulation
  commentId: M:Netick.Simulation.InvokePostResimulation
  id: InvokePostResimulation
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: InvokePostResimulation()
  nameWithType: Simulation.InvokePostResimulation()
  fullName: Netick.Simulation.InvokePostResimulation()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: protected void InvokePostResimulation()
    content.vb: Protected Sub InvokePostResimulation()
  overload: Netick.Simulation.InvokePostResimulation*
- uid: Netick.Simulation.FetchInput``1(``0@,System.Boolean@,Netick.Entity,System.Int32)
  commentId: M:Netick.Simulation.FetchInput``1(``0@,System.Boolean@,Netick.Entity,System.Int32)
  id: FetchInput``1(``0@,System.Boolean@,Netick.Entity,System.Int32)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: FetchInput<T>(out T, ref bool, Entity, int)
  nameWithType: Simulation.FetchInput<T>(out T, ref bool, Entity, int)
  fullName: Netick.Simulation.FetchInput<T>(out T, ref bool, Netick.Entity, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public bool FetchInput<T>(out T input, ref bool isDuplicated, Entity entity, int localPlayerIndex) where T : unmanaged'
    parameters:
    - id: input
      type: '{T}'
    - id: isDuplicated
      type: System.Boolean
    - id: entity
      type: Netick.Entity
    - id: localPlayerIndex
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function FetchInput(Of T As Structure)(input As T, isDuplicated As Boolean, entity As Entity, localPlayerIndex As Integer) As Boolean
  overload: Netick.Simulation.FetchInput*
  nameWithType.vb: Simulation.FetchInput(Of T)(T, Boolean, Entity, Integer)
  fullName.vb: Netick.Simulation.FetchInput(Of T)(T, Boolean, Netick.Entity, Integer)
  name.vb: FetchInput(Of T)(T, Boolean, Entity, Integer)
- uid: Netick.Simulation.FetchInputLocal``1(``0@,System.Boolean@,System.Int32)
  commentId: M:Netick.Simulation.FetchInputLocal``1(``0@,System.Boolean@,System.Int32)
  id: FetchInputLocal``1(``0@,System.Boolean@,System.Int32)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: FetchInputLocal<T>(out T, ref bool, int)
  nameWithType: Simulation.FetchInputLocal<T>(out T, ref bool, int)
  fullName: Netick.Simulation.FetchInputLocal<T>(out T, ref bool, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public bool FetchInputLocal<T>(out T input, ref bool isDuplicated, int localPlayerIndex) where T : unmanaged'
    parameters:
    - id: input
      type: '{T}'
    - id: isDuplicated
      type: System.Boolean
    - id: localPlayerIndex
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function FetchInputLocal(Of T As Structure)(input As T, isDuplicated As Boolean, localPlayerIndex As Integer) As Boolean
  overload: Netick.Simulation.FetchInputLocal*
  nameWithType.vb: Simulation.FetchInputLocal(Of T)(T, Boolean, Integer)
  fullName.vb: Netick.Simulation.FetchInputLocal(Of T)(T, Boolean, Integer)
  name.vb: FetchInputLocal(Of T)(T, Boolean, Integer)
- uid: Netick.Simulation.GetInput``1(System.Int32)
  commentId: M:Netick.Simulation.GetInput``1(System.Int32)
  id: GetInput``1(System.Int32)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: GetInput<T>(int)
  nameWithType: Simulation.GetInput<T>(int)
  fullName: Netick.Simulation.GetInput<T>(int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public T GetInput<T>(int index) where T : unmanaged'
    parameters:
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetInput(Of T As Structure)(index As Integer) As T
  overload: Netick.Simulation.GetInput*
  nameWithType.vb: Simulation.GetInput(Of T)(Integer)
  fullName.vb: Netick.Simulation.GetInput(Of T)(Integer)
  name.vb: GetInput(Of T)(Integer)
- uid: Netick.Simulation.SetInput``1(``0,System.Int32)
  commentId: M:Netick.Simulation.SetInput``1(``0,System.Int32)
  id: SetInput``1(``0,System.Int32)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: SetInput<T>(T, int)
  nameWithType: Simulation.SetInput<T>(T, int)
  fullName: Netick.Simulation.SetInput<T>(T, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: 'public void SetInput<T>(T input, int index) where T : unmanaged'
    parameters:
    - id: input
      type: '{T}'
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub SetInput(Of T As Structure)(input As T, index As Integer)
  overload: Netick.Simulation.SetInput*
  nameWithType.vb: Simulation.SetInput(Of T)(T, Integer)
  fullName.vb: Netick.Simulation.SetInput(Of T)(T, Integer)
  name.vb: SetInput(Of T)(T, Integer)
- uid: Netick.Simulation.GetEntityByWorldIndex(System.Int32)
  commentId: M:Netick.Simulation.GetEntityByWorldIndex(System.Int32)
  id: GetEntityByWorldIndex(System.Int32)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: GetEntityByWorldIndex(int)
  nameWithType: Simulation.GetEntityByWorldIndex(int)
  fullName: Netick.Simulation.GetEntityByWorldIndex(int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Entity GetEntityByWorldIndex(int worldIndex)
    parameters:
    - id: worldIndex
      type: System.Int32
    return:
      type: Netick.Entity
    content.vb: Public Function GetEntityByWorldIndex(worldIndex As Integer) As Entity
  overload: Netick.Simulation.GetEntityByWorldIndex*
  nameWithType.vb: Simulation.GetEntityByWorldIndex(Integer)
  fullName.vb: Netick.Simulation.GetEntityByWorldIndex(Integer)
  name.vb: GetEntityByWorldIndex(Integer)
- uid: Netick.Simulation.RemoveFromNetworkLoop(Netick.Entity)
  commentId: M:Netick.Simulation.RemoveFromNetworkLoop(Netick.Entity)
  id: RemoveFromNetworkLoop(Netick.Entity)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: RemoveFromNetworkLoop(Entity)
  nameWithType: Simulation.RemoveFromNetworkLoop(Entity)
  fullName: Netick.Simulation.RemoveFromNetworkLoop(Netick.Entity)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void RemoveFromNetworkLoop(Entity entity)
    parameters:
    - id: entity
      type: Netick.Entity
    content.vb: Public Sub RemoveFromNetworkLoop(entity As Entity)
  overload: Netick.Simulation.RemoveFromNetworkLoop*
- uid: Netick.Simulation.ClientAddUnlinkedEntity(Netick.Entity,System.Int32,System.Int32)
  commentId: M:Netick.Simulation.ClientAddUnlinkedEntity(Netick.Entity,System.Int32,System.Int32)
  id: ClientAddUnlinkedEntity(Netick.Entity,System.Int32,System.Int32)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: ClientAddUnlinkedEntity(Entity, int, int)
  nameWithType: Simulation.ClientAddUnlinkedEntity(Entity, int, int)
  fullName: Netick.Simulation.ClientAddUnlinkedEntity(Netick.Entity, int, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void ClientAddUnlinkedEntity(Entity entity, int id, int worldIndex)
    parameters:
    - id: entity
      type: Netick.Entity
    - id: id
      type: System.Int32
    - id: worldIndex
      type: System.Int32
    content.vb: Public Sub ClientAddUnlinkedEntity(entity As Entity, id As Integer, worldIndex As Integer)
  overload: Netick.Simulation.ClientAddUnlinkedEntity*
  nameWithType.vb: Simulation.ClientAddUnlinkedEntity(Entity, Integer, Integer)
  fullName.vb: Netick.Simulation.ClientAddUnlinkedEntity(Netick.Entity, Integer, Integer)
  name.vb: ClientAddUnlinkedEntity(Entity, Integer, Integer)
- uid: Netick.Simulation.CreateAndLinkEntityLocal(Netick.INetickEntity)
  commentId: M:Netick.Simulation.CreateAndLinkEntityLocal(Netick.INetickEntity)
  id: CreateAndLinkEntityLocal(Netick.INetickEntity)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: CreateAndLinkEntityLocal(INetickEntity)
  nameWithType: Simulation.CreateAndLinkEntityLocal(INetickEntity)
  fullName: Netick.Simulation.CreateAndLinkEntityLocal(Netick.INetickEntity)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Entity CreateAndLinkEntityLocal(INetickEntity userEntity)
    parameters:
    - id: userEntity
      type: Netick.INetickEntity
    return:
      type: Netick.Entity
    content.vb: Public Function CreateAndLinkEntityLocal(userEntity As INetickEntity) As Entity
  overload: Netick.Simulation.CreateAndLinkEntityLocal*
- uid: Netick.Simulation.CreateEntity(System.Int32)
  commentId: M:Netick.Simulation.CreateEntity(System.Int32)
  id: CreateEntity(System.Int32)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: CreateEntity(int)
  nameWithType: Simulation.CreateEntity(int)
  fullName: Netick.Simulation.CreateEntity(int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Entity CreateEntity(int stateSizeWords)
    parameters:
    - id: stateSizeWords
      type: System.Int32
    return:
      type: Netick.Entity
    content.vb: Public Function CreateEntity(stateSizeWords As Integer) As Entity
  overload: Netick.Simulation.CreateEntity*
  nameWithType.vb: Simulation.CreateEntity(Integer)
  fullName.vb: Netick.Simulation.CreateEntity(Integer)
  name.vb: CreateEntity(Integer)
- uid: Netick.Simulation.LinkEntity(Netick.INetickEntity,Netick.Entity)
  commentId: M:Netick.Simulation.LinkEntity(Netick.INetickEntity,Netick.Entity)
  id: LinkEntity(Netick.INetickEntity,Netick.Entity)
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: LinkEntity(INetickEntity, Entity)
  nameWithType: Simulation.LinkEntity(INetickEntity, Entity)
  fullName: Netick.Simulation.LinkEntity(Netick.INetickEntity, Netick.Entity)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Entity LinkEntity(INetickEntity userEntity, Entity entity)
    parameters:
    - id: userEntity
      type: Netick.INetickEntity
    - id: entity
      type: Netick.Entity
    return:
      type: Netick.Entity
    content.vb: Public Function LinkEntity(userEntity As INetickEntity, entity As Entity) As Entity
  overload: Netick.Simulation.LinkEntity*
- uid: Netick.Simulation.CurrentInput
  commentId: P:Netick.Simulation.CurrentInput
  id: CurrentInput
  parent: Netick.Simulation
  langs:
  - csharp
  - vb
  name: CurrentInput
  nameWithType: Simulation.CurrentInput
  fullName: Netick.Simulation.CurrentInput
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public SimulationInput CurrentInput { get; }
    parameters: []
    return:
      type: Netick.SimulationInput
    content.vb: Public ReadOnly Property CurrentInput As SimulationInput
  overload: Netick.Simulation.CurrentInput*
references:
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Netick.ExecutionListLL
  commentId: T:Netick.ExecutionListLL
  parent: Netick
  isExternal: true
  href: Netick.ExecutionListLL.html
  name: ExecutionListLL
  nameWithType: ExecutionListLL
  fullName: Netick.ExecutionListLL
- uid: System.Collections.Generic.Dictionary{System.Int32,Netick.Entity}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Netick.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, Entity>
  nameWithType: Dictionary<int, Entity>
  fullName: System.Collections.Generic.Dictionary<int, Netick.Entity>
  nameWithType.vb: Dictionary(Of Integer, Entity)
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, Netick.Entity)
  name.vb: Dictionary(Of Integer, Entity)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Netick.Entity
    name: Entity
    isExternal: true
    href: Netick.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Netick.Entity
    name: Entity
    isExternal: true
    href: Netick.Entity.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Netick.Simulation.InvokeRPCs*
  commentId: Overload:Netick.Simulation.InvokeRPCs
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_InvokeRPCs
  name: InvokeRPCs
  nameWithType: Simulation.InvokeRPCs
  fullName: Netick.Simulation.InvokeRPCs
- uid: Netick.Simulation.InvokePreRollback*
  commentId: Overload:Netick.Simulation.InvokePreRollback
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_InvokePreRollback
  name: InvokePreRollback
  nameWithType: Simulation.InvokePreRollback
  fullName: Netick.Simulation.InvokePreRollback
- uid: Netick.Simulation.InvokePostResimulation*
  commentId: Overload:Netick.Simulation.InvokePostResimulation
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_InvokePostResimulation
  name: InvokePostResimulation
  nameWithType: Simulation.InvokePostResimulation
  fullName: Netick.Simulation.InvokePostResimulation
- uid: Netick.Simulation.FetchInput*
  commentId: Overload:Netick.Simulation.FetchInput
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_FetchInput__1___0__System_Boolean__Netick_Entity_System_Int32_
  name: FetchInput
  nameWithType: Simulation.FetchInput
  fullName: Netick.Simulation.FetchInput
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Netick.Entity
  commentId: T:Netick.Entity
  parent: Netick
  isExternal: true
  href: Netick.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: Netick.Entity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Netick.Simulation.FetchInputLocal*
  commentId: Overload:Netick.Simulation.FetchInputLocal
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_FetchInputLocal__1___0__System_Boolean__System_Int32_
  name: FetchInputLocal
  nameWithType: Simulation.FetchInputLocal
  fullName: Netick.Simulation.FetchInputLocal
- uid: Netick.Simulation.GetInput*
  commentId: Overload:Netick.Simulation.GetInput
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_GetInput__1_System_Int32_
  name: GetInput
  nameWithType: Simulation.GetInput
  fullName: Netick.Simulation.GetInput
- uid: Netick.Simulation.SetInput*
  commentId: Overload:Netick.Simulation.SetInput
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_SetInput__1___0_System_Int32_
  name: SetInput
  nameWithType: Simulation.SetInput
  fullName: Netick.Simulation.SetInput
- uid: Netick.Simulation.GetEntityByWorldIndex*
  commentId: Overload:Netick.Simulation.GetEntityByWorldIndex
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_GetEntityByWorldIndex_System_Int32_
  name: GetEntityByWorldIndex
  nameWithType: Simulation.GetEntityByWorldIndex
  fullName: Netick.Simulation.GetEntityByWorldIndex
- uid: Netick.Simulation.RemoveFromNetworkLoop*
  commentId: Overload:Netick.Simulation.RemoveFromNetworkLoop
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_RemoveFromNetworkLoop_Netick_Entity_
  name: RemoveFromNetworkLoop
  nameWithType: Simulation.RemoveFromNetworkLoop
  fullName: Netick.Simulation.RemoveFromNetworkLoop
- uid: Netick.Simulation.ClientAddUnlinkedEntity*
  commentId: Overload:Netick.Simulation.ClientAddUnlinkedEntity
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_ClientAddUnlinkedEntity_Netick_Entity_System_Int32_System_Int32_
  name: ClientAddUnlinkedEntity
  nameWithType: Simulation.ClientAddUnlinkedEntity
  fullName: Netick.Simulation.ClientAddUnlinkedEntity
- uid: Netick.Simulation.CreateAndLinkEntityLocal*
  commentId: Overload:Netick.Simulation.CreateAndLinkEntityLocal
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_CreateAndLinkEntityLocal_Netick_INetickEntity_
  name: CreateAndLinkEntityLocal
  nameWithType: Simulation.CreateAndLinkEntityLocal
  fullName: Netick.Simulation.CreateAndLinkEntityLocal
- uid: Netick.INetickEntity
  commentId: T:Netick.INetickEntity
  parent: Netick
  isExternal: true
  href: Netick.INetickEntity.html
  name: INetickEntity
  nameWithType: INetickEntity
  fullName: Netick.INetickEntity
- uid: Netick.Simulation.CreateEntity*
  commentId: Overload:Netick.Simulation.CreateEntity
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_CreateEntity_System_Int32_
  name: CreateEntity
  nameWithType: Simulation.CreateEntity
  fullName: Netick.Simulation.CreateEntity
- uid: Netick.Simulation.LinkEntity*
  commentId: Overload:Netick.Simulation.LinkEntity
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_LinkEntity_Netick_INetickEntity_Netick_Entity_
  name: LinkEntity
  nameWithType: Simulation.LinkEntity
  fullName: Netick.Simulation.LinkEntity
- uid: Netick.Simulation.CurrentInput*
  commentId: Overload:Netick.Simulation.CurrentInput
  isExternal: true
  href: Netick.Simulation.html#Netick_Simulation_CurrentInput
  name: CurrentInput
  nameWithType: Simulation.CurrentInput
  fullName: Netick.Simulation.CurrentInput
- uid: Netick.SimulationInput
  commentId: T:Netick.SimulationInput
  parent: Netick
  isExternal: true
  href: Netick.SimulationInput.html
  name: SimulationInput
  nameWithType: SimulationInput
  fullName: Netick.SimulationInput

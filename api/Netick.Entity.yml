### YamlMime:ManagedReference
items:
- uid: Netick.Entity
  commentId: T:Netick.Entity
  id: Entity
  parent: Netick
  children:
  - Netick.Entity.AdaptiveRemoteInterpolation
  - Netick.Entity.BehsHash
  - Netick.Entity.BlockIndex
  - Netick.Entity.Engine
  - Netick.Entity.GetStateRef
  - Netick.Entity.GetStateSizeWords(Netick.INetickNetworkScript[])
  - Netick.Entity.GroupTableId
  - Netick.Entity.Id
  - Netick.Entity.InputSource
  - Netick.Entity.InputSourcePlayerId
  - Netick.Entity.InterestGroup
  - Netick.Entity.InterestMarkAltered(System.Int32,System.Int32)
  - Netick.Entity.InternalDirtify(Netick.INetickNetworkScript,System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32)
  - Netick.Entity.InternalRegOnChanged(Netick.INetickNetworkScript,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Netick.OnChangedEvent)
  - Netick.Entity.InternalRegSmooth(Netick.INetickNetworkScript,System.String,System.Int32,System.Single,System.Int32)
  - Netick.Entity.InvokeGameEngineIntoNetcode
  - Netick.Entity.InvokeNetcodeIntoGameEngine
  - Netick.Entity.IsInputSource
  - Netick.Entity.IsInterested
  - Netick.Entity.IsMarkedForDestruction
  - Netick.Entity.IsOwner
  - Netick.Entity.IsPredicted
  - Netick.Entity.IsProxy
  - Netick.Entity.IsResimulating
  - Netick.Entity.MarkAltered(System.Int32*,System.Int32)
  - Netick.Entity.Move(System.Numerics.Vector3)
  - Netick.Entity.ObjectMeta
  - Netick.Entity.Position
  - Netick.Entity.RawId
  - Netick.Entity.SetNarrowphaseInterest(Netick.NetworkPlayer,System.Boolean)
  - Netick.Entity.SetState(System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32)
  - Netick.Entity.SetStateFrom(System.Byte*,System.Int32,System.Int32,System.Boolean)
  - Netick.Entity.SetState_Collection(System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32,System.Int32)
  - Netick.Entity.StateOffsetBytes
  - Netick.Entity.StatePtr
  - Netick.Entity.StateSizeWords
  - Netick.Entity.UserEntity
  - Netick.Entity.UserId
  - Netick.Entity.WorldIndex
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: Entity
  fullName: Netick.Entity
  type: Class
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: >-
      [IgnoreCodeGen]

      public sealed class Entity
    content.vb: >-
      <IgnoreCodeGen>

      Public NotInheritable Class Entity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  attributes:
  - type: Netick.IgnoreCodeGen
    ctor: Netick.IgnoreCodeGen.#ctor
    arguments: []
- uid: Netick.Entity.Engine
  commentId: F:Netick.Entity.Engine
  id: Engine
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: Engine
  nameWithType: Entity.Engine
  fullName: Netick.Entity.Engine
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public readonly NetickEngine Engine
    return:
      type: Netick.NetickEngine
    content.vb: Public ReadOnly Engine As NetickEngine
- uid: Netick.Entity.UserEntity
  commentId: F:Netick.Entity.UserEntity
  id: UserEntity
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: UserEntity
  nameWithType: Entity.UserEntity
  fullName: Netick.Entity.UserEntity
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public INetickEntity UserEntity
    return:
      type: Netick.INetickEntity
    content.vb: Public UserEntity As INetickEntity
- uid: Netick.Entity.ObjectMeta
  commentId: F:Netick.Entity.ObjectMeta
  id: ObjectMeta
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: ObjectMeta
  nameWithType: Entity.ObjectMeta
  fullName: Netick.Entity.ObjectMeta
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetickUniqueObjectMeta ObjectMeta
    return:
      type: Netick.NetickUniqueObjectMeta
    content.vb: Public ObjectMeta As NetickUniqueObjectMeta
- uid: Netick.Entity.BehsHash
  commentId: F:Netick.Entity.BehsHash
  id: BehsHash
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: BehsHash
  nameWithType: Entity.BehsHash
  fullName: Netick.Entity.BehsHash
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int BehsHash
    return:
      type: System.Int32
    content.vb: Public BehsHash As Integer
- uid: Netick.Entity.UserId
  commentId: F:Netick.Entity.UserId
  id: UserId
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: Entity.UserId
  fullName: Netick.Entity.UserId
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int UserId
    return:
      type: System.Int32
    content.vb: Public UserId As Integer
- uid: Netick.Entity.Position
  commentId: F:Netick.Entity.Position
  id: Position
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Entity.Position
  fullName: Netick.Entity.Position
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public Vector3 Position
    return:
      type: System.Numerics.Vector3
    content.vb: Public Position As Vector3
- uid: Netick.Entity.WorldIndex
  commentId: F:Netick.Entity.WorldIndex
  id: WorldIndex
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: WorldIndex
  nameWithType: Entity.WorldIndex
  fullName: Netick.Entity.WorldIndex
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int WorldIndex
    return:
      type: System.Int32
    content.vb: Public WorldIndex As Integer
- uid: Netick.Entity.GroupTableId
  commentId: F:Netick.Entity.GroupTableId
  id: GroupTableId
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: GroupTableId
  nameWithType: Entity.GroupTableId
  fullName: Netick.Entity.GroupTableId
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int GroupTableId
    return:
      type: System.Int32
    content.vb: Public GroupTableId As Integer
- uid: Netick.Entity.RawId
  commentId: F:Netick.Entity.RawId
  id: RawId
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: RawId
  nameWithType: Entity.RawId
  fullName: Netick.Entity.RawId
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int RawId
    return:
      type: System.Int32
    content.vb: Public RawId As Integer
- uid: Netick.Entity.IsMarkedForDestruction
  commentId: F:Netick.Entity.IsMarkedForDestruction
  id: IsMarkedForDestruction
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: IsMarkedForDestruction
  nameWithType: Entity.IsMarkedForDestruction
  fullName: Netick.Entity.IsMarkedForDestruction
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsMarkedForDestruction
    return:
      type: System.Boolean
    content.vb: Public IsMarkedForDestruction As Boolean
- uid: Netick.Entity.StateSizeWords
  commentId: F:Netick.Entity.StateSizeWords
  id: StateSizeWords
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: StateSizeWords
  nameWithType: Entity.StateSizeWords
  fullName: Netick.Entity.StateSizeWords
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public long StateSizeWords
    return:
      type: System.Int64
    content.vb: Public StateSizeWords As Long
- uid: Netick.Entity.StateOffsetBytes
  commentId: F:Netick.Entity.StateOffsetBytes
  id: StateOffsetBytes
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: StateOffsetBytes
  nameWithType: Entity.StateOffsetBytes
  fullName: Netick.Entity.StateOffsetBytes
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public long StateOffsetBytes
    return:
      type: System.Int64
    content.vb: Public StateOffsetBytes As Long
- uid: Netick.Entity.BlockIndex
  commentId: F:Netick.Entity.BlockIndex
  id: BlockIndex
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: BlockIndex
  nameWithType: Entity.BlockIndex
  fullName: Netick.Entity.BlockIndex
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int BlockIndex
    return:
      type: System.Int32
    content.vb: Public BlockIndex As Integer
- uid: Netick.Entity.StatePtr
  commentId: F:Netick.Entity.StatePtr
  id: StatePtr
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: StatePtr
  nameWithType: Entity.StatePtr
  fullName: Netick.Entity.StatePtr
  type: Field
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int* StatePtr
    return:
      type: System.Int32*
    content.vb: Public StatePtr As Integer*
- uid: Netick.Entity.Move(System.Numerics.Vector3)
  commentId: M:Netick.Entity.Move(System.Numerics.Vector3)
  id: Move(System.Numerics.Vector3)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: Move(Vector3)
  nameWithType: Entity.Move(Vector3)
  fullName: Netick.Entity.Move(System.Numerics.Vector3)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void Move(Vector3 newPos)
    parameters:
    - id: newPos
      type: System.Numerics.Vector3
    content.vb: Public Sub Move(newPos As Vector3)
  overload: Netick.Entity.Move*
- uid: Netick.Entity.SetNarrowphaseInterest(Netick.NetworkPlayer,System.Boolean)
  commentId: M:Netick.Entity.SetNarrowphaseInterest(Netick.NetworkPlayer,System.Boolean)
  id: SetNarrowphaseInterest(Netick.NetworkPlayer,System.Boolean)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: SetNarrowphaseInterest(NetworkPlayer, bool)
  nameWithType: Entity.SetNarrowphaseInterest(NetworkPlayer, bool)
  fullName: Netick.Entity.SetNarrowphaseInterest(Netick.NetworkPlayer, bool)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void SetNarrowphaseInterest(NetworkPlayer player, bool isInterested)
    parameters:
    - id: player
      type: Netick.NetworkPlayer
    - id: isInterested
      type: System.Boolean
    content.vb: Public Sub SetNarrowphaseInterest(player As NetworkPlayer, isInterested As Boolean)
  overload: Netick.Entity.SetNarrowphaseInterest*
  nameWithType.vb: Entity.SetNarrowphaseInterest(NetworkPlayer, Boolean)
  fullName.vb: Netick.Entity.SetNarrowphaseInterest(Netick.NetworkPlayer, Boolean)
  name.vb: SetNarrowphaseInterest(NetworkPlayer, Boolean)
- uid: Netick.Entity.InternalDirtify(Netick.INetickNetworkScript,System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32)
  commentId: M:Netick.Entity.InternalDirtify(Netick.INetickNetworkScript,System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32)
  id: InternalDirtify(Netick.INetickNetworkScript,System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: InternalDirtify(INetickNetworkScript, int*, int*, int, int, int)
  nameWithType: Entity.InternalDirtify(INetickNetworkScript, int*, int*, int, int, int)
  fullName: Netick.Entity.InternalDirtify(Netick.INetickNetworkScript, int*, int*, int, int, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static void InternalDirtify(INetickNetworkScript script, int* data, int* p, int sizeInWords, int hasOnChanged, int isInputSourceOnly = 0)
    parameters:
    - id: script
      type: Netick.INetickNetworkScript
    - id: data
      type: System.Int32*
    - id: p
      type: System.Int32*
    - id: sizeInWords
      type: System.Int32
    - id: hasOnChanged
      type: System.Int32
    - id: isInputSourceOnly
      type: System.Int32
    content.vb: Public Shared Sub InternalDirtify(script As INetickNetworkScript, data As Integer*, p As Integer*, sizeInWords As Integer, hasOnChanged As Integer, isInputSourceOnly As Integer = 0)
  overload: Netick.Entity.InternalDirtify*
  nameWithType.vb: Entity.InternalDirtify(INetickNetworkScript, Integer*, Integer*, Integer, Integer, Integer)
  fullName.vb: Netick.Entity.InternalDirtify(Netick.INetickNetworkScript, Integer*, Integer*, Integer, Integer, Integer)
  name.vb: InternalDirtify(INetickNetworkScript, Integer*, Integer*, Integer, Integer, Integer)
- uid: Netick.Entity.InternalRegOnChanged(Netick.INetickNetworkScript,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Netick.OnChangedEvent)
  commentId: M:Netick.Entity.InternalRegOnChanged(Netick.INetickNetworkScript,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Netick.OnChangedEvent)
  id: InternalRegOnChanged(Netick.INetickNetworkScript,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Netick.OnChangedEvent)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: InternalRegOnChanged(INetickNetworkScript, int, int, int, int, int, int, OnChangedEvent)
  nameWithType: Entity.InternalRegOnChanged(INetickNetworkScript, int, int, int, int, int, int, OnChangedEvent)
  fullName: Netick.Entity.InternalRegOnChanged(Netick.INetickNetworkScript, int, int, int, int, int, int, Netick.OnChangedEvent)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static void InternalRegOnChanged(INetickNetworkScript script, int isArray, int invokeDuringResims, int inversePrecision, int propertyStart, int propertyPartIndex, int propertySizeWords, OnChangedEvent onChanged)
    parameters:
    - id: script
      type: Netick.INetickNetworkScript
    - id: isArray
      type: System.Int32
    - id: invokeDuringResims
      type: System.Int32
    - id: inversePrecision
      type: System.Int32
    - id: propertyStart
      type: System.Int32
    - id: propertyPartIndex
      type: System.Int32
    - id: propertySizeWords
      type: System.Int32
    - id: onChanged
      type: Netick.OnChangedEvent
    content.vb: Public Shared Sub InternalRegOnChanged(script As INetickNetworkScript, isArray As Integer, invokeDuringResims As Integer, inversePrecision As Integer, propertyStart As Integer, propertyPartIndex As Integer, propertySizeWords As Integer, onChanged As OnChangedEvent)
  overload: Netick.Entity.InternalRegOnChanged*
  nameWithType.vb: Entity.InternalRegOnChanged(INetickNetworkScript, Integer, Integer, Integer, Integer, Integer, Integer, OnChangedEvent)
  fullName.vb: Netick.Entity.InternalRegOnChanged(Netick.INetickNetworkScript, Integer, Integer, Integer, Integer, Integer, Integer, Netick.OnChangedEvent)
  name.vb: InternalRegOnChanged(INetickNetworkScript, Integer, Integer, Integer, Integer, Integer, Integer, OnChangedEvent)
- uid: Netick.Entity.InternalRegSmooth(Netick.INetickNetworkScript,System.String,System.Int32,System.Single,System.Int32)
  commentId: M:Netick.Entity.InternalRegSmooth(Netick.INetickNetworkScript,System.String,System.Int32,System.Single,System.Int32)
  id: InternalRegSmooth(Netick.INetickNetworkScript,System.String,System.Int32,System.Single,System.Int32)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: InternalRegSmooth(INetickNetworkScript, string, int, float, int)
  nameWithType: Entity.InternalRegSmooth(INetickNetworkScript, string, int, float, int)
  fullName: Netick.Entity.InternalRegSmooth(Netick.INetickNetworkScript, string, int, float, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static void InternalRegSmooth(INetickNetworkScript script, string propertyName, int offsetInWords, float precision, int vectorFloatFieldsCount)
    parameters:
    - id: script
      type: Netick.INetickNetworkScript
    - id: propertyName
      type: System.String
    - id: offsetInWords
      type: System.Int32
    - id: precision
      type: System.Single
    - id: vectorFloatFieldsCount
      type: System.Int32
    content.vb: Public Shared Sub InternalRegSmooth(script As INetickNetworkScript, propertyName As String, offsetInWords As Integer, precision As Single, vectorFloatFieldsCount As Integer)
  overload: Netick.Entity.InternalRegSmooth*
  nameWithType.vb: Entity.InternalRegSmooth(INetickNetworkScript, String, Integer, Single, Integer)
  fullName.vb: Netick.Entity.InternalRegSmooth(Netick.INetickNetworkScript, String, Integer, Single, Integer)
  name.vb: InternalRegSmooth(INetickNetworkScript, String, Integer, Single, Integer)
- uid: Netick.Entity.GetStateSizeWords(Netick.INetickNetworkScript[])
  commentId: M:Netick.Entity.GetStateSizeWords(Netick.INetickNetworkScript[])
  id: GetStateSizeWords(Netick.INetickNetworkScript[])
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: GetStateSizeWords(INetickNetworkScript[])
  nameWithType: Entity.GetStateSizeWords(INetickNetworkScript[])
  fullName: Netick.Entity.GetStateSizeWords(Netick.INetickNetworkScript[])
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public static int GetStateSizeWords(INetickNetworkScript[] scripts)
    parameters:
    - id: scripts
      type: Netick.INetickNetworkScript[]
    return:
      type: System.Int32
    content.vb: Public Shared Function GetStateSizeWords(scripts As INetickNetworkScript()) As Integer
  overload: Netick.Entity.GetStateSizeWords*
  nameWithType.vb: Entity.GetStateSizeWords(INetickNetworkScript())
  fullName.vb: Netick.Entity.GetStateSizeWords(Netick.INetickNetworkScript())
  name.vb: GetStateSizeWords(INetickNetworkScript())
- uid: Netick.Entity.GetStateRef
  commentId: M:Netick.Entity.GetStateRef
  id: GetStateRef
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: GetStateRef()
  nameWithType: Entity.GetStateRef()
  fullName: Netick.Entity.GetStateRef()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public EntityStateRef GetStateRef()
    return:
      type: Netick.EntityStateRef
    content.vb: Public Function GetStateRef() As EntityStateRef
  overload: Netick.Entity.GetStateRef*
- uid: Netick.Entity.InvokeGameEngineIntoNetcode
  commentId: M:Netick.Entity.InvokeGameEngineIntoNetcode
  id: InvokeGameEngineIntoNetcode
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: InvokeGameEngineIntoNetcode()
  nameWithType: Entity.InvokeGameEngineIntoNetcode()
  fullName: Netick.Entity.InvokeGameEngineIntoNetcode()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void InvokeGameEngineIntoNetcode()
    content.vb: Public Sub InvokeGameEngineIntoNetcode()
  overload: Netick.Entity.InvokeGameEngineIntoNetcode*
- uid: Netick.Entity.InvokeNetcodeIntoGameEngine
  commentId: M:Netick.Entity.InvokeNetcodeIntoGameEngine
  id: InvokeNetcodeIntoGameEngine
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: InvokeNetcodeIntoGameEngine()
  nameWithType: Entity.InvokeNetcodeIntoGameEngine()
  fullName: Netick.Entity.InvokeNetcodeIntoGameEngine()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void InvokeNetcodeIntoGameEngine()
    content.vb: Public Sub InvokeNetcodeIntoGameEngine()
  overload: Netick.Entity.InvokeNetcodeIntoGameEngine*
- uid: Netick.Entity.SetStateFrom(System.Byte*,System.Int32,System.Int32,System.Boolean)
  commentId: M:Netick.Entity.SetStateFrom(System.Byte*,System.Int32,System.Int32,System.Boolean)
  id: SetStateFrom(System.Byte*,System.Int32,System.Int32,System.Boolean)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: SetStateFrom(byte*, int, int, bool)
  nameWithType: Entity.SetStateFrom(byte*, int, int, bool)
  fullName: Netick.Entity.SetStateFrom(byte*, int, int, bool)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void SetStateFrom(byte* source, int offsetWords, int sizeWords, bool invokeOnChanged)
    parameters:
    - id: source
      type: System.Byte*
    - id: offsetWords
      type: System.Int32
    - id: sizeWords
      type: System.Int32
    - id: invokeOnChanged
      type: System.Boolean
    content.vb: Public Sub SetStateFrom(source As Byte*, offsetWords As Integer, sizeWords As Integer, invokeOnChanged As Boolean)
  overload: Netick.Entity.SetStateFrom*
  nameWithType.vb: Entity.SetStateFrom(Byte*, Integer, Integer, Boolean)
  fullName.vb: Netick.Entity.SetStateFrom(Byte*, Integer, Integer, Boolean)
  name.vb: SetStateFrom(Byte*, Integer, Integer, Boolean)
- uid: Netick.Entity.SetState(System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32)
  commentId: M:Netick.Entity.SetState(System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32)
  id: SetState(System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: SetState(int*, int*, int, int, int)
  nameWithType: Entity.SetState(int*, int*, int, int, int)
  fullName: Netick.Entity.SetState(int*, int*, int, int, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void SetState(int* newValue, int* p, int size, int hasOnChanged, int isInputSourceOnly)
    parameters:
    - id: newValue
      type: System.Int32*
    - id: p
      type: System.Int32*
    - id: size
      type: System.Int32
    - id: hasOnChanged
      type: System.Int32
    - id: isInputSourceOnly
      type: System.Int32
    content.vb: Public Sub SetState(newValue As Integer*, p As Integer*, size As Integer, hasOnChanged As Integer, isInputSourceOnly As Integer)
  overload: Netick.Entity.SetState*
  nameWithType.vb: Entity.SetState(Integer*, Integer*, Integer, Integer, Integer)
  fullName.vb: Netick.Entity.SetState(Integer*, Integer*, Integer, Integer, Integer)
  name.vb: SetState(Integer*, Integer*, Integer, Integer, Integer)
- uid: Netick.Entity.SetState_Collection(System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Netick.Entity.SetState_Collection(System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32,System.Int32)
  id: SetState_Collection(System.Int32*,System.Int32*,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: SetState_Collection(int*, int*, int, int, int, int)
  nameWithType: Entity.SetState_Collection(int*, int*, int, int, int, int)
  fullName: Netick.Entity.SetState_Collection(int*, int*, int, int, int, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void SetState_Collection(int* newValue, int* p, int size, int hasOnChanged, int isInputSourceOnly, int collectionHasOnChanged)
    parameters:
    - id: newValue
      type: System.Int32*
    - id: p
      type: System.Int32*
    - id: size
      type: System.Int32
    - id: hasOnChanged
      type: System.Int32
    - id: isInputSourceOnly
      type: System.Int32
    - id: collectionHasOnChanged
      type: System.Int32
    content.vb: Public Sub SetState_Collection(newValue As Integer*, p As Integer*, size As Integer, hasOnChanged As Integer, isInputSourceOnly As Integer, collectionHasOnChanged As Integer)
  overload: Netick.Entity.SetState_Collection*
  nameWithType.vb: Entity.SetState_Collection(Integer*, Integer*, Integer, Integer, Integer, Integer)
  fullName.vb: Netick.Entity.SetState_Collection(Integer*, Integer*, Integer, Integer, Integer, Integer)
  name.vb: SetState_Collection(Integer*, Integer*, Integer, Integer, Integer, Integer)
- uid: Netick.Entity.MarkAltered(System.Int32*,System.Int32)
  commentId: M:Netick.Entity.MarkAltered(System.Int32*,System.Int32)
  id: MarkAltered(System.Int32*,System.Int32)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: MarkAltered(int*, int)
  nameWithType: Entity.MarkAltered(int*, int)
  fullName: Netick.Entity.MarkAltered(int*, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool MarkAltered(int* p, int isInputSourceOnly = 0)
    parameters:
    - id: p
      type: System.Int32*
    - id: isInputSourceOnly
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function MarkAltered(p As Integer*, isInputSourceOnly As Integer = 0) As Boolean
  overload: Netick.Entity.MarkAltered*
  nameWithType.vb: Entity.MarkAltered(Integer*, Integer)
  fullName.vb: Netick.Entity.MarkAltered(Integer*, Integer)
  name.vb: MarkAltered(Integer*, Integer)
- uid: Netick.Entity.InterestMarkAltered(System.Int32,System.Int32)
  commentId: M:Netick.Entity.InterestMarkAltered(System.Int32,System.Int32)
  id: InterestMarkAltered(System.Int32,System.Int32)
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: InterestMarkAltered(int, int)
  nameWithType: Entity.InterestMarkAltered(int, int)
  fullName: Netick.Entity.InterestMarkAltered(int, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool InterestMarkAltered(int index, int isInputSourceOnly = 0)
    parameters:
    - id: index
      type: System.Int32
    - id: isInputSourceOnly
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function InterestMarkAltered(index As Integer, isInputSourceOnly As Integer = 0) As Boolean
  overload: Netick.Entity.InterestMarkAltered*
  nameWithType.vb: Entity.InterestMarkAltered(Integer, Integer)
  fullName.vb: Netick.Entity.InterestMarkAltered(Integer, Integer)
  name.vb: InterestMarkAltered(Integer, Integer)
- uid: Netick.Entity.IsInterested
  commentId: P:Netick.Entity.IsInterested
  id: IsInterested
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: IsInterested
  nameWithType: Entity.IsInterested
  fullName: Netick.Entity.IsInterested
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsInterested { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInterested As Boolean
  overload: Netick.Entity.IsInterested*
- uid: Netick.Entity.InterestGroup
  commentId: P:Netick.Entity.InterestGroup
  id: InterestGroup
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: InterestGroup
  nameWithType: Entity.InterestGroup
  fullName: Netick.Entity.InterestGroup
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public InterestManagementGroup InterestGroup { get; set; }
    parameters: []
    return:
      type: Netick.InterestManagementGroup
    content.vb: Public Property InterestGroup As InterestManagementGroup
  overload: Netick.Entity.InterestGroup*
- uid: Netick.Entity.IsPredicted
  commentId: P:Netick.Entity.IsPredicted
  id: IsPredicted
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: IsPredicted
  nameWithType: Entity.IsPredicted
  fullName: Netick.Entity.IsPredicted
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsPredicted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPredicted As Boolean
  overload: Netick.Entity.IsPredicted*
- uid: Netick.Entity.InputSourcePlayerId
  commentId: P:Netick.Entity.InputSourcePlayerId
  id: InputSourcePlayerId
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: InputSourcePlayerId
  nameWithType: Entity.InputSourcePlayerId
  fullName: Netick.Entity.InputSourcePlayerId
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetworkPlayerId InputSourcePlayerId { get; }
    parameters: []
    return:
      type: Netick.NetworkPlayerId
    content.vb: Public ReadOnly Property InputSourcePlayerId As NetworkPlayerId
  overload: Netick.Entity.InputSourcePlayerId*
- uid: Netick.Entity.InputSource
  commentId: P:Netick.Entity.InputSource
  id: InputSource
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: InputSource
  nameWithType: Entity.InputSource
  fullName: Netick.Entity.InputSource
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public NetworkPlayer InputSource { get; set; }
    parameters: []
    return:
      type: Netick.NetworkPlayer
    content.vb: Public Property InputSource As NetworkPlayer
  overload: Netick.Entity.InputSource*
- uid: Netick.Entity.IsInputSource
  commentId: P:Netick.Entity.IsInputSource
  id: IsInputSource
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: IsInputSource
  nameWithType: Entity.IsInputSource
  fullName: Netick.Entity.IsInputSource
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsInputSource { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInputSource As Boolean
  overload: Netick.Entity.IsInputSource*
- uid: Netick.Entity.IsProxy
  commentId: P:Netick.Entity.IsProxy
  id: IsProxy
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: IsProxy
  nameWithType: Entity.IsProxy
  fullName: Netick.Entity.IsProxy
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsProxy { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsProxy As Boolean
  overload: Netick.Entity.IsProxy*
- uid: Netick.Entity.IsOwner
  commentId: P:Netick.Entity.IsOwner
  id: IsOwner
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: IsOwner
  nameWithType: Entity.IsOwner
  fullName: Netick.Entity.IsOwner
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsOwner { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOwner As Boolean
  overload: Netick.Entity.IsOwner*
- uid: Netick.Entity.IsResimulating
  commentId: P:Netick.Entity.IsResimulating
  id: IsResimulating
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: IsResimulating
  nameWithType: Entity.IsResimulating
  fullName: Netick.Entity.IsResimulating
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsResimulating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResimulating As Boolean
  overload: Netick.Entity.IsResimulating*
- uid: Netick.Entity.AdaptiveRemoteInterpolation
  commentId: P:Netick.Entity.AdaptiveRemoteInterpolation
  id: AdaptiveRemoteInterpolation
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: AdaptiveRemoteInterpolation
  nameWithType: Entity.AdaptiveRemoteInterpolation
  fullName: Netick.Entity.AdaptiveRemoteInterpolation
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public AdaptiveRemoteInterpolation AdaptiveRemoteInterpolation { get; }
    parameters: []
    return:
      type: Netick.AdaptiveRemoteInterpolation
    content.vb: Public ReadOnly Property AdaptiveRemoteInterpolation As AdaptiveRemoteInterpolation
  overload: Netick.Entity.AdaptiveRemoteInterpolation*
- uid: Netick.Entity.Id
  commentId: P:Netick.Entity.Id
  id: Id
  parent: Netick.Entity
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Entity.Id
  fullName: Netick.Entity.Id
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Id As Integer
  overload: Netick.Entity.Id*
references:
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Netick.NetickEngine
  commentId: T:Netick.NetickEngine
  parent: Netick
  isExternal: true
  href: Netick.NetickEngine.html
  name: NetickEngine
  nameWithType: NetickEngine
  fullName: Netick.NetickEngine
- uid: Netick.INetickEntity
  commentId: T:Netick.INetickEntity
  parent: Netick
  isExternal: true
  href: Netick.INetickEntity.html
  name: INetickEntity
  nameWithType: INetickEntity
  fullName: Netick.INetickEntity
- uid: Netick.NetickUniqueObjectMeta
  commentId: T:Netick.NetickUniqueObjectMeta
  parent: Netick
  isExternal: true
  href: Netick.NetickUniqueObjectMeta.html
  name: NetickUniqueObjectMeta
  nameWithType: NetickUniqueObjectMeta
  fullName: Netick.NetickUniqueObjectMeta
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Int32*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int*
  nameWithType: int*
  fullName: int*
  nameWithType.vb: Integer*
  fullName.vb: Integer*
  name.vb: Integer*
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
- uid: Netick.Entity.Move*
  commentId: Overload:Netick.Entity.Move
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_Move_System_Numerics_Vector3_
  name: Move
  nameWithType: Entity.Move
  fullName: Netick.Entity.Move
- uid: Netick.Entity.SetNarrowphaseInterest*
  commentId: Overload:Netick.Entity.SetNarrowphaseInterest
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_SetNarrowphaseInterest_Netick_NetworkPlayer_System_Boolean_
  name: SetNarrowphaseInterest
  nameWithType: Entity.SetNarrowphaseInterest
  fullName: Netick.Entity.SetNarrowphaseInterest
- uid: Netick.NetworkPlayer
  commentId: T:Netick.NetworkPlayer
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayer.html
  name: NetworkPlayer
  nameWithType: NetworkPlayer
  fullName: Netick.NetworkPlayer
- uid: Netick.Entity.InternalDirtify*
  commentId: Overload:Netick.Entity.InternalDirtify
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_InternalDirtify_Netick_INetickNetworkScript_System_Int32__System_Int32__System_Int32_System_Int32_System_Int32_
  name: InternalDirtify
  nameWithType: Entity.InternalDirtify
  fullName: Netick.Entity.InternalDirtify
- uid: Netick.INetickNetworkScript
  commentId: T:Netick.INetickNetworkScript
  parent: Netick
  isExternal: true
  href: Netick.INetickNetworkScript.html
  name: INetickNetworkScript
  nameWithType: INetickNetworkScript
  fullName: Netick.INetickNetworkScript
- uid: Netick.Entity.InternalRegOnChanged*
  commentId: Overload:Netick.Entity.InternalRegOnChanged
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_InternalRegOnChanged_Netick_INetickNetworkScript_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_Netick_OnChangedEvent_
  name: InternalRegOnChanged
  nameWithType: Entity.InternalRegOnChanged
  fullName: Netick.Entity.InternalRegOnChanged
- uid: Netick.OnChangedEvent
  commentId: T:Netick.OnChangedEvent
  parent: Netick
  isExternal: true
  href: Netick.OnChangedEvent.html
  name: OnChangedEvent
  nameWithType: OnChangedEvent
  fullName: Netick.OnChangedEvent
- uid: Netick.Entity.InternalRegSmooth*
  commentId: Overload:Netick.Entity.InternalRegSmooth
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_InternalRegSmooth_Netick_INetickNetworkScript_System_String_System_Int32_System_Single_System_Int32_
  name: InternalRegSmooth
  nameWithType: Entity.InternalRegSmooth
  fullName: Netick.Entity.InternalRegSmooth
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Netick.Entity.GetStateSizeWords*
  commentId: Overload:Netick.Entity.GetStateSizeWords
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_GetStateSizeWords_Netick_INetickNetworkScript___
  name: GetStateSizeWords
  nameWithType: Entity.GetStateSizeWords
  fullName: Netick.Entity.GetStateSizeWords
- uid: Netick.INetickNetworkScript[]
  isExternal: true
  href: Netick.INetickNetworkScript.html
  name: INetickNetworkScript[]
  nameWithType: INetickNetworkScript[]
  fullName: Netick.INetickNetworkScript[]
  nameWithType.vb: INetickNetworkScript()
  fullName.vb: Netick.INetickNetworkScript()
  name.vb: INetickNetworkScript()
  spec.csharp:
  - uid: Netick.INetickNetworkScript
    name: INetickNetworkScript
    isExternal: true
    href: Netick.INetickNetworkScript.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Netick.INetickNetworkScript
    name: INetickNetworkScript
    isExternal: true
    href: Netick.INetickNetworkScript.html
  - name: (
  - name: )
- uid: Netick.Entity.GetStateRef*
  commentId: Overload:Netick.Entity.GetStateRef
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_GetStateRef
  name: GetStateRef
  nameWithType: Entity.GetStateRef
  fullName: Netick.Entity.GetStateRef
- uid: Netick.EntityStateRef
  commentId: T:Netick.EntityStateRef
  parent: Netick
  isExternal: true
  href: Netick.EntityStateRef.html
  name: EntityStateRef
  nameWithType: EntityStateRef
  fullName: Netick.EntityStateRef
- uid: Netick.Entity.InvokeGameEngineIntoNetcode*
  commentId: Overload:Netick.Entity.InvokeGameEngineIntoNetcode
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_InvokeGameEngineIntoNetcode
  name: InvokeGameEngineIntoNetcode
  nameWithType: Entity.InvokeGameEngineIntoNetcode
  fullName: Netick.Entity.InvokeGameEngineIntoNetcode
- uid: Netick.Entity.InvokeNetcodeIntoGameEngine*
  commentId: Overload:Netick.Entity.InvokeNetcodeIntoGameEngine
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_InvokeNetcodeIntoGameEngine
  name: InvokeNetcodeIntoGameEngine
  nameWithType: Entity.InvokeNetcodeIntoGameEngine
  fullName: Netick.Entity.InvokeNetcodeIntoGameEngine
- uid: Netick.Entity.SetStateFrom*
  commentId: Overload:Netick.Entity.SetStateFrom
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_SetStateFrom_System_Byte__System_Int32_System_Int32_System_Boolean_
  name: SetStateFrom
  nameWithType: Entity.SetStateFrom
  fullName: Netick.Entity.SetStateFrom
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: Netick.Entity.SetState*
  commentId: Overload:Netick.Entity.SetState
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_SetState_System_Int32__System_Int32__System_Int32_System_Int32_System_Int32_
  name: SetState
  nameWithType: Entity.SetState
  fullName: Netick.Entity.SetState
- uid: Netick.Entity.SetState_Collection*
  commentId: Overload:Netick.Entity.SetState_Collection
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_SetState_Collection_System_Int32__System_Int32__System_Int32_System_Int32_System_Int32_System_Int32_
  name: SetState_Collection
  nameWithType: Entity.SetState_Collection
  fullName: Netick.Entity.SetState_Collection
- uid: Netick.Entity.MarkAltered*
  commentId: Overload:Netick.Entity.MarkAltered
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_MarkAltered_System_Int32__System_Int32_
  name: MarkAltered
  nameWithType: Entity.MarkAltered
  fullName: Netick.Entity.MarkAltered
- uid: Netick.Entity.InterestMarkAltered*
  commentId: Overload:Netick.Entity.InterestMarkAltered
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_InterestMarkAltered_System_Int32_System_Int32_
  name: InterestMarkAltered
  nameWithType: Entity.InterestMarkAltered
  fullName: Netick.Entity.InterestMarkAltered
- uid: Netick.Entity.IsInterested*
  commentId: Overload:Netick.Entity.IsInterested
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_IsInterested
  name: IsInterested
  nameWithType: Entity.IsInterested
  fullName: Netick.Entity.IsInterested
- uid: Netick.Entity.InterestGroup*
  commentId: Overload:Netick.Entity.InterestGroup
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_InterestGroup
  name: InterestGroup
  nameWithType: Entity.InterestGroup
  fullName: Netick.Entity.InterestGroup
- uid: Netick.InterestManagementGroup
  commentId: T:Netick.InterestManagementGroup
  parent: Netick
  isExternal: true
  href: Netick.InterestManagementGroup.html
  name: InterestManagementGroup
  nameWithType: InterestManagementGroup
  fullName: Netick.InterestManagementGroup
- uid: Netick.Entity.IsPredicted*
  commentId: Overload:Netick.Entity.IsPredicted
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_IsPredicted
  name: IsPredicted
  nameWithType: Entity.IsPredicted
  fullName: Netick.Entity.IsPredicted
- uid: Netick.Entity.InputSourcePlayerId*
  commentId: Overload:Netick.Entity.InputSourcePlayerId
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_InputSourcePlayerId
  name: InputSourcePlayerId
  nameWithType: Entity.InputSourcePlayerId
  fullName: Netick.Entity.InputSourcePlayerId
- uid: Netick.NetworkPlayerId
  commentId: T:Netick.NetworkPlayerId
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayerId.html
  name: NetworkPlayerId
  nameWithType: NetworkPlayerId
  fullName: Netick.NetworkPlayerId
- uid: Netick.Entity.InputSource*
  commentId: Overload:Netick.Entity.InputSource
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_InputSource
  name: InputSource
  nameWithType: Entity.InputSource
  fullName: Netick.Entity.InputSource
- uid: Netick.Entity.IsInputSource*
  commentId: Overload:Netick.Entity.IsInputSource
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_IsInputSource
  name: IsInputSource
  nameWithType: Entity.IsInputSource
  fullName: Netick.Entity.IsInputSource
- uid: Netick.Entity.IsProxy*
  commentId: Overload:Netick.Entity.IsProxy
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_IsProxy
  name: IsProxy
  nameWithType: Entity.IsProxy
  fullName: Netick.Entity.IsProxy
- uid: Netick.Entity.IsOwner*
  commentId: Overload:Netick.Entity.IsOwner
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_IsOwner
  name: IsOwner
  nameWithType: Entity.IsOwner
  fullName: Netick.Entity.IsOwner
- uid: Netick.Entity.IsResimulating*
  commentId: Overload:Netick.Entity.IsResimulating
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_IsResimulating
  name: IsResimulating
  nameWithType: Entity.IsResimulating
  fullName: Netick.Entity.IsResimulating
- uid: Netick.Entity.AdaptiveRemoteInterpolation*
  commentId: Overload:Netick.Entity.AdaptiveRemoteInterpolation
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_AdaptiveRemoteInterpolation
  name: AdaptiveRemoteInterpolation
  nameWithType: Entity.AdaptiveRemoteInterpolation
  fullName: Netick.Entity.AdaptiveRemoteInterpolation
- uid: Netick.AdaptiveRemoteInterpolation
  commentId: T:Netick.AdaptiveRemoteInterpolation
  parent: Netick
  isExternal: true
  href: Netick.AdaptiveRemoteInterpolation.html
  name: AdaptiveRemoteInterpolation
  nameWithType: AdaptiveRemoteInterpolation
  fullName: Netick.AdaptiveRemoteInterpolation
- uid: Netick.Entity.Id*
  commentId: Overload:Netick.Entity.Id
  isExternal: true
  href: Netick.Entity.html#Netick_Entity_Id
  name: Id
  nameWithType: Entity.Id
  fullName: Netick.Entity.Id
